{"config":{"lang":["en"],"separator":"[\\s\\-\\.\\_\\\u00b7]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"\u4ee5\u6492\u7684\u7ed3\u5408\uff1a\u5fcf\u6094Lua API\u6587\u6863","text":"<p>\u672c\u6587\u6863\u662f\u4e00\u4e2a\u793e\u533a\u7b56\u5212\u7684\u9879\u76ee\uff0c\u4e3a\u300a\u4ee5\u6492\u7684\u7ed3\u5408\uff1a\u5fcf\u6094\u300bLua Mod API\u63d0\u4f9b\u7684\u529f\u80fd\u63d0\u4f9b\u4e86\u9644\u52a0\u4fe1\u606f\u548c\u4ee3\u7801\u793a\u4f8b\u3002</p> <p>\u8be5\u9879\u76ee\u6e90\u4e8ewofsauge\u7684\u82f1\u6587\u6587\u6863  Github Project</p> <p>\u5982\u679c\u4f60\u60f3\u5e2e\u5fd9\u534f\u52a9\u8be5\u9879\u76ee\uff0c\u8003\u8651\u8bbf\u95ee  Github Project</p> <p>\u5982\u679c\u4f60\u5bf9\u5236\u4f5cMOD\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8bbf\u95ee\u5b98\u65b9Discord\uff1a</p> <p> Official BoI Discord-Server or  Official Modding Of Isaac Discord-Server</p>","boost":-999},{"location":"BitSet128.html","title":"Class \"BitSet128\"","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#bitset128","title":"BitSet128 ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#bitset128-bitset128-int-low-0-int-high-0","title":"BitSet128 BitSet128 ( int Low = 0, int High = 0 )","text":"<p>Constructor for the \"BitSet128\" class.</p> <p>BitSet128 is used as a storage system for flags and other bit-wise evaluated values that exceed the numeric limits of the default 64-bit integers which only allow for up to 64 flags to be defined. BitSet128 allows for up to 128 Flags by spliting the bitset into a \"lower\" and \"higher\" part. Those parts are represented by a simple 64bit integer number.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#operators","title":"Operators","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#__bnot","title":"__bnot ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#bitset128-__bnot","title":"BitSet128 __bnot ( )","text":"<p>Defines the negation of a BitSet128 object using the <code>~</code> operator.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#__bor","title":"__bor ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#bitset128-__bor-bitset128-right","title":"BitSet128 __bor ( BitSet128 Right )","text":"<p>Defines the binary OR operation of two BitSet128 objects using the <code>|</code> operator.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#__band","title":"__band ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#bitset128-__band-bitset128-right","title":"BitSet128 __band ( BitSet128 Right )","text":"<p>Defines the binary AND operation of two BitSet128 objects using the <code>&amp;</code> operator.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#__bxor","title":"__bxor ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#bitset128-__bxor-bitset128-right","title":"BitSet128 __bxor ( BitSet128 Right )","text":"<p>Defines the binary XOR operation of two BitSet128 objects using the <code>~</code> operator.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#__shl","title":"__shl ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#bitset128-__shl-int-shift","title":"BitSet128 __shl ( int Shift )","text":"<p>Defines the left bit-shift operator of a BitSet128 object using the <code>&lt;&lt;</code> operator.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#__shr","title":"__shr ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#bitset128-__shr-int-shift","title":"BitSet128 __shr ( int Shift )","text":"<p>Defines the right bit-shift operator of a BitSet128 object using the <code>&gt;&gt;</code> operator.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#__eq","title":"__eq ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#boolean-__eq-bitset128-right","title":"boolean __eq ( BitSet128 right )","text":"<p>Defines the equality operation of two BitSet128 objects using the <code>==</code> operator.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#__lt","title":"__lt ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#boolean-__lt-bitset128-right","title":"boolean __lt ( BitSet128 right )","text":"<p>Defines the \"smaller than\"-Operation of two BitSet128 objects using the <code>&lt;</code> operator.</p> <p>The <code>&gt;</code> operator is implicitly defined with this as well.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#__le","title":"__le ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#boolean-__le-bitset128-right","title":"boolean __le ( BitSet128 right )","text":"<p>Defines the \"smaller of equal\" operation of two BitSet128 objects using the <code>&lt;=</code> operator.</p> <p>The <code>&gt;=</code> operator is implicitly defined with this as well.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#functions","title":"Functions","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#get","title":"Get ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#boolean-get-int-bitposition","title":"boolean Get ( int BitPosition )","text":"<p>Gets the flags' value at the provided position.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#set","title":"Set ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#void-set-int-bitposition-boolean-state","title":"void Set ( int BitPosition, boolean State )","text":"<p>Sets the bit at the given position to the given value.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#__tostring","title":"__tostring ()","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#void-__tostring","title":"void __tostring ( )","text":"<p>BitSet128 objects can be cast to a string object, which returns information about this object in the following format:</p> <pre><code>BitSet128: [[High+Low values converted into Hexadecimal]]\n</code></pre>","tags":["Globals","Class"]},{"location":"BitSet128.html#variables","title":"Variables","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#h","title":"h","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#int-h","title":"int h","text":"<p>Returns the number representing the \"High\" or \"upper\" 64-bit number of the 128bit BitSet128 object.</p>","tags":["Globals","Class"]},{"location":"BitSet128.html#l","title":"l","text":"","tags":["Globals","Class"]},{"location":"BitSet128.html#int-l","title":"int l","text":"<p>Returns the number representing the \"Low\" or \"lower\" 64-bit number of the 128bit BitSet128 object.</p>","tags":["Globals","Class"]},{"location":"Color.html","title":"Class \"Color\"","text":"","tags":["Globals","Class"]},{"location":"Color.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"]},{"location":"Color.html#color","title":"Color ()","text":"","tags":["Globals","Class"]},{"location":"Color.html#color-color-float-r-float-g-float-b-float-a-1-float-ro-0-float-go-0-float-bo-0","title":"Color Color ( float R, float G, float B, float A = 1, float RO = 0, float GO = 0, float BO = 0 )","text":"<p>Constructor for the \"Color\" class.</p> <p>When using the Font class, use KColor() instead.</p> <p>Colors are made of three separate components, tint, colorize and offset. Tint acts like a color multiplicator. Offset is a color which is added after the tint is applied. Colorize is complicated. See the <code>SetColorize()</code> function for a detailed description.</p> <p>R, G, B, A, RO, GO and BO accept numbers between 0 and 1.</p>","tags":["Globals","Class"]},{"location":"Color.html#operators","title":"Operators","text":"","tags":["Globals","Class"]},{"location":"Color.html#__mul","title":"__mul ()","text":"","tags":["Globals","Class"]},{"location":"Color.html#color-__mul-color-right","title":"Color __mul ( Color right )","text":"<p>Defines the multiplication of two Color objects using the <code>*</code> operator.</p>","tags":["Globals","Class"]},{"location":"Color.html#constants","title":"Constants","text":"","tags":["Globals","Class"]},{"location":"Color.html#colordefault","title":"Color.Default","text":"","tags":["Globals","Class"]},{"location":"Color.html#functions","title":"Functions","text":"","tags":["Globals","Class"]},{"location":"Color.html#lerp","title":"Lerp ()","text":"","tags":["Globals","Class"]},{"location":"Color.html#static-color-lerp-color-m1-color-m2-float-t","title":"static Color Lerp ( Color m1, Color m2, float t )","text":"<p>Linear Interpolation between two colors. <code>t</code> is the \"progress\" of the interpolation. Setting <code>t = 0.5</code> means that the color in the middle of m1 and m2 will be returned.</p>","tags":["Globals","Class"]},{"location":"Color.html#reset","title":"Reset ()","text":"","tags":["Globals","Class"]},{"location":"Color.html#void-reset","title":"void Reset ( )","text":"","tags":["Globals","Class"]},{"location":"Color.html#setcolorize","title":"Set\u00b7Colorize ()","text":"","tags":["Globals","Class"]},{"location":"Color.html#void-setcolorize-float-red-float-green-float-blue-float-amount","title":"void SetColorize ( float Red, float Green, float Blue, float Amount )","text":"<p>The colorize function can be used to change the color of sprites. Its the best for that purpose, since it does not affect existing coloranimations like the flashing of creep.</p> <p>The values can be between 0 and 1 for normal coloration. if you use higher numbers the color gets more vibrant.</p> Notes <p>The alpha component determines how much colorization must be applied. The function takes the original color, converts it to grayscale, multiplies it by the RGB components and then blends it back with the original color. The alpha value determines the blending factor. Colorization is applied after the tint and before the offset function.</p> Example Code <ul> <li><code>SetColorize(1, 1, 1, 1)</code> will turn the sprite into grayscale.</li> <li><code>SetColorize(1, 0, 0, 1)</code> will turn it red but not as a red tint but as shades of red.</li> <li><code>SetColorize(1, 1, 1, 2)</code> will invert the sprite without touching its luminosity.</li> </ul> <p>This code changes the color of red Creep to be purple <pre><code>mod:AddCallback(ModCallbacks.MC_POST_EFFECT_INIT, function(_, effect)\n  if effect.Variant == EffectVariant.CREEP_RED then\n    local color = Color(1, 1, 1, 1, 0, 0, 0)\n    color:SetColorize(4, 0, 4, 1)\n    local sprite = effect:GetSprite()\n    sprite.Color = color\n  end\nend)\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Color.html#setoffset","title":"Set\u00b7Offset ()","text":"","tags":["Globals","Class"]},{"location":"Color.html#void-setoffset-float-redoffset-float-greenoffset-float-blueoffset","title":"void SetOffset ( float RedOffset, float GreenOffset, float BlueOffset )","text":"<p>Offset is a color that gets added to the sprite after the Tint was applied.</p>","tags":["Globals","Class"]},{"location":"Color.html#settint","title":"Set\u00b7Tint ()","text":"","tags":["Globals","Class"]},{"location":"Color.html#void-settint-float-redtint-float-greentint-float-bluetint-float-alphatint","title":"void SetTint ( float RedTint, float GreenTint, float BlueTint, float AlphaTint )","text":"<p>Tint acts like a color multiplicator.</p>","tags":["Globals","Class"]},{"location":"Color.html#variables","title":"Variables","text":"","tags":["Globals","Class"]},{"location":"Color.html#a","title":"A","text":"","tags":["Globals","Class"]},{"location":"Color.html#float-a","title":"float A","text":"<p>Alpha value of the color, where 0 is fully transparent, 1 is fully opaque.</p>","tags":["Globals","Class"]},{"location":"Color.html#b","title":"B","text":"","tags":["Globals","Class"]},{"location":"Color.html#float-b","title":"float B","text":"<p>Blue value of the color. Number between 0 and 1.</p>","tags":["Globals","Class"]},{"location":"Color.html#bo","title":"BO","text":"","tags":["Globals","Class"]},{"location":"Color.html#float-bo","title":"float BO","text":"<p>Blue-Offset value of the color. Number can be positive or negative.</p>","tags":["Globals","Class"]},{"location":"Color.html#g","title":"G","text":"","tags":["Globals","Class"]},{"location":"Color.html#float-g","title":"float G","text":"<p>Green value of the color. Number between 0 and 1.</p>","tags":["Globals","Class"]},{"location":"Color.html#go","title":"GO","text":"","tags":["Globals","Class"]},{"location":"Color.html#float-go","title":"float GO","text":"<p>Green-Offset value of the color. Number can be positive or negative.</p>","tags":["Globals","Class"]},{"location":"Color.html#r","title":"R","text":"","tags":["Globals","Class"]},{"location":"Color.html#float-r","title":"float R","text":"<p>Red value of the color. Number between 0 and 1.</p>","tags":["Globals","Class"]},{"location":"Color.html#ro","title":"RO","text":"","tags":["Globals","Class"]},{"location":"Color.html#float-ro","title":"float RO","text":"<p>Red-Offset value of the color. Number can be positive or negative.</p>","tags":["Globals","Class"]},{"location":"CppContainer_ArrayProxy_RoomConfigEntries.html","title":"Class \"RoomConfigEntries\"","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigEntries.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigEntries.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigEntries.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the size of this list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigEntries.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigEntries.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigEntries.html#userdata-get-int-idx","title":"userdata Get ( int idx )","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigEntries.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigEntries.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigEntries.html#const-int-size","title":"const int Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns.html","title":"Class \"RoomConfigSpawns\"","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the amount of spawnables in this list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns.html#roomconfig-spawn-get-int-idx","title":"RoomConfig Spawn Get ( int idx )","text":"<p>Returns a RoomConfig Spawn at the index of the list provided.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomConfigSpawns.html#const-int-size","title":"const int Size","text":"<p>The amount of spawnables in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomDescriptor.html","title":"Class \"RoomDescriptor\"","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomDescriptor.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomDescriptor.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomDescriptor.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the amount of rooms in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomDescriptor.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomDescriptor.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomDescriptor.html#roomdescriptor-get-int-idx","title":"RoomDescriptor Get ( int idx )","text":"<p>Returns a RoomDescriptor at the index of the list provided.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomDescriptor.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomDescriptor.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_RoomDescriptor.html#const-int-size","title":"const int Size","text":"<p>The amount of rooms in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_intValues.html","title":"Class \"intValues\"","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_intValues.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_intValues.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_intValues.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the size of this list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_intValues.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_intValues.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_intValues.html#userdata-get-int-idx","title":"userdata Get ( int idx )","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_intValues.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_intValues.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_ArrayProxy_intValues.html#const-int-size","title":"const int Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_EntityList.html","title":"Class \"EntityList\"","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_EntityList.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_EntityList.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_EntityList.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the amount of entities in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_EntityList.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_EntityList.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_EntityList.html#entity-get-int-idx","title":"Entity Get ( int idx )","text":"<p>Returns an Entity at the index of the list provided.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_EntityList.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_EntityList.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_EntityList.html#const-int-size","title":"const int Size","text":"<p>The amount of entities in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CardConfigList.html","title":"Class \"CardConfigList\"","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CardConfigList.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CardConfigList.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CardConfigList.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the amount of cards in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CardConfigList.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CardConfigList.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CardConfigList.html#userdata-get-int-idx","title":"userdata Get ( int idx )","text":"<p>Returns userdata at the index of the list provided.</p> Bugs <p>This function does not return usable userdata, rendering it useless.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CardConfigList.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CardConfigList.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CardConfigList.html#const-int-size","title":"const int Size","text":"<p>The amount of cards in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CostumeConfigList.html","title":"Class \"CostumeConfigList\"","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CostumeConfigList.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CostumeConfigList.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CostumeConfigList.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the amount of costumes in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CostumeConfigList.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CostumeConfigList.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CostumeConfigList.html#userdata-get-int-idx","title":"userdata Get ( int idx )","text":"<p>Returns userdata at the index of the list provided.</p> Bugs <p>This function does not return usable userdata, rendering it useless.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CostumeConfigList.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CostumeConfigList.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_CostumeConfigList.html#const-int-size","title":"const int Size","text":"<p>The amount of costumes in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_EffectList.html","title":"Class \"EffectList\"","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_EffectList.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_EffectList.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_EffectList.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the amount of TemporaryEffects in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_EffectList.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_EffectList.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_EffectList.html#temporaryeffect-get-int-idx","title":"TemporaryEffect Get ( int idx )","text":"<p>Returns the TemporaryEffect at the index of the list provided.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_EffectList.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_EffectList.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_EffectList.html#const-int-size","title":"const int Size","text":"<p>The amount of TemporaryEffects in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_ItemConfigList.html","title":"Class \"ItemConfigList\"","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_ItemConfigList.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_ItemConfigList.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_ItemConfigList.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the amount of items in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_ItemConfigList.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_ItemConfigList.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_ItemConfigList.html#userdata-get-int-idx","title":"userdata Get ( int idx )","text":"<p>Returns userdata at the index of the list provided.</p> Bugs <p>This function does not return usable userdata, rendering it useless.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_ItemConfigList.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_ItemConfigList.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_ItemConfigList.html#const-int-size","title":"const int Size","text":"<p>The amount of items in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_PillConfigList.html","title":"Class \"PillConfigList\"","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_PillConfigList.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_PillConfigList.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_PillConfigList.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the amount of pill effects in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_PillConfigList.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_PillConfigList.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_PillConfigList.html#userdata-get-int-idx","title":"userdata Get ( int idx )","text":"<p>Returns userdata at the index of the list provided.</p> Bugs <p>This function does not return usable userdata, rendering it useless.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_PillConfigList.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_PillConfigList.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_PillConfigList.html#const-int-size","title":"const int Size","text":"<p>The amount of pill effects in the list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_VectorList.html","title":"Class \"VectorList\"","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_VectorList.html#operators","title":"Operators","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_VectorList.html#__len","title":"__len ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_VectorList.html#int-__len","title":"int __len ( )","text":"<p>The length (#) operation. Returns the size of this list.</p>","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_VectorList.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_VectorList.html#get","title":"Get ()","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_VectorList.html#vector-get-int-idx","title":"Vector Get ( int idx )","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_VectorList.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_VectorList.html#size","title":"Size","text":"","tags":["Class"],"boost":0.25},{"location":"CppContainer_Vector_VectorList.html#const-int-size","title":"const int Size","text":"","tags":["Class"],"boost":0.25},{"location":"Entity.html","title":"Class \"Entity\"","text":"<p>First, see the tutorial on entities.</p>","tags":["Class"]},{"location":"Entity.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"Entity.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Entity.html#addburn","title":"Add\u00b7Burn ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addburn-entityref-source-int-duration-float-damage","title":"void AddBurn ( EntityRef Source, int Duration, float Damage )","text":"<p>Adds a burn effect to an enemy. <code>Duration</code> is in number of frames. <code>Damage</code> is the damage taken per frame.</p> Duration Information <p><code>Duration</code> must be a minimum of 3 frames to deal damage. Every consecutive damage tick is 20 frames apart.</p> <ul> <li>2 damage ticks = 23 frames</li> <li>3 damage ticks = 43 frames</li> <li>4 damage ticks = 63 frames</li> </ul> <p><code>Duration</code> has an upper limit. For an EntityPlayer, it maximum is one interval. For a normal entity, the maximum is 6 intervals.</p> Example Code <p>This code damages every entity in the room for 1 second with the damage source set to the player. The total damage dealt is 1.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal entities = Isaac.GetRoomEntities()\nfor i, entity in ipairs(entities) do\n    entity:AddBurn(EntityRef(player), 30, 1)\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#addcharmed","title":"Add\u00b7Charmed ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addcharmed-entityref-sourceentity-int-duration","title":"void AddCharmed ( EntityRef sourceEntity, int Duration )","text":"<p>Adds a charmed-effect to an enemy. Duration is in Number of Frames. Charmed enemies are friendly towards isaac and attack other enemies.</p> <p><code>Duration = -1</code> makes the effect permanent and the enemy will follow you even to different rooms.</p> Example Code <p>This code charms every entity in the room for 1 second.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal entities = Isaac.GetRoomEntities()\nfor i, entity in ipairs() do\n    entity:AddCharmed(EntityRef(player), 30)\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#addconfusion","title":"Add\u00b7Confusion ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addconfusion-entityref-source-int-duration-boolean-ignorebosses","title":"void AddConfusion ( EntityRef Source, int Duration, boolean IgnoreBosses )","text":"<p>Adds a confusion effect to an entity.</p> Duration infos <p>The Duration has a maximum of 5 seconds</p> Example Code <p>This code confuses every entity in the room for 1 second while ignoring bosses.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal entities = Isaac.GetRoomEntities()\nfor i, entity in ipairs(entities) do\n    entity:AddConfusion(EntityRef(player), 30, true)\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#addentityflags","title":"Add\u00b7Entity\u00b7Flags ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addentityflags-int-flags","title":"void AddEntityFlags ( int Flags )","text":"<p>Add EntityFlags to the entity. Flags are used to add specific effects like being friendly or being immune from spike damage. You can add multiple flags at the same time by bitwise-concatenating them.</p> Example Code <p>This code adds slowing and confusion to the enetity.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal entities = Isaac.GetRoomEntities()\nfor i, entity in ipairs(entities) do\n    entity:AddEntityFlags(EntityFlag.FLAG_SLOW | EntityFlag.FLAG_CONFUSION)\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#addfear","title":"Add\u00b7Fear ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addfear-entityref-source-int-duration","title":"void AddFear ( EntityRef Source, int Duration )","text":"<p>Adds a fear-effect to an entity.</p> Duration infos <p>The Duration has a maximum of 5 seconds</p> Example Code <p>This code frightens every entity in the room for 1 second.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal entities = Isaac.GetRoomEntities()\nfor i, entity in ipairs(entities) do\n    entity:AddFear(EntityRef(player), 30)\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#addfreeze","title":"Add\u00b7Freeze ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addfreeze-entityref-source-int-duration","title":"void AddFreeze ( EntityRef Source, int Duration )","text":"<p>Freezes an entity, making it unable to move and attack.</p> Duration infos <p>The Duration has a maximum of 5 seconds</p> Example Code <p>This code freezes every entity in the room for 1 second.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal entities = Isaac.GetRoomEntities()\nfor i, entity in ipairs(entities) do\n    entity:AddFreeze(EntityRef(player), 30)\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#addhealth","title":"Add\u00b7Health ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addhealth-float-hitpoints","title":"void AddHealth ( float HitPoints )","text":"<p>Heals an entity.</p>","tags":["Class"]},{"location":"Entity.html#addmidasfreeze","title":"Add\u00b7Midas\u00b7Freeze ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addmidasfreeze-entityref-source-int-duration","title":"void AddMidasFreeze ( EntityRef Source, int Duration )","text":"<p>Turns the entity into a gold statue (can't move, can't attack, drops coins when killed)</p> Duration infos <p>The Duration has a maximum of 5 seconds</p> Bug <p>The golden color applied to the entity will stay for the full duration passed into the function, despite the freeze effect only lasting for a maximum of 5 seconds.</p> Example Code <p>This code turns every entity in the room into gold for 1 second.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal entities = Isaac.GetRoomEntities()\nfor i, entity in ipairs(entities) do\n    entity:AddMidasFreeze(EntityRef(player), 30)\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#addpoison","title":"Add\u00b7Poison ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addpoison-entityref-source-int-duration-float-damage","title":"void AddPoison ( EntityRef Source, int Duration, float Damage )","text":"<p>Adds a poison effect to the entity.</p> Duration infos <p>The Duration must be a minimum of 3 frames to deal damage. Every consecutive damage tick is 20 frames apart.</p> <pre><code>2 Damage-ticks = 23 frames\n3 = 43\n4 = 63\n...\n</code></pre> Bug <p>The Duration value seems to have an upper limit. For a PlayerEntity, its only lasting for the duration of one damage interval. For Entities its up to 6 damage-intervals.</p> Example Code <p>This code applies a poison effect to every entity in the room for 1 second.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal entities = Isaac.GetRoomEntities()\nfor i, entity in ipairs(entities) do\n    entity:AddPoison(EntityRef(player), 30, 1)\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#addshrink","title":"Add\u00b7Shrink ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addshrink-entityref-source-int-duration","title":"void AddShrink ( EntityRef Source, int Duration )","text":"<p>Adds a shrink effect to the entity.</p> Duration infos <p>The Duration has a maximum of 5 seconds</p> Example Code <p>This code shrinks every entity in the room for 1 second.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal entities = Isaac.GetRoomEntities()\nfor i, entity in ipairs(entities) do\n    entity:AddShrink(EntityRef(player), 30)\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#addslowing","title":"Add\u00b7Slowing ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addslowing-entityref-source-int-duration-float-slowvalue-color-slowcolor","title":"void AddSlowing ( EntityRef Source, int Duration, float SlowValue, Color SlowColor )","text":"<p>Makes the friction higher effectively slowing down the entity.</p> Example Code <p>This code slows every entity in the room for 1 second with 0.5 original speed and applying a red color to it.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal slowColor = Color(1, 0, 0, 1, 0, 0, 0)\nlocal entities = Isaac.GetRoomEntities()\nfor i, entity in ipairs(entities) do\n    entity:AddSlowing(EntityRef(player), 30, 0.5, slowColor)\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#addvelocity","title":"Add\u00b7Velocity ()","text":"","tags":["Class"]},{"location":"Entity.html#void-addvelocity-vector-velocity","title":"void AddVelocity ( Vector Velocity )","text":"<p>Adds velocity to the entity. This can be used to move him in a certain direction (for example as a result of collision)</p>","tags":["Class"]},{"location":"Entity.html#bloodexplode","title":"Blood\u00b7Explode ()","text":"","tags":["Class"]},{"location":"Entity.html#void-bloodexplode","title":"void BloodExplode ( )","text":"<p>Explodes with gibs and blood.</p>","tags":["Class"]},{"location":"Entity.html#canshutdoors","title":"Can\u00b7Shut\u00b7Doors ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-canshutdoors","title":"boolean CanShutDoors ( )","text":"<p>Enemies keep the doors shut.</p>","tags":["Class"]},{"location":"Entity.html#clearentityflags","title":"Clear\u00b7Entity\u00b7Flags ()","text":"","tags":["Class"]},{"location":"Entity.html#void-clearentityflags-int-flags","title":"void ClearEntityFlags ( int Flags )","text":"<p>Removes all of the provided EntityFlags from the entity.</p>","tags":["Class"]},{"location":"Entity.html#collideswithgrid","title":"Collides\u00b7With\u00b7Grid ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-collideswithgrid","title":"boolean CollidesWithGrid ( )","text":"<p>Returns true if the entity is currently colliding with a valid GridEntity, as dictated by its <code>Entity.GridCollisionClass</code>.</p>","tags":["Class"]},{"location":"Entity.html#die","title":"Die ()","text":"","tags":["Class"]},{"location":"Entity.html#void-die","title":"void Die ( )","text":"<p>Kills the entity and trigger its death animation.</p>","tags":["Class"]},{"location":"Entity.html#exists","title":"Exists ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-exists","title":"boolean Exists ( )","text":"<p>Checks whether the entity is still spawned in the current room.</p> <p>This is mostly useful in situations where you are unwrapping an <code>EntityPtr</code> and the corresponding entity may or may not have been killed in the interim period.</p>","tags":["Class"]},{"location":"Entity.html#getbossid","title":"Get\u00b7Boss\u00b7ID ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getbossid","title":"int GetBossID ( )","text":"<p>If the entity is a boss, it returns its specific boss id. If it isn't a boss it will return 0.</p> <p>A boss ID is NOT equal to the entity Type, but is defined as a separate value in the entities2.xml file inside the \"bossID\" attribute.</p> <p>For Delirium, this function returns the boss id, delirium is currently transformed into.</p>","tags":["Class"]},{"location":"Entity.html#getcolor","title":"Get\u00b7Color ()","text":"","tags":["Class"]},{"location":"Entity.html#const-color-getcolor","title":"const Color GetColor ( )","text":"<p>Returns the Color object associated to this entity.</p>","tags":["Class"]},{"location":"Entity.html#getdata","title":"Get\u00b7Data ()","text":"","tags":["Class"]},{"location":"Entity.html#table-getdata","title":"table GetData ( )","text":"<p>Returns a Lua table that contains mod-related data associated with the entity. Initially, this will always be an empty table. Any values stored in the table by mods will persist until the entity is despawned.</p> <p>GetData is typically used by smaller mods as a quick way to store information about an entity without having to create a dedicated data structure.</p> Example Code <p>This code adds custom data to an entity or prints it in the console if it exists.</p> <pre><code>function checkAndSetData(entity)\n  local data = entity:GetData()\n  if data.foo == nil then -- Keys of data should be strings\n    data.foo = \"bar\" -- Values of data can be any data type\n    print(\"Assigned an intial key of: foo --&gt; bar\")\n  else\n    print(\"Key foo already exists: \" .. tostring(data.foo))\n  end\nend\n</code></pre> <p>There are three main problems with <code>GetData</code>:</p> <ol> <li> <p>Data is not unique per mod, which means that using <code>GetData</code> is essentially the same thing as using a global variable. Using global variables are bad for two main reasons. First, other mods can overwrite or mess with your data, so it isn't safe to use them. Second, the scope of global variables makes it difficult to determine where the variable is used when reading the code, and makes it harder to track down bugs, especially in larger programs.</p> </li> <li> <p>Most entities will despawn when leaving the room. For example, even though heart pickups are persisted by the game, they will be despawned and respawned each time the room is left and reentered, respectively. Thus, most entities will have their data deleted upon leaving the room. The exceptions to this are players, familiars, and entities with <code>EntityFlag.FLAG_PERSISTENT</code>.</p> </li> <li> <p>Even for entities that don't despawn when you leave a room, <code>GetData</code> is still not a suitable storage mechanism because it will be deleted when exiting to the menu or restarting/finishing a run. Well-programmed mods should never lose state when end-users save and quit the game, so instead of programming a <code>GetData</code> conversion + serialization routine, it's much simpler to just avoid using it to begin with.</p> </li> </ol> <p>For these reasons, programmers who want their code to be the best that it can be should always avoid using <code>GetData</code> in favor of data structures that are local to their own mod (or local to the specific mod feature). The index for such data structures is usually the pointer hash, which can be retrieved for any entity by using the <code>GetPtrHash</code> function.</p>","tags":["Class"]},{"location":"Entity.html#getdroprng","title":"Get\u00b7Drop\u00b7RNG ()","text":"","tags":["Class"]},{"location":"Entity.html#rng-getdroprng","title":"RNG GetDropRNG ( )","text":"<p>Returns the assigned RNG object for the entity. This RNG is used to determine the items that are dropped on the entities death.</p>","tags":["Class"]},{"location":"Entity.html#getentityflags","title":"Get\u00b7Entity\u00b7Flags ()","text":"","tags":["Class"]},{"location":"Entity.html#int-getentityflags","title":"int GetEntityFlags ( )","text":"<p>Get the EntityFlagsof the entity. This will be a number which acts like a bitmask.</p> Example Code <p>This code prints something in the console, if the entity has a specific EntityFlags.</p> <pre><code>if entity:GetEntityFlags() &amp; EntityFlag.FLAG_CONFUSION == EntityFlag.FLAG_CONFUSION then\n    print(\"This entity is confused!\")\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#getlastchild","title":"Get\u00b7Last\u00b7Child ()","text":"","tags":["Class"]},{"location":"Entity.html#entity-getlastchild","title":"Entity GetLastChild ( )","text":"<p>Returns the last child of this entity. This is useful for certain segmented enemies so you can go all the way to the bottom \"tail\" entity in one method call.</p> Return behavior <p>If no child is found, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#getlastparent","title":"Get\u00b7Last\u00b7Parent ()","text":"","tags":["Class"]},{"location":"Entity.html#entity-getlastparent","title":"Entity GetLastParent ( )","text":"<p>Returns the last parent of this entity. This is useful for certain segmented enemies so you can go all the way to the top \"head\" entity in one method call.</p> Return behavior <p>If no parent is found, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#getsprite","title":"Get\u00b7Sprite ()","text":"","tags":["Class"]},{"location":"Entity.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"<p>Return the sprite object of the entity.</p>","tags":["Class"]},{"location":"Entity.html#hascommonparentwithentity","title":"Has\u00b7Common\u00b7Parent\u00b7With\u00b7Entity ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-hascommonparentwithentity-entity-other","title":"boolean HasCommonParentWithEntity ( Entity Other )","text":"","tags":["Class"]},{"location":"Entity.html#hasentityflags","title":"Has\u00b7Entity\u00b7Flags ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-hasentityflags-int-flags","title":"boolean HasEntityFlags ( int Flags )","text":"<p>Returns true if the entity has all named EntityFlags set.</p> Example Code <p>This code prints something in the console, if the entity has a specific EntityFlags.</p> <pre><code>if entity:HasEntityFlags(EntityFlag.FLAG_CONFUSION) then\n    print(\"This entity is confused!\")\nend\n</code></pre>","tags":["Class"]},{"location":"Entity.html#hasfullhealth","title":"Has\u00b7Full\u00b7Health ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-hasfullhealth","title":"boolean HasFullHealth ( )","text":"","tags":["Class"]},{"location":"Entity.html#hasmortaldamage","title":"Has\u00b7Mortal\u00b7Damage ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-hasmortaldamage","title":"boolean HasMortalDamage ( )","text":"Notes <p>The game adds taken damage to a damage buffer, which gets applied in the next frame. HasMortalDamage() returns true if the buffered damage is enough to kill the entity. HasMortalDamage() will be updated additionally after TakeDamage() is called.</p>","tags":["Class"]},{"location":"Entity.html#isactiveenemy","title":"Is\u00b7Active\u00b7Enemy ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-isactiveenemy-boolean-includedead","title":"boolean IsActiveEnemy ( boolean includeDead )","text":"<p>return true for non background NPCs (ex: every enemy except fire and shopkeepers)</p>","tags":["Class"]},{"location":"Entity.html#isboss","title":"Is\u00b7Boss ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-isboss","title":"boolean IsBoss ( )","text":"<p>bosses display health bar</p>","tags":["Class"]},{"location":"Entity.html#isdead","title":"Is\u00b7Dead ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-isdead","title":"boolean IsDead ( )","text":"","tags":["Class"]},{"location":"Entity.html#isenemy","title":"Is\u00b7Enemy ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-isenemy","title":"boolean IsEnemy ( )","text":"<p>return true for NPCs that are not controlled by the player</p>","tags":["Class"]},{"location":"Entity.html#isflying","title":"Is\u00b7Flying ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-isflying","title":"boolean IsFlying ( )","text":"","tags":["Class"]},{"location":"Entity.html#isframe","title":"Is\u00b7Frame ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-isframe-int-frame-int-offset","title":"boolean IsFrame ( int Frame, int Offset )","text":"<p>true every X frames</p>","tags":["Class"]},{"location":"Entity.html#isinvincible","title":"Is\u00b7Invincible ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-isinvincible","title":"boolean IsInvincible ( )","text":"","tags":["Class"]},{"location":"Entity.html#isvisible","title":"Is\u00b7Visible ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-isvisible","title":"boolean IsVisible ( )","text":"","tags":["Class"]},{"location":"Entity.html#isvulnerableenemy","title":"Is\u00b7Vulnerable\u00b7Enemy ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-isvulnerableenemy","title":"boolean IsVulnerableEnemy ( )","text":"<p>return true for enemies that can be damaged</p>","tags":["Class"]},{"location":"Entity.html#kill","title":"Kill ()","text":"","tags":["Class"]},{"location":"Entity.html#void-kill","title":"void Kill ( )","text":"<p>Kills the entity and makes a blood splat or gibs.</p>","tags":["Class"]},{"location":"Entity.html#multiplyfriction","title":"Multiply\u00b7Friction ()","text":"","tags":["Class"]},{"location":"Entity.html#void-multiplyfriction-float-value","title":"void MultiplyFriction ( float Value )","text":"","tags":["Class"]},{"location":"Entity.html#postrender","title":"Post\u00b7Render ()","text":"","tags":["Class"]},{"location":"Entity.html#void-postrender","title":"void PostRender ( )","text":"","tags":["Class"]},{"location":"Entity.html#remove","title":"Remove ()","text":"","tags":["Class"]},{"location":"Entity.html#void-remove","title":"void Remove ( )","text":"<p>Remove the entity from the game instantly, without doing any additional effects/animations.</p>","tags":["Class"]},{"location":"Entity.html#removestatuseffects","title":"Remove\u00b7Status\u00b7Effects ()","text":"","tags":["Class"]},{"location":"Entity.html#void-removestatuseffects","title":"void RemoveStatusEffects ( )","text":"<p>Removes all Status Effects from the entity.</p>","tags":["Class"]},{"location":"Entity.html#render","title":"Render ()","text":"","tags":["Class"]},{"location":"Entity.html#void-render-vector-offset","title":"void Render ( Vector Offset )","text":"<p>Render the current sprite of the Entity at the current entity position + offset.</p>","tags":["Class"]},{"location":"Entity.html#rendershadowlayer","title":"Render\u00b7Shadow\u00b7Layer ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-rendershadowlayer-vector-offset","title":"boolean RenderShadowLayer ( Vector Offset )","text":"<p>Render the shadow / shadow layer again.</p>","tags":["Class"]},{"location":"Entity.html#setcolor","title":"Set\u00b7Color ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setcolor-color-color-int-duration-int-priority-boolean-fadeout-boolean-share","title":"void SetColor ( Color Color, int Duration, int Priority, boolean Fadeout, boolean Share )","text":"<p>Set the colormask for the entity. This can be used to tint the sprites in different colors.</p> Example Code <p>This code changes the color of the sprite to a fully white sprite for 15 frames.</p> <pre><code>entity:SetColor(Color(1, 1, 1, 1, 255, 255, 255), 15, 1, false, false)\n</code></pre>","tags":["Class"]},{"location":"Entity.html#setsize","title":"Set\u00b7Size ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setsize-float-size-vector-sizemulti-int-numgridcollisionpoints","title":"void SetSize ( float Size, Vector SizeMulti, int NumGridCollisionPoints )","text":"<p>Set the size of the entity.</p>","tags":["Class"]},{"location":"Entity.html#setspriteframe","title":"Set\u00b7Sprite\u00b7Frame ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setspriteframe-string-animationname-int-framenum","title":"void SetSpriteFrame ( string AnimationName, int FrameNum )","text":"","tags":["Class"]},{"location":"Entity.html#setspriteoverlayframe","title":"Set\u00b7Sprite\u00b7Overlay\u00b7Frame ()","text":"","tags":["Class"]},{"location":"Entity.html#void-setspriteoverlayframe-string-animationname-int-framenum","title":"void SetSpriteOverlayFrame ( string AnimationName, int FrameNum )","text":"","tags":["Class"]},{"location":"Entity.html#takedamage","title":"Take\u00b7Damage ()","text":"","tags":["Class"]},{"location":"Entity.html#boolean-takedamage-float-damage-int-flags-entityref-source-int-damagecountdown","title":"boolean TakeDamage ( float Damage, int Flags, EntityRef Source, int DamageCountdown )","text":"Notes <p>The game adds taken damage to a damage buffer, which gets applied in the next frame. Therefore, TakeDamage() will not decrement the entities HP immediately upon calling the function. Rather, it is only updated on the frame afterwards.</p>","tags":["Class"]},{"location":"Entity.html#tobomb","title":"To\u00b7Bomb ()","text":"","tags":["Class"]},{"location":"Entity.html#entitybomb-tobomb","title":"EntityBomb ToBomb ( )","text":"<p>Used to cast an Entity object to an EntityBomb object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#toeffect","title":"To\u00b7Effect ()","text":"","tags":["Class"]},{"location":"Entity.html#entityeffect-toeffect","title":"EntityEffect ToEffect ( )","text":"<p>Used to cast an Entity object to an EntityEffect object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#tofamiliar","title":"To\u00b7Familiar ()","text":"","tags":["Class"]},{"location":"Entity.html#entityfamiliar-tofamiliar","title":"EntityFamiliar ToFamiliar ( )","text":"<p>Used to cast an Entity object to an EntityFamiliar object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#toknife","title":"To\u00b7Knife ()","text":"","tags":["Class"]},{"location":"Entity.html#entityknife-toknife","title":"EntityKnife ToKnife ( )","text":"<p>Used to cast an Entity object to an EntityKnife object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#tolaser","title":"To\u00b7Laser ()","text":"","tags":["Class"]},{"location":"Entity.html#entitylaser-tolaser","title":"EntityLaser ToLaser ( )","text":"<p>Used to cast an Entity object to an EntityLaser object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#tonpc","title":"To\u00b7NPC ()","text":"","tags":["Class"]},{"location":"Entity.html#entitynpc-tonpc","title":"EntityNPC ToNPC ( )","text":"<p>Used to cast an Entity object to an EntityNPC object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#topickup","title":"To\u00b7Pickup ()","text":"","tags":["Class"]},{"location":"Entity.html#entitypickup-topickup","title":"EntityPickup ToPickup ( )","text":"<p>Used to cast an Entity object to an EntityPickup object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#toplayer","title":"To\u00b7Player ()","text":"","tags":["Class"]},{"location":"Entity.html#entityplayer-toplayer","title":"EntityPlayer ToPlayer ( )","text":"<p>Used to cast an Entity object to an EntityPlayer object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#toprojectile","title":"To\u00b7Projectile ()","text":"","tags":["Class"]},{"location":"Entity.html#entityprojectile-toprojectile","title":"EntityProjectile ToProjectile ( )","text":"<p>Used to cast an Entity object to an EntityProjectile object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#totear","title":"To\u00b7Tear ()","text":"","tags":["Class"]},{"location":"Entity.html#entitytear-totear","title":"EntityTear ToTear ( )","text":"<p>Used to cast an Entity object to an EntityTear object.</p> Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"Entity.html#update","title":"Update ()","text":"","tags":["Class"]},{"location":"Entity.html#void-update","title":"void Update ( )","text":"<p>Runs the post-update logic for the entity for a single frame, which will cause the associated callback to fire. Mods usually never need to call this function, as it can cause bugs when post-update logic is ran more than once a frame.</p>","tags":["Class"]},{"location":"Entity.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"Entity.html#child","title":"Child","text":"","tags":["Class"]},{"location":"Entity.html#entity-child","title":"Entity Child","text":"Warning <p>Sisters Vis bosses do have their counter part entity as their Child. But none of them have a Parent entity set.</p>","tags":["Class"]},{"location":"Entity.html#collisiondamage","title":"Collision\u00b7Damage","text":"","tags":["Class"]},{"location":"Entity.html#float-collisiondamage","title":"float CollisionDamage","text":"","tags":["Class"]},{"location":"Entity.html#color","title":"Color","text":"","tags":["Class"]},{"location":"Entity.html#color-color","title":"Color Color","text":"","tags":["Class"]},{"location":"Entity.html#depthoffset","title":"Depth\u00b7Offset","text":"","tags":["Class"]},{"location":"Entity.html#float-depthoffset","title":"float DepthOffset","text":"<p>Get/Set the depth-offset of the entity. This value is added to the Y Position of the entity, which is then used to determine the rendering order of each entity. Default is 0 for all entities.</p> Example Code <p>This code explains how this variable works.</p> <pre><code>entity1.Position.Y -- =&gt; 50\nentity2.Position.Y -- =&gt; 45\n-- Entity1 is rendered in front of Entity2\n\nentity1.DepthOffset = -10\n-- new Entity1 renderYPosition =&gt; 40\n-- Entity2 is rendered in front of Entity1\n</code></pre>","tags":["Class"]},{"location":"Entity.html#dropseed","title":"Drop\u00b7Seed","text":"","tags":["Class"]},{"location":"Entity.html#const-int-dropseed","title":"const int DropSeed","text":"<p>Get the Seed of the Drop RNG.</p>","tags":["Class"]},{"location":"Entity.html#entitycollisionclass","title":"Entity\u00b7Collision\u00b7Class","text":"","tags":["Class"]},{"location":"Entity.html#entitycollisionclass-entitycollisionclass","title":"EntityCollisionClass EntityCollisionClass","text":"","tags":["Class"]},{"location":"Entity.html#flipx","title":"FlipX","text":"","tags":["Class"]},{"location":"Entity.html#boolean-flipx","title":"boolean FlipX","text":"","tags":["Class"]},{"location":"Entity.html#framecount","title":"Frame\u00b7Count","text":"","tags":["Class"]},{"location":"Entity.html#const-int-framecount","title":"const int FrameCount","text":"","tags":["Class"]},{"location":"Entity.html#friction","title":"Friction","text":"","tags":["Class"]},{"location":"Entity.html#float-friction","title":"float Friction","text":"<p>loaded from entity config</p>","tags":["Class"]},{"location":"Entity.html#gridcollisionclass","title":"Grid\u00b7Collision\u00b7Class","text":"","tags":["Class"]},{"location":"Entity.html#entitygridcollisionclass-gridcollisionclass","title":"EntityGridCollisionClass GridCollisionClass","text":"Notes <p>EntityPlayers can only use GRIDCOLL_NONE, GRIDCOLL_WALLS, and GRIDCOLL_GROUND. All other enums will behave like GRIDCOLL_WALLS.</p>","tags":["Class"]},{"location":"Entity.html#hitpoints","title":"Hit\u00b7Points","text":"","tags":["Class"]},{"location":"Entity.html#float-hitpoints","title":"float HitPoints","text":"Notes <p>The HitPoints value is not decremented immediately upon taking damage like you would expect. Rather, it is only updated on the frame after the entity takes damage.</p>","tags":["Class"]},{"location":"Entity.html#index","title":"Index","text":"","tags":["Class"]},{"location":"Entity.html#const-int-index","title":"const int Index","text":"","tags":["Class"]},{"location":"Entity.html#initseed","title":"Init\u00b7Seed","text":"","tags":["Class"]},{"location":"Entity.html#const-int-initseed","title":"const int InitSeed","text":"","tags":["Class"]},{"location":"Entity.html#mass","title":"Mass","text":"","tags":["Class"]},{"location":"Entity.html#float-mass","title":"float Mass","text":"Notes <p>Stationary enemies have a Mass of 100. This does not apply to some stationary non-enemies, like slots.</p>","tags":["Class"]},{"location":"Entity.html#maxhitpoints","title":"Max\u00b7Hit\u00b7Points","text":"","tags":["Class"]},{"location":"Entity.html#float-maxhitpoints","title":"float MaxHitPoints","text":"","tags":["Class"]},{"location":"Entity.html#parent","title":"Parent","text":"","tags":["Class"]},{"location":"Entity.html#entity-parent","title":"Entity Parent","text":"<p>This is a reference to the \"parent\" entity. For most entities, this field will be nil. This field is used in multi-segment entities to refer back to which segment is the \"main\" entity, like the head.</p>","tags":["Class"]},{"location":"Entity.html#position","title":"Position","text":"","tags":["Class"]},{"location":"Entity.html#vector-position","title":"Vector Position","text":"","tags":["Class"]},{"location":"Entity.html#positionoffset","title":"Position\u00b7Offset","text":"","tags":["Class"]},{"location":"Entity.html#const-vector-positionoffset","title":"const Vector PositionOffset","text":"","tags":["Class"]},{"location":"Entity.html#renderzoffset","title":"Render\u00b7ZOffset","text":"","tags":["Class"]},{"location":"Entity.html#int-renderzoffset","title":"int RenderZOffset","text":"Bugs <p>This variable doesn't seem to do anything useful. Use DepthOffset instead.</p>","tags":["Class"]},{"location":"Entity.html#size","title":"Size","text":"","tags":["Class"]},{"location":"Entity.html#float-size","title":"float Size","text":"<p>Returns the size of the hitbox on an entity.</p>","tags":["Class"]},{"location":"Entity.html#sizemulti","title":"Size\u00b7Multi","text":"","tags":["Class"]},{"location":"Entity.html#vector-sizemulti","title":"Vector SizeMulti","text":"","tags":["Class"]},{"location":"Entity.html#sortinglayer","title":"Sorting\u00b7Layer","text":"","tags":["Class"]},{"location":"Entity.html#sortinglayer-sortinglayer","title":"SortingLayer SortingLayer","text":"","tags":["Class"]},{"location":"Entity.html#spawnerentity","title":"Spawner\u00b7Entity","text":"","tags":["Class"]},{"location":"Entity.html#entity-spawnerentity","title":"Entity SpawnerEntity","text":"","tags":["Class"]},{"location":"Entity.html#spawnertype","title":"Spawner\u00b7Type","text":"","tags":["Class"]},{"location":"Entity.html#entitytype-spawnertype","title":"EntityType SpawnerType","text":"","tags":["Class"]},{"location":"Entity.html#spawnervariant","title":"Spawner\u00b7Variant","text":"","tags":["Class"]},{"location":"Entity.html#int-spawnervariant","title":"int SpawnerVariant","text":"","tags":["Class"]},{"location":"Entity.html#spawngridindex","title":"Spawn\u00b7Grid\u00b7Index","text":"","tags":["Class"]},{"location":"Entity.html#const-int-spawngridindex","title":"const int SpawnGridIndex","text":"","tags":["Class"]},{"location":"Entity.html#splatcolor","title":"Splat\u00b7Color","text":"","tags":["Class"]},{"location":"Entity.html#color-splatcolor","title":"Color SplatColor","text":"<p>The color of the gibs when an entity dies.</p> <p>The Color of this property is read only, so if you want to change it, you have to replace the entire thing with a new Color object.</p>","tags":["Class"]},{"location":"Entity.html#spriteoffset","title":"Sprite\u00b7Offset","text":"","tags":["Class"]},{"location":"Entity.html#vector-spriteoffset","title":"Vector SpriteOffset","text":"","tags":["Class"]},{"location":"Entity.html#spriterotation","title":"Sprite\u00b7Rotation","text":"","tags":["Class"]},{"location":"Entity.html#float-spriterotation","title":"float SpriteRotation","text":"","tags":["Class"]},{"location":"Entity.html#spritescale","title":"Sprite\u00b7Scale","text":"","tags":["Class"]},{"location":"Entity.html#vector-spritescale","title":"Vector SpriteScale","text":"<p>Get/set the scale of the enemy sprite. This can be used to also scale the shadow of the entity.</p> <p>Also used as a Player stat - Change this in a callback to MC_EVALUATE_CACHE using the CacheFlag.CACHE_SIZE flag.  This is equal to the Size stat.</p> <p>Most items that apply a Size Up (Magic Mushroom, Pill Larger...) do so by multiplying the SpriteScale by 1.2500623464584 (this is speculated to be 1.25 with a floating number error, you may choose to use 1.25 for futureproofing instead).</p> <p>Most items that apply a Size Down (Mini Mushroom, Binky, Pill Smaller...) do so by multiplying the SpriteScale by 0.79996013641357 (this is speculated to be 0.8 with a floating number error, you may choose to use 0.8 for futureproofing instead).</p> <p>Pluto uses its own multiplier of 0.5.</p>","tags":["Class"]},{"location":"Entity.html#subtype","title":"Sub\u00b7Type","text":"","tags":["Class"]},{"location":"Entity.html#int-subtype","title":"int SubType","text":"","tags":["Class"]},{"location":"Entity.html#target","title":"Target","text":"","tags":["Class"]},{"location":"Entity.html#entity-target","title":"Entity Target","text":"","tags":["Class"]},{"location":"Entity.html#targetposition","title":"Target\u00b7Position","text":"","tags":["Class"]},{"location":"Entity.html#vector-targetposition","title":"Vector TargetPosition","text":"","tags":["Class"]},{"location":"Entity.html#type","title":"Type","text":"","tags":["Class"]},{"location":"Entity.html#const-entitytype-type","title":"const EntityType Type","text":"","tags":["Class"]},{"location":"Entity.html#variant","title":"Variant","text":"","tags":["Class"]},{"location":"Entity.html#int-variant","title":"int Variant","text":"","tags":["Class"]},{"location":"Entity.html#velocity","title":"Velocity","text":"","tags":["Class"]},{"location":"Entity.html#vector-velocity","title":"Vector Velocity","text":"","tags":["Class"]},{"location":"Entity.html#visible","title":"Visible","text":"","tags":["Class"]},{"location":"Entity.html#boolean-visible","title":"boolean Visible","text":"","tags":["Class"]},{"location":"EntityBomb.html","title":"Class \"EntityBomb\"","text":"","tags":["Class"]},{"location":"EntityBomb.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityBomb.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityBomb.html#addtearflags","title":"Add\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#void-addtearflags-tearflags-flags","title":"void AddTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityBomb.html#cleartearflags","title":"Clear\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#void-cleartearflags-tearflags-flags","title":"void ClearTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityBomb.html#hastearflags","title":"Has\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#boolean-hastearflags-tearflags-flags","title":"boolean HasTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityBomb.html#setexplosioncountdown","title":"Set\u00b7Explosion\u00b7Countdown ()","text":"","tags":["Class"]},{"location":"EntityBomb.html#void-setexplosioncountdown-int-countdown","title":"void SetExplosionCountdown ( int Countdown )","text":"","tags":["Class"]},{"location":"EntityBomb.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"EntityBomb.html#explosiondamage","title":"Explosion\u00b7Damage","text":"","tags":["Class"]},{"location":"EntityBomb.html#float-explosiondamage","title":"float ExplosionDamage","text":"","tags":["Class"]},{"location":"EntityBomb.html#flags","title":"Flags","text":"","tags":["Class"]},{"location":"EntityBomb.html#tearflags-flags","title":"TearFlags Flags","text":"<p>Uses TearFlags to alter the behavior of the bomb.</p>","tags":["Class"]},{"location":"EntityBomb.html#isfetus","title":"Is\u00b7Fetus","text":"","tags":["Class"]},{"location":"EntityBomb.html#boolean-isfetus","title":"boolean IsFetus","text":"","tags":["Class"]},{"location":"EntityBomb.html#radiusmultiplier","title":"Radius\u00b7Multiplier","text":"","tags":["Class"]},{"location":"EntityBomb.html#float-radiusmultiplier","title":"float RadiusMultiplier","text":"","tags":["Class"]},{"location":"EntityEffect.html","title":"Class \"EntityEffect\"","text":"","tags":["Class"]},{"location":"EntityEffect.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityEffect.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityEffect.html#followparent","title":"Follow\u00b7Parent ()","text":"","tags":["Class"]},{"location":"EntityEffect.html#void-followparent-entity-parent","title":"void FollowParent ( Entity Parent )","text":"","tags":["Class"]},{"location":"EntityEffect.html#isplayercreep","title":"Is\u00b7Player\u00b7Creep ()","text":"","tags":["Class"]},{"location":"EntityEffect.html#static-boolean-isplayercreep-int-variant","title":"static boolean IsPlayerCreep ( int Variant )","text":"","tags":["Class"]},{"location":"EntityEffect.html#setdamagesource","title":"Set\u00b7Damage\u00b7Source ()","text":"","tags":["Class"]},{"location":"EntityEffect.html#void-setdamagesource-entitytype-damagesource","title":"void SetDamageSource ( EntityType DamageSource )","text":"","tags":["Class"]},{"location":"EntityEffect.html#setradii","title":"Set\u00b7Radii ()","text":"","tags":["Class"]},{"location":"EntityEffect.html#void-setradii-float-min-float-max","title":"void SetRadii ( float min, float max )","text":"<p>For shockwaves.</p>","tags":["Class"]},{"location":"EntityEffect.html#settimeout","title":"Set\u00b7Timeout ()","text":"","tags":["Class"]},{"location":"EntityEffect.html#void-settimeout-int-timeout","title":"void SetTimeout ( int Timeout )","text":"","tags":["Class"]},{"location":"EntityEffect.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"EntityEffect.html#damagesource","title":"Damage\u00b7Source","text":"","tags":["Class"]},{"location":"EntityEffect.html#int-damagesource","title":"int DamageSource","text":"","tags":["Class"]},{"location":"EntityEffect.html#fallingacceleration","title":"Falling\u00b7Acceleration","text":"","tags":["Class"]},{"location":"EntityEffect.html#float-fallingacceleration","title":"float FallingAcceleration","text":"","tags":["Class"]},{"location":"EntityEffect.html#fallingspeed","title":"Falling\u00b7Speed","text":"","tags":["Class"]},{"location":"EntityEffect.html#float-fallingspeed","title":"float FallingSpeed","text":"","tags":["Class"]},{"location":"EntityEffect.html#isfollowing","title":"Is\u00b7Following","text":"","tags":["Class"]},{"location":"EntityEffect.html#boolean-isfollowing","title":"boolean IsFollowing","text":"","tags":["Class"]},{"location":"EntityEffect.html#lifespan","title":"Life\u00b7Span","text":"","tags":["Class"]},{"location":"EntityEffect.html#int-lifespan","title":"int LifeSpan","text":"","tags":["Class"]},{"location":"EntityEffect.html#m_height","title":"m_Height","text":"","tags":["Class"]},{"location":"EntityEffect.html#float-m_height","title":"float m_Height","text":"<p>for particles .dy</p>","tags":["Class"]},{"location":"EntityEffect.html#maxradius","title":"Max\u00b7Radius","text":"","tags":["Class"]},{"location":"EntityEffect.html#float-maxradius","title":"float MaxRadius","text":"","tags":["Class"]},{"location":"EntityEffect.html#minradius","title":"Min\u00b7Radius","text":"","tags":["Class"]},{"location":"EntityEffect.html#float-minradius","title":"float MinRadius","text":"<p>For shockwaves.</p>","tags":["Class"]},{"location":"EntityEffect.html#parentoffset","title":"Parent\u00b7Offset","text":"","tags":["Class"]},{"location":"EntityEffect.html#vector-parentoffset","title":"Vector ParentOffset","text":"<p>probably obsolete soon, in favor of m_SpriteOffset</p>","tags":["Class"]},{"location":"EntityEffect.html#rotation","title":"Rotation","text":"","tags":["Class"]},{"location":"EntityEffect.html#float-rotation","title":"float Rotation","text":"","tags":["Class"]},{"location":"EntityEffect.html#scale","title":"Scale","text":"","tags":["Class"]},{"location":"EntityEffect.html#float-scale","title":"float Scale","text":"","tags":["Class"]},{"location":"EntityEffect.html#state","title":"State","text":"","tags":["Class"]},{"location":"EntityEffect.html#int-state","title":"int State","text":"<p>state var, may be used ad lib initialized to 0 in Init()</p>","tags":["Class"]},{"location":"EntityEffect.html#timeout","title":"Timeout","text":"","tags":["Class"]},{"location":"EntityEffect.html#int-timeout","title":"int Timeout","text":"<p>This is decremented on every frame, even for custom effects. Custom effects have this value initialized to -1.</p>","tags":["Class"]},{"location":"EntityFamiliar.html","title":"Class \"EntityFamiliar\"","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityFamiliar.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#addcoins","title":"Add\u00b7Coins ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-addcoins-int-value","title":"void AddCoins ( int Value )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#addhearts","title":"Add\u00b7Hearts ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-addhearts-int-hearts","title":"void AddHearts ( int Hearts )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#addkeys","title":"Add\u00b7Keys ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-addkeys-int-keys","title":"void AddKeys ( int Keys )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#addtodelayed","title":"Add\u00b7To\u00b7Delayed ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-addtodelayed","title":"void AddToDelayed ( )","text":"<p>Adds to delayed. This doesn't remove other flags!</p>","tags":["Class"]},{"location":"EntityFamiliar.html#addtofollowers","title":"Add\u00b7To\u00b7Followers ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-addtofollowers","title":"void AddToFollowers ( )","text":"<p>Adds to followers. This doesn't remove other flags!</p>","tags":["Class"]},{"location":"EntityFamiliar.html#addtoorbit","title":"Add\u00b7To\u00b7Orbit ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-addtoorbit-int-layer","title":"void AddToOrbit ( int Layer )","text":"<p>Adds to orbitals. This doesn't remove other flags!</p>","tags":["Class"]},{"location":"EntityFamiliar.html#fireprojectile","title":"Fire\u00b7Projectile ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#entitytear-fireprojectile-vector-dir","title":"EntityTear FireProjectile ( Vector Dir )","text":"<p>Shoots a projectile from the center of the familiar in the direction you defined. If used on a familiar that shoots multiple projectiles (example: harlequin baby), this function will only return the left most projectile based on the direction. If used on familiars with special tears (example: Lil Brimstone,...), this will just shoot a regular tear. This function will not play the shoot animation of the familiar.</p>","tags":["Class"]},{"location":"EntityFamiliar.html#followparent","title":"Follow\u00b7Parent ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-followparent","title":"void FollowParent ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#followposition","title":"Follow\u00b7Position ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-followposition-vector-pos","title":"void FollowPosition ( Vector Pos )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#getorbitdistance","title":"Get\u00b7Orbit\u00b7Distance ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#static-vector-getorbitdistance-int-layer","title":"static Vector GetOrbitDistance ( int Layer )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#getorbitposition","title":"Get\u00b7Orbit\u00b7Position ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#vector-getorbitposition-vector-pos","title":"Vector GetOrbitPosition ( Vector Pos )","text":"<p>Returns the position of an orbiting familiar relative to the player's position. Returns <code>Vector(0,0) if its a normal familiar.</code> The \"pos\" argument is used as an offset.</p>","tags":["Class"]},{"location":"EntityFamiliar.html#movedelayed","title":"Move\u00b7Delayed ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-movedelayed-int-numframes","title":"void MoveDelayed ( int NumFrames )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#movediagonally","title":"Move\u00b7Diagonally ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-movediagonally-float-speed","title":"void MoveDiagonally ( float Speed )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#pickenemytarget","title":"Pick\u00b7Enemy\u00b7Target ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-pickenemytarget-float-maxdistance-int-frameinterval-13-int-flags-0-vector-conedir-vectorzero-float-coneangle-15","title":"void PickEnemyTarget ( float MaxDistance, int FrameInterval = 13, int Flags = 0, Vector ConeDir = Vector.Zero, float ConeAngle = 15 )","text":"<p>Flags: A combination of the following flags (none of these are set by default)</p> <pre><code>* 1: Allow switching to a better target even if we already have one\n* 2: Don't prioritize enemies that are close to our owner\n* 4: Prioritize enemies with higher HP\n* 8: Prioritize enemies with lower HP\n* 16: Give lower priority to our current target (this makes us more likely to switch between targets)\n</code></pre> <p>ConeDir: If ~= Vector.Zero, searches for targets in a cone pointing in this direction</p> <p>ConeAngle: If ConeDir ~= Vector.Zero, sets the half angle of the search cone in degrees (45 results in a search angle of 90 degrees)</p>","tags":["Class"]},{"location":"EntityFamiliar.html#playchargeanim","title":"Play\u00b7Charge\u00b7Anim ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-playchargeanim-direction-dir","title":"void PlayChargeAnim ( Direction Dir )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#playfloatanim","title":"Play\u00b7Float\u00b7Anim ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-playfloatanim-direction-dir","title":"void PlayFloatAnim ( Direction Dir )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#playshootanim","title":"Play\u00b7Shoot\u00b7Anim ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-playshootanim-direction-dir","title":"void PlayShootAnim ( Direction Dir )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#recalculateorbitoffset","title":"Recalculate\u00b7Orbit\u00b7Offset ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#int-recalculateorbitoffset-int-layer-boolean-add","title":"int RecalculateOrbitOffset ( int Layer, boolean Add )","text":"<p>Returns the number of familiars in that layer.</p>","tags":["Class"]},{"location":"EntityFamiliar.html#removefromdelayed","title":"Remove\u00b7From\u00b7Delayed ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-removefromdelayed","title":"void RemoveFromDelayed ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#removefromfollowers","title":"Remove\u00b7From\u00b7Followers ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-removefromfollowers","title":"void RemoveFromFollowers ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#removefromorbit","title":"Remove\u00b7From\u00b7Orbit ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-removefromorbit","title":"void RemoveFromOrbit ( )","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#shoot","title":"Shoot ()","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#void-shoot","title":"void Shoot ( )","text":"Bugs <p>This function does not seem to work.</p>","tags":["Class"]},{"location":"EntityFamiliar.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#coins","title":"Coins","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#int-coins","title":"int Coins","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#firecooldown","title":"Fire\u00b7Cooldown","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#int-firecooldown","title":"int FireCooldown","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#headframedelay","title":"Head\u00b7Frame\u00b7Delay","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#int-headframedelay","title":"int HeadFrameDelay","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#hearts","title":"Hearts","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#int-hearts","title":"int Hearts","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#isdelayed","title":"Is\u00b7Delayed","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#boolean-isdelayed","title":"boolean IsDelayed","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#isfollower","title":"Is\u00b7Follower","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#boolean-isfollower","title":"boolean IsFollower","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#keys","title":"Keys","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#int-keys","title":"int Keys","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#lastdirection","title":"Last\u00b7Direction","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#direction-lastdirection","title":"Direction LastDirection","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#movedirection","title":"Move\u00b7Direction","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#direction-movedirection","title":"Direction MoveDirection","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#orbitangleoffset","title":"Orbit\u00b7Angle\u00b7Offset","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#float-orbitangleoffset","title":"float OrbitAngleOffset","text":"<p>Can be used to override the angular position of the familiar on its orbit based on the initial starting position of the orbit.</p> Example Code <p>This code will make all of your orbitals move as a tight wall around you.</p> <pre><code>for i,v in ipairs(Isaac.GetRoomEntities()) do\n    if v.Type==3 then\n        v:ToFamiliar().OrbitAngleOffset = 0.25*i\n    end\nend\n</code></pre> <p>Result: </p>","tags":["Class"]},{"location":"EntityFamiliar.html#orbitdistance","title":"Orbit\u00b7Distance","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#vector-orbitdistance","title":"Vector OrbitDistance","text":"<p>Defines the orbit of the familiar, if its an orbital. The Vector is interpreted as the dimensions of the circle/oval orbit. Example: <code>Vector(110,90)</code> is the orbital of \"Forever alone\".</p>","tags":["Class"]},{"location":"EntityFamiliar.html#orbitlayer","title":"Orbit\u00b7Layer","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#int-orbitlayer","title":"int OrbitLayer","text":"<p>This value is <code>-1</code> by default, and changes to whichever value is defined by <code>EntityFamiliar:AddToOrbit()</code>.</p>","tags":["Class"]},{"location":"EntityFamiliar.html#orbitspeed","title":"Orbit\u00b7Speed","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#float-orbitspeed","title":"float OrbitSpeed","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#player","title":"Player","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#entityplayer-player","title":"EntityPlayer Player","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#roomclearcount","title":"Room\u00b7Clear\u00b7Count","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#int-roomclearcount","title":"int RoomClearCount","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#shootdirection","title":"Shoot\u00b7Direction","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#direction-shootdirection","title":"Direction ShootDirection","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#state","title":"State","text":"","tags":["Class"]},{"location":"EntityFamiliar.html#int-state","title":"int State","text":"","tags":["Class"]},{"location":"EntityKnife.html","title":"Class \"EntityKnife\"","text":"","tags":["Class"]},{"location":"EntityKnife.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityKnife.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityKnife.html#addtearflags","title":"Add\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#void-addtearflags-tearflags-flags","title":"void AddTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityKnife.html#cleartearflags","title":"Clear\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#void-cleartearflags-tearflags-flags","title":"void ClearTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityKnife.html#getknifedistance","title":"Get\u00b7Knife\u00b7Distance ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#float-getknifedistance","title":"float GetKnifeDistance ( )","text":"","tags":["Class"]},{"location":"EntityKnife.html#getknifevelocity","title":"Get\u00b7Knife\u00b7Velocity ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#float-getknifevelocity","title":"float GetKnifeVelocity ( )","text":"","tags":["Class"]},{"location":"EntityKnife.html#getrenderz","title":"Get\u00b7Render\u00b7Z ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#int-getrenderz","title":"int GetRenderZ ( )","text":"","tags":["Class"]},{"location":"EntityKnife.html#hastearflags","title":"Has\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#boolean-hastearflags-tearflags-flags","title":"boolean HasTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityKnife.html#isflying","title":"Is\u00b7Flying ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#boolean-isflying","title":"boolean IsFlying ( )","text":"","tags":["Class"]},{"location":"EntityKnife.html#reset","title":"Reset ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#void-reset","title":"void Reset ( )","text":"<p>Used for master knifes, to get back to player.</p>","tags":["Class"]},{"location":"EntityKnife.html#setpathfollowspeed","title":"Set\u00b7Path\u00b7Follow\u00b7Speed ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#void-setpathfollowspeed-float-speed","title":"void SetPathFollowSpeed ( float Speed )","text":"","tags":["Class"]},{"location":"EntityKnife.html#shoot","title":"Shoot ()","text":"","tags":["Class"]},{"location":"EntityKnife.html#void-shoot-float-charge-float-range","title":"void Shoot ( float Charge, float Range )","text":"","tags":["Class"]},{"location":"EntityKnife.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"EntityKnife.html#charge","title":"Charge","text":"","tags":["Class"]},{"location":"EntityKnife.html#float-charge","title":"float Charge","text":"","tags":["Class"]},{"location":"EntityKnife.html#maxdistance","title":"Max\u00b7Distance","text":"","tags":["Class"]},{"location":"EntityKnife.html#float-maxdistance","title":"float MaxDistance","text":"","tags":["Class"]},{"location":"EntityKnife.html#pathfollowspeed","title":"Path\u00b7Follow\u00b7Speed","text":"","tags":["Class"]},{"location":"EntityKnife.html#float-pathfollowspeed","title":"float PathFollowSpeed","text":"<p>Unit speed of path moving knifes.</p>","tags":["Class"]},{"location":"EntityKnife.html#pathoffset","title":"Path\u00b7Offset","text":"","tags":["Class"]},{"location":"EntityKnife.html#float-pathoffset","title":"float PathOffset","text":"","tags":["Class"]},{"location":"EntityKnife.html#rotation","title":"Rotation","text":"","tags":["Class"]},{"location":"EntityKnife.html#float-rotation","title":"float Rotation","text":"","tags":["Class"]},{"location":"EntityKnife.html#rotationoffset","title":"Rotation\u00b7Offset","text":"","tags":["Class"]},{"location":"EntityKnife.html#float-rotationoffset","title":"float RotationOffset","text":"","tags":["Class"]},{"location":"EntityKnife.html#scale","title":"Scale","text":"","tags":["Class"]},{"location":"EntityKnife.html#float-scale","title":"float Scale","text":"","tags":["Class"]},{"location":"EntityKnife.html#tearflags","title":"Tear\u00b7Flags","text":"","tags":["Class"]},{"location":"EntityKnife.html#tearflags-tearflags","title":"TearFlags TearFlags","text":"","tags":["Class"]},{"location":"EntityLaser.html","title":"Class \"EntityLaser\"","text":"","tags":["Class"]},{"location":"EntityLaser.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityLaser.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityLaser.html#addtearflags","title":"Add\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-addtearflags-tearflags-flags","title":"void AddTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityLaser.html#calculateendpoint","title":"Calculate\u00b7End\u00b7Point ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#static-vector-calculateendpoint-vector-start-vector-dir-vector-positionoffset-entity-parent-float-margin","title":"static Vector CalculateEndPoint ( Vector Start, Vector Dir, Vector PositionOffset, Entity Parent, float Margin )","text":"","tags":["Class"]},{"location":"EntityLaser.html#cleartearflags","title":"Clear\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-cleartearflags-tearflags-flags","title":"void ClearTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityLaser.html#getendpoint","title":"Get\u00b7End\u00b7Point ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#const-vector-getendpoint","title":"const Vector GetEndPoint ( )","text":"","tags":["Class"]},{"location":"EntityLaser.html#getnonoptimizedsamples","title":"Get\u00b7Non\u00b7Optimized\u00b7Samples ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#const-vectorlist-getnonoptimizedsamples","title":"const VectorList GetNonOptimizedSamples ( )","text":"<p>Returns a VectorList representing the path of the laser. Seems to typically return 51 evenly-spaced points along the laser's path, as opposed to <code>GetSamples()</code> which only returns the minimum needed points to represent the path of the laser.</p> Example Usage <pre><code>local samplePoints = laser:GetNonOptimizedSamples()\n\nfor i=0, #samplePoints-1 do\n    local pos = samplePoints:Get(i)\n    ...\nend\n</code></pre>","tags":["Class"]},{"location":"EntityLaser.html#getrenderz","title":"Get\u00b7Render\u00b7Z ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#int-getrenderz","title":"int GetRenderZ ( )","text":"","tags":["Class"]},{"location":"EntityLaser.html#getsamples","title":"Get\u00b7Samples ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#const-vectorlist-getsamples","title":"const VectorList GetSamples ( )","text":"<p>Returns a VectorList representing the path of the laser. Unlike <code>GetNonOptimizedSamples()</code>, this function returns as few points as possible, while still correctly representing the path of the laser.</p> <p>For example, for a completely straight laser, <code>GetNonOptimizedSamples()</code> will still return 51 points as always, but this function only only return 2.</p> Example Usage <pre><code>local samplePoints = laser:GetSamples()\n\nfor i=0, #samplePoints-1 do\n    local pos = samplePoints:Get(i)\n    ...\nend\n</code></pre>","tags":["Class"]},{"location":"EntityLaser.html#hastearflags","title":"Has\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-hastearflags-tearflags-flags","title":"boolean HasTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityLaser.html#iscirclelaser","title":"Is\u00b7Circle\u00b7Laser ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-iscirclelaser","title":"boolean IsCircleLaser ( )","text":"Note <p>This function cannot differentiate between different types of Circle Laser, however these may be identified by their SubType:</p> <ul> <li>0 - Linear Laser (Typical laser with a start and end point)</li> <li>1 - Ring Ludovico (Controlled laser ring for Ludo synergies)</li> <li>2 - Ring Projectile (Tech X)</li> <li>3 - Ring Follow Parent (Maw of the Void)</li> <li>4 - No Impact (No impact splash, e.g. Tech Zero)</li> </ul>","tags":["Class"]},{"location":"EntityLaser.html#issamplelaser","title":"Is\u00b7Sample\u00b7Laser ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-issamplelaser","title":"boolean IsSampleLaser ( )","text":"","tags":["Class"]},{"location":"EntityLaser.html#setactiverotation","title":"Set\u00b7Active\u00b7Rotation ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-setactiverotation-int-delay-float-angledegrees-float-rotationspd-boolean-timeoutcomplete","title":"void SetActiveRotation ( int Delay, float AngleDegrees, float RotationSpd, boolean TimeoutComplete )","text":"","tags":["Class"]},{"location":"EntityLaser.html#setblackhpdropchance","title":"Set\u00b7Black\u00b7Hp\u00b7Drop\u00b7Chance ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-setblackhpdropchance-float-chance","title":"void SetBlackHpDropChance ( float Chance )","text":"","tags":["Class"]},{"location":"EntityLaser.html#sethomingtype","title":"Set\u00b7Homing\u00b7Type ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-sethomingtype-laserhomingtype-type","title":"void SetHomingType ( LaserHomingType Type )","text":"","tags":["Class"]},{"location":"EntityLaser.html#setmaxdistance","title":"Set\u00b7Max\u00b7Distance ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-setmaxdistance-float-distance","title":"void SetMaxDistance ( float Distance )","text":"","tags":["Class"]},{"location":"EntityLaser.html#setmultidimensionaltouched","title":"Set\u00b7Multidimensional\u00b7Touched ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-setmultidimensionaltouched-boolean-value","title":"void SetMultidimensionalTouched ( boolean Value )","text":"","tags":["Class"]},{"location":"EntityLaser.html#setonehit","title":"Set\u00b7One\u00b7Hit ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-setonehit-boolean-value","title":"void SetOneHit ( boolean Value )","text":"","tags":["Class"]},{"location":"EntityLaser.html#settimeout","title":"Set\u00b7Timeout ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#void-settimeout-int-value","title":"void SetTimeout ( int Value )","text":"","tags":["Class"]},{"location":"EntityLaser.html#shootangle","title":"Shoot\u00b7Angle ()","text":"","tags":["Class"]},{"location":"EntityLaser.html#static-entitylaser-shootangle-int-variant-vector-sourcepos-float-angledegrees-int-timeout-vector-posoffset-entity-source","title":"static EntityLaser ShootAngle ( int Variant, Vector SourcePos, float AngleDegrees, int Timeout, Vector PosOffset, Entity Source )","text":"<p>static helper to simplify spawning lasers</p>","tags":["Class"]},{"location":"EntityLaser.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"EntityLaser.html#angle","title":"Angle","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-angle","title":"float Angle","text":"","tags":["Class"]},{"location":"EntityLaser.html#angledegrees","title":"Angle\u00b7Degrees","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-angledegrees","title":"float AngleDegrees","text":"","tags":["Class"]},{"location":"EntityLaser.html#blackhpdropchance","title":"Black\u00b7Hp\u00b7Drop\u00b7Chance","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-blackhpdropchance","title":"float BlackHpDropChance","text":"<p>For maw of void.</p>","tags":["Class"]},{"location":"EntityLaser.html#bouncelaser","title":"Bounce\u00b7Laser","text":"","tags":["Class"]},{"location":"EntityLaser.html#entity-bouncelaser","title":"Entity BounceLaser","text":"","tags":["Class"]},{"location":"EntityLaser.html#curvestrength","title":"Curve\u00b7Strength","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-curvestrength","title":"float CurveStrength","text":"<p>My Reflection.</p>","tags":["Class"]},{"location":"EntityLaser.html#disablefollowparent","title":"Disable\u00b7Follow\u00b7Parent","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-disablefollowparent","title":"boolean DisableFollowParent","text":"<p>Set on children of other lasers, for instance Rubber Cement reflections. Disables m_ParentOffset.</p>","tags":["Class"]},{"location":"EntityLaser.html#endpoint","title":"End\u00b7Point","text":"","tags":["Class"]},{"location":"EntityLaser.html#vector-endpoint","title":"Vector EndPoint","text":"<p>Will hold the endpoint so it will not need to be recalculated when accessed from extern.</p>","tags":["Class"]},{"location":"EntityLaser.html#firstupdate","title":"First\u00b7Update","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-firstupdate","title":"boolean FirstUpdate","text":"","tags":["Class"]},{"location":"EntityLaser.html#gridhit","title":"Grid\u00b7Hit","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-gridhit","title":"boolean GridHit","text":"<p>true if laser can be clipped by grid entities and it was clipped at that frame.</p>","tags":["Class"]},{"location":"EntityLaser.html#hominglaser","title":"Homing\u00b7Laser","text":"","tags":["Class"]},{"location":"EntityLaser.html#hominglaser-hominglaser","title":"HomingLaser HomingLaser","text":"","tags":["Class"]},{"location":"EntityLaser.html#homingtype","title":"Homing\u00b7Type","text":"","tags":["Class"]},{"location":"EntityLaser.html#laserhomingtype-homingtype","title":"LaserHomingType HomingType","text":"","tags":["Class"]},{"location":"EntityLaser.html#isactiverotating","title":"Is\u00b7Active\u00b7Rotating","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-isactiverotating","title":"boolean IsActiveRotating","text":"","tags":["Class"]},{"location":"EntityLaser.html#laserlength","title":"Laser\u00b7Length","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-laserlength","title":"float LaserLength","text":"","tags":["Class"]},{"location":"EntityLaser.html#lastangledegrees","title":"Last\u00b7Angle\u00b7Degrees","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-lastangledegrees","title":"float LastAngleDegrees","text":"","tags":["Class"]},{"location":"EntityLaser.html#maxdistance","title":"Max\u00b7Distance","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-maxdistance","title":"float MaxDistance","text":"<p>Used to trim brimstone for Azazel (0 - off)</p>","tags":["Class"]},{"location":"EntityLaser.html#onehit","title":"One\u00b7Hit","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-onehit","title":"boolean OneHit","text":"<p>Laser hits only once.</p>","tags":["Class"]},{"location":"EntityLaser.html#parentoffset","title":"Parent\u00b7Offset","text":"","tags":["Class"]},{"location":"EntityLaser.html#vector-parentoffset","title":"Vector ParentOffset","text":"","tags":["Class"]},{"location":"EntityLaser.html#radius","title":"Radius","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-radius","title":"float Radius","text":"","tags":["Class"]},{"location":"EntityLaser.html#rotationdegrees","title":"Rotation\u00b7Degrees","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-rotationdegrees","title":"float RotationDegrees","text":"","tags":["Class"]},{"location":"EntityLaser.html#rotationdelay","title":"Rotation\u00b7Delay","text":"","tags":["Class"]},{"location":"EntityLaser.html#int-rotationdelay","title":"int RotationDelay","text":"","tags":["Class"]},{"location":"EntityLaser.html#rotationspd","title":"Rotation\u00b7Spd","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-rotationspd","title":"float RotationSpd","text":"","tags":["Class"]},{"location":"EntityLaser.html#samplelaser","title":"Sample\u00b7Laser","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-samplelaser","title":"boolean SampleLaser","text":"","tags":["Class"]},{"location":"EntityLaser.html#shrink","title":"Shrink","text":"","tags":["Class"]},{"location":"EntityLaser.html#boolean-shrink","title":"boolean Shrink","text":"","tags":["Class"]},{"location":"EntityLaser.html#startangledegrees","title":"Start\u00b7Angle\u00b7Degrees","text":"","tags":["Class"]},{"location":"EntityLaser.html#float-startangledegrees","title":"float StartAngleDegrees","text":"<p>Some lasers have a bit of random variation in rotation so they need to remember their starting point.</p>","tags":["Class"]},{"location":"EntityLaser.html#tearflags","title":"Tear\u00b7Flags","text":"","tags":["Class"]},{"location":"EntityLaser.html#tearflags-tearflags","title":"TearFlags TearFlags","text":"","tags":["Class"]},{"location":"EntityLaser.html#timeout","title":"Timeout","text":"","tags":["Class"]},{"location":"EntityLaser.html#int-timeout","title":"int Timeout","text":"","tags":["Class"]},{"location":"EntityNPC.html","title":"Class \"EntityNPC\"","text":"","tags":["Class"]},{"location":"EntityNPC.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityNPC.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityNPC.html#animwalkframe","title":"Anim\u00b7Walk\u00b7Frame ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-animwalkframe-string-horizontalanim-string-verticalanim-float-speedthreshold","title":"void AnimWalkFrame ( string HorizontalAnim, string VerticalAnim, float SpeedThreshold )","text":"","tags":["Class"]},{"location":"EntityNPC.html#calctargetposition","title":"Calc\u00b7Target\u00b7Position ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#vector-calctargetposition-float-distancelimit","title":"Vector CalcTargetPosition ( float DistanceLimit )","text":"","tags":["Class"]},{"location":"EntityNPC.html#canbedamagedfromvelocity","title":"Can\u00b7Be\u00b7Damaged\u00b7From\u00b7Velocity ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#boolean-canbedamagedfromvelocity-vector-velocity","title":"boolean CanBeDamagedFromVelocity ( Vector Velocity )","text":"","tags":["Class"]},{"location":"EntityNPC.html#canreroll","title":"Can\u00b7Reroll ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#boolean-canreroll","title":"boolean CanReroll ( )","text":"","tags":["Class"]},{"location":"EntityNPC.html#firebossprojectiles","title":"Fire\u00b7Boss\u00b7Projectiles ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#entityprojectile-firebossprojectiles-int-numprojectiles-vector-targetpos-float-trajectorymodifier-projectileparams-params","title":"EntityProjectile FireBossProjectiles ( int NumProjectiles, Vector TargetPos, float TrajectoryModifier, ProjectileParams Params )","text":"<p>fire a number of projectiles, optionally targeting the player direction is randomized, or slightly randomized when targeting the player FallingAccelModifier can be used to make projectiles fall faster to the ground returns a pointer to the projectile spawned last (useful e.g. when NumProjectiles=1)</p>","tags":["Class"]},{"location":"EntityNPC.html#fireprojectiles","title":"Fire\u00b7Projectiles ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-fireprojectiles-vector-pos-vector-velocity-projectilesmode-mode-projectileparams-params","title":"void FireProjectiles ( Vector Pos, Vector Velocity, ProjectilesMode Mode, ProjectileParams Params )","text":"ProjectilesMode <ul> <li>0 : single projectile</li> <li>1 : two projectiles (uses params.Spread)</li> <li>2 : three projectiles (uses params.Spread)</li> <li>3 : three projectiles (uses params.Spread, more spread out?)</li> <li>4 : four projectiles (uses params.Spread)</li> <li>5 : five projectiles (uses params.Spread)</li> <li>6 : four projectiles in a + pattern (uses velocity.x as speed)</li> <li>7 : four projectiles in a x pattern (uses velocity.x as speed)</li> <li>8 : eight projectiles in a star pattern (uses velocity.x as speed)</li> <li>9 : N projectiles in a circle (velocity.x = speed, velocity.y = N, params.FireDirectionLimit and params.DotProductLimit to fire in an arc only)</li> </ul>","tags":["Class"]},{"location":"EntityNPC.html#getaliveenemycount","title":"Get\u00b7Alive\u00b7Enemy\u00b7Count ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-getaliveenemycount","title":"int GetAliveEnemyCount ( )","text":"<p>Used to redirect close door enemies to any enemies for friendly npcs.</p>","tags":["Class"]},{"location":"EntityNPC.html#getbosscoloridx","title":"Get\u00b7Boss\u00b7Color\u00b7Idx ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-getbosscoloridx","title":"int GetBossColorIdx ( )","text":"Notes <p>This will return the boss color idx reduced by 1. To get the actual color as set in bosscolors.xml, add +1 to the result.</p>","tags":["Class"]},{"location":"EntityNPC.html#getchampioncoloridx","title":"Get\u00b7Champion\u00b7Color\u00b7Idx ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-getchampioncoloridx","title":"int GetChampionColorIdx ( )","text":"Notes <p>A list of Champion colors can be found here : ChampionColorIdx</p>","tags":["Class"]},{"location":"EntityNPC.html#getplayertarget","title":"Get\u00b7Player\u00b7Target ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#entity-getplayertarget","title":"Entity GetPlayerTarget ( )","text":"<p>if there are no modifiers (best friend) this will return the player</p>","tags":["Class"]},{"location":"EntityNPC.html#isboss","title":"Is\u00b7Boss ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#boolean-isboss","title":"boolean IsBoss ( )","text":"","tags":["Class"]},{"location":"EntityNPC.html#ischampion","title":"Is\u00b7Champion ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#boolean-ischampion","title":"boolean IsChampion ( )","text":"","tags":["Class"]},{"location":"EntityNPC.html#killunique","title":"Kill\u00b7Unique ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-killunique","title":"void KillUnique ( )","text":"<p>For entities with unique death animation, like Flush! vs poop enemies.</p>","tags":["Class"]},{"location":"EntityNPC.html#makechampion","title":"Make\u00b7Champion ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-makechampion-int-seed-championcolor-championcoloridx-1-boolean-init-false","title":"void MakeChampion ( int Seed, ChampionColor ChampionColorIdx = -1, boolean Init = false )","text":"<p>Forces a non champion to become a champion, resets hp to max hp.</p> <p>ChampionColorIdx: The type of champion to turn this enemy into (-1 results in a random champion type)</p> <p>Init: Set to true when called while initializing the enemy, false otherwise</p>","tags":["Class"]},{"location":"EntityNPC.html#makesplat","title":"Make\u00b7Splat ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#entityeffect-makesplat-float-size","title":"EntityEffect MakeSplat ( float Size )","text":"","tags":["Class"]},{"location":"EntityNPC.html#morph","title":"Morph ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#boolean-morph-entitytype-type-int-variant-int-subtype-int-championcoloridx","title":"boolean Morph ( EntityType type, int Variant, int SubType, int ChampionColorIdx )","text":"<p>Morph the current entity into another one. ChampionColorIdx can be used to turn the entity into a champion. Use <code>-1</code> in order to not add a champion color. A list of Champion colors can be found here : ChampionColorIdx</p> Bug <p>This function can not turn a champion NPC into a regular NPC! for that, use the following code: <pre><code>local previousNPC = entity:ToNPC()\n-- spawn the same entity at the same location as the old one\nIsaac.Spawn(previousNPC.Type, previousNPC.Variant, previousNPC.SubType, previousNPC.Position, previousNPC.Velocity, previousNPC.Parent)\n-- remove old entity\npreviousNPC:Remove()\n</code></pre></p> Example Code <p>This code turns an entity into a gaper. <pre><code>entity:ToNPC():Morph(EntityType.ENTITY_GAPER, 0, 0, -1)\n</code></pre></p>","tags":["Class"]},{"location":"EntityNPC.html#playsound","title":"Play\u00b7Sound ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-playsound-soundeffect-id-float-volume-int-framedelay-boolean-loop-float-pitch","title":"void PlaySound ( SoundEffect ID, float Volume, int FrameDelay, boolean Loop, float Pitch )","text":"","tags":["Class"]},{"location":"EntityNPC.html#querynpcsgroup","title":"Query\u00b7NPCs\u00b7Group ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#entitylist-querynpcsgroup-int-groupidx","title":"EntityList QueryNPCsGroup ( int GroupIdx )","text":"","tags":["Class"]},{"location":"EntityNPC.html#querynpcsspawnertype","title":"Query\u00b7NPCs\u00b7Spawner\u00b7Type ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#entitylist-querynpcsspawnertype-entitytype-spawnertype-entitytype-type-boolean-onlyenemies","title":"EntityList QueryNPCsSpawnerType ( EntityType SpawnerType, EntityType Type, boolean OnlyEnemies )","text":"","tags":["Class"]},{"location":"EntityNPC.html#querynpcstype","title":"Query\u00b7NPCs\u00b7Type ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#entitylist-querynpcstype-entitytype-type-int-variant","title":"EntityList QueryNPCsType ( EntityType Type, int Variant )","text":"","tags":["Class"]},{"location":"EntityNPC.html#resetpathfindertarget","title":"Reset\u00b7Path\u00b7Finder\u00b7Target ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#void-resetpathfindertarget","title":"void ResetPathFinderTarget ( )","text":"","tags":["Class"]},{"location":"EntityNPC.html#throwspider","title":"Throw\u00b7Spider ()","text":"","tags":["Class"]},{"location":"EntityNPC.html#static-const-entitynpc-throwspider-vector-position-entity-spawner-vector-targetpos-boolean-big-float-yoffset","title":"static const EntityNPC ThrowSpider ( Vector Position, Entity Spawner, Vector TargetPos, boolean Big, float YOffset )","text":"","tags":["Class"]},{"location":"EntityNPC.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"EntityNPC.html#canshutdoors","title":"Can\u00b7Shut\u00b7Doors","text":"","tags":["Class"]},{"location":"EntityNPC.html#boolean-canshutdoors","title":"boolean CanShutDoors","text":"","tags":["Class"]},{"location":"EntityNPC.html#childnpc","title":"Child\u00b7NPC","text":"","tags":["Class"]},{"location":"EntityNPC.html#const-entitynpc-childnpc","title":"const EntityNPC ChildNPC","text":"","tags":["Class"]},{"location":"EntityNPC.html#entityref","title":"Entity\u00b7Ref","text":"","tags":["Class"]},{"location":"EntityNPC.html#entity-entityref","title":"Entity EntityRef","text":"","tags":["Class"]},{"location":"EntityNPC.html#groupidx","title":"Group\u00b7Idx","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-groupidx","title":"int GroupIdx","text":"<p>Used to identify multichunks groups.</p>","tags":["Class"]},{"location":"EntityNPC.html#i1","title":"I1","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-i1","title":"int I1","text":"<p>General usage int for AI specific actions. The effect and usage is manually defined for each entity. It can also not be used at all for some.</p> <p>Example: The Frail sets I2 to 1 when entering the second phase.</p>","tags":["Class"]},{"location":"EntityNPC.html#i2","title":"I2","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-i2","title":"int I2","text":"<p>General usage int for AI specific actions. The effect and usage is manually defined for each entity. It can also not be used at all for some.</p> <p>Example: The Frail sets I2 to 1 when entering the second phase.</p>","tags":["Class"]},{"location":"EntityNPC.html#parentnpc","title":"Parent\u00b7NPC","text":"","tags":["Class"]},{"location":"EntityNPC.html#const-entitynpc-parentnpc","title":"const EntityNPC ParentNPC","text":"<p>parent entity, for multi-entity NPCs like Larry Jr.</p>","tags":["Class"]},{"location":"EntityNPC.html#pathfinder","title":"Pathfinder","text":"","tags":["Class"]},{"location":"EntityNPC.html#pathfinder-pathfinder","title":"PathFinder Pathfinder","text":"","tags":["Class"]},{"location":"EntityNPC.html#projectilecooldown","title":"Projectile\u00b7Cooldown","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-projectilecooldown","title":"int ProjectileCooldown","text":"<p>projectiles can fire again when it reaches 0</p>","tags":["Class"]},{"location":"EntityNPC.html#projectiledelay","title":"Projectile\u00b7Delay","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-projectiledelay","title":"int ProjectileDelay","text":"<p>&gt;0: projectile will be fired in n frames</p>","tags":["Class"]},{"location":"EntityNPC.html#scale","title":"Scale","text":"","tags":["Class"]},{"location":"EntityNPC.html#float-scale","title":"float Scale","text":"","tags":["Class"]},{"location":"EntityNPC.html#state","title":"State","text":"","tags":["Class"]},{"location":"EntityNPC.html#npcstate-state","title":"NpcState State","text":"","tags":["Class"]},{"location":"EntityNPC.html#stateframe","title":"State\u00b7Frame","text":"","tags":["Class"]},{"location":"EntityNPC.html#int-stateframe","title":"int StateFrame","text":"","tags":["Class"]},{"location":"EntityNPC.html#v1","title":"V1","text":"","tags":["Class"]},{"location":"EntityNPC.html#vector-v1","title":"Vector V1","text":"<p>General usage Vector for AI specific actions. Initialized to be Vector(0,0). The effect and usage is manually defined for each entity. It can also not be used at all for some.</p>","tags":["Class"]},{"location":"EntityNPC.html#v2","title":"V2","text":"","tags":["Class"]},{"location":"EntityNPC.html#vector-v2","title":"Vector V2","text":"<p>General usage Vector for AI specific actions. Initialized to be Vector(0,0). The effect and usage is manually defined for each entity. It can also not be used at all for some.</p>","tags":["Class"]},{"location":"EntityPickup.html","title":"Class \"EntityPickup\"","text":"","tags":["Class"]},{"location":"EntityPickup.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityPickup.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityPickup.html#appearfast","title":"Appear\u00b7Fast ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-appearfast","title":"void AppearFast ( )","text":"","tags":["Class"]},{"location":"EntityPickup.html#canreroll","title":"Can\u00b7Reroll ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#boolean-canreroll","title":"boolean CanReroll ( )","text":"","tags":["Class"]},{"location":"EntityPickup.html#getcoinvalue","title":"Get\u00b7Coin\u00b7Value ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-getcoinvalue","title":"int GetCoinValue ( )","text":"<p>If this is a coin, return its face value, else zero.</p>","tags":["Class"]},{"location":"EntityPickup.html#isshopitem","title":"Is\u00b7Shop\u00b7Item ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#boolean-isshopitem","title":"boolean IsShopItem ( )","text":"","tags":["Class"]},{"location":"EntityPickup.html#morph","title":"Morph ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-morph-entitytype-type-int-variant-int-subtype-boolean-keepprice-false-boolean-keepseed-false-boolean-ignoremodifiers-false","title":"void Morph ( EntityType Type, int Variant, int SubType, boolean KeepPrice = false, boolean KeepSeed = false, boolean IgnoreModifiers = false )","text":"<p>KeepSeed: If set to true, keeps the initial RNG seed of the pickup instead of rerolling it</p> <p>IgnoreModifiers: If set to true, ignores item effects that might turn this pickup into something other than the specificed variant and subtype</p>","tags":["Class"]},{"location":"EntityPickup.html#playdropsound","title":"Play\u00b7Drop\u00b7Sound ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-playdropsound","title":"void PlayDropSound ( )","text":"","tags":["Class"]},{"location":"EntityPickup.html#playpickupsound","title":"Play\u00b7Pickup\u00b7Sound ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#void-playpickupsound","title":"void PlayPickupSound ( )","text":"","tags":["Class"]},{"location":"EntityPickup.html#tryopenchest","title":"Try\u00b7Open\u00b7Chest ()","text":"","tags":["Class"]},{"location":"EntityPickup.html#boolean-tryopenchest-entityplayer-player-nil","title":"boolean TryOpenChest ( EntityPlayer Player = nil )","text":"<p>Player: The player that opened this chest</p>","tags":["Class"]},{"location":"EntityPickup.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"EntityPickup.html#autoupdateprice","title":"Auto\u00b7Update\u00b7Price","text":"","tags":["Class"]},{"location":"EntityPickup.html#boolean-autoupdateprice","title":"boolean AutoUpdatePrice","text":"","tags":["Class"]},{"location":"EntityPickup.html#charge","title":"Charge","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-charge","title":"int Charge","text":"","tags":["Class"]},{"location":"EntityPickup.html#optionspickupindex","title":"OptionsPickupIndex","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-optionspickupindex","title":"int OptionsPickupIndex","text":"<p>Any non-zero value causes the item to form an option group with any other item with the same OptionsPickupIndex value.</p> <p>When an item belonging to an option group is picked up, all other items belonging to the same group disappear.</p> <p>0 is the default value and means the item doesn't belong to any group.</p>","tags":["Class"]},{"location":"EntityPickup.html#price","title":"Price","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-price","title":"int Price","text":"<p>Price of the pickup in shops.</p> Tainted Keeper Info <p>On Tainted Keeper, all items are supposed to have a price. But any items spawned with Lua does not comply with this rule, so you have to manually set a price. On the next frame after assigning a price (for example <code>1</code>), it will snap to the correct price it would have for Tainted Keeper (e.g. 15). This is because of the AutoUpdatePrice feature.</p> <p>This method works most of the time. However, it breaks in special rooms (e.g. Angel Rooms) such that sometimes, the price will snap to wrong values, such as 24, 99, and so on. The fix for this, set ShopItemId to an arbitrary negative value (e.g. -1).</p>","tags":["Class"]},{"location":"EntityPickup.html#shopitemid","title":"Shop\u00b7Item\u00b7Id","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-shopitemid","title":"int ShopItemId","text":"<p>If in a shop, this value describes which slot the item is for sale in. For example, if the shop has 6 things for sale, the pickups in the room will have shop item IDs of 0, 1, 2, 3, 4, and 5.</p> <p>When spawning a new collectible item, the ShopItemId will be 0 by default. This has a side effect of making the D6 roll the collectible into a red heart. By setting shop item id to -1, it will fix this behavior such that the collectible will properly roll into another collectible. However, non-collectible pickups may reroll into collectibles through a D20 or similar.</p> <p>By setting shop item id to -2, automatic prices will be devil deal prices. Otherwise this is identical to -1.</p> <p>Other negative values act identically to -1.</p>","tags":["Class"]},{"location":"EntityPickup.html#state","title":"State","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-state","title":"int State","text":"","tags":["Class"]},{"location":"EntityPickup.html#timeout","title":"Timeout","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-timeout","title":"int Timeout","text":"<p>Causes the pickup to blink and then disappear after a certain amount of time like the temporary health dropped from tainted maggy. The value decreases by 1 every game frame and after hitting 0 the pickup disappears. If the Timeout is set to -1(the default value for normal pickups) the pickup will act normally and not disappear.</p>","tags":["Class"]},{"location":"EntityPickup.html#touched","title":"Touched","text":"","tags":["Class"]},{"location":"EntityPickup.html#boolean-touched","title":"boolean Touched","text":"","tags":["Class"]},{"location":"EntityPickup.html#wait","title":"Wait","text":"","tags":["Class"]},{"location":"EntityPickup.html#int-wait","title":"int Wait","text":"<p>Used with collectibles to enforce a period of time where the player will not automatically pick up the collectible. New collectibles spawn with a <code>Wait</code> value of 20 (which corresponds to 20 game frames). The value will automatically decrement as game frames pass.</p> <p>It is unknown whether or not this value is used for pickups other than collectibles.</p>","tags":["Class"]},{"location":"EntityPlayer.html","title":"Class \"EntityPlayer\"","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class","Player"]},{"location":"EntityPlayer.html#functions","title":"Functions","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addblackhearts","title":"Add\u00b7Black\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addblackhearts-int-blackhearts","title":"void AddBlackHearts ( int BlackHearts )","text":"<p>Adds Black hearts to the player. 1 unit is half a heart. Remove them with negative numbers.</p> Example Code <p>This code adds 1 full black heart to the player. <pre><code>Isaac.GetPlayer():AddBlackHearts(2)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addbloodcharge","title":"Add\u00b7Blood\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addbloodcharge-int-amount","title":"void AddBloodCharge ( int Amount )","text":"<p>Only works on Tainted Bethany.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addblueflies","title":"Add\u00b7Blue\u00b7Flies ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entity-addblueflies-int-amount-vector-position-entity-target","title":"Entity AddBlueFlies ( int Amount, Vector Position, Entity Target )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addbluespider","title":"Add\u00b7Blue\u00b7Spider ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entity-addbluespider-vector-position","title":"Entity AddBlueSpider ( Vector Position )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addbombs","title":"Add\u00b7Bombs ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addbombs-int-amount","title":"void AddBombs ( int Amount )","text":"<p>Adds bombs to the player. Remove them with negative numbers.</p> Example Code <p>This code removes 1 bomb from the player. <pre><code>Isaac.GetPlayer():AddBombs(-1)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addbonehearts","title":"Add\u00b7Bone\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addbonehearts-int-hearts","title":"void AddBoneHearts ( int Hearts )","text":"<p>Adds bone hearts to the player. 1 unit is a single bone heart. Remove them with negative numbers.</p> Example Code <p>This code adds 1 bone heart to the player. <pre><code>Isaac.GetPlayer():AddBoneHearts(1)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addbrokenhearts","title":"Add\u00b7Broken\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addbrokenhearts-int-brokenhearts","title":"void AddBrokenHearts ( int BrokenHearts )","text":"<p>Adds broken hearts to the player. 1 unit is one broken heart. Broken hearts can be removed with negative numbers.</p> Example Code <p>This code adds 1 broken heart to the player, then takes it away. <pre><code>Isaac.GetPlayer():AddBrokenHearts(1)\nIsaac.GetPlayer():AddBrokenHearts(-1)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addcacheflags","title":"Add\u00b7Cache\u00b7Flags ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addcacheflags-cacheflag-cacheflag","title":"void AddCacheFlags ( CacheFlag CacheFlag )","text":"<p>Will reevaluate the cache flags provided in the next cache reevaluation.</p> Example Code <p>This code will add several cacheflags. <pre><code>Isaac.GetPlayer():AddCacheFlags(CacheFlag.CACHE_DAMAGE | CacheFlag.CACHE_FIREDELAY | CacheFlag.CACHE_LUCK)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addcard","title":"Add\u00b7Card ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addcard-card-id","title":"void AddCard ( Card ID )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addcoins","title":"Add\u00b7Coins ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addcoins-int-amount","title":"void AddCoins ( int Amount )","text":"<p>Adds coins to the player. Remove them with negative numbers.</p> Example Code <p>This code adds 1 coin to the player. <pre><code>Isaac.GetPlayer():AddCoins(1)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addcollectible","title":"Add\u00b7Collectible ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addcollectible-collectibletype-type-int-charge-0-boolean-firsttimepickingup-true-activeslot-slot-activeslotslot_primary-int-vardata-0","title":"void AddCollectible ( CollectibleType Type, int Charge = 0, boolean FirstTimePickingUp = true, ActiveSlot Slot = ActiveSlot.SLOT_PRIMARY, int VarData = 0)","text":"<p>Setting FirstTimePickingUp to false will not add the consumables (keys, bombs,...) of the item and will cause it to not count towards transformations.</p> <p>Slot 0 is default (normal active item) Slot 1 is used by Schoolbag Slot 2 is used for pocket active items</p> Notes <p>Slot 2 cannot be used if character did not start with a pocket active</p> <p>VarData is used for the storage of a persistent context-sensitive value</p> Notes <p>This is a list of all items that make use of VarData: - Jar of Wisps: Wisps spawned on next use (Max 12) - D Infinity, Blank Card, Clear Rune, Placebo: Current maximum charge (Any value above 0) - Hold: Stored poop</p> <p>Poop Types: [0] None [1] Normal [2] Flies [3] Fire [4] Petrified [5] Toxic [6] Black [7] Holy [8] X-Lax [9] Fart [10] Bomb [11] Explosive Diarrhea [12+] Empty</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addcontrolscooldown","title":"Add\u00b7Controls\u00b7Cooldown ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addcontrolscooldown-int-cooldown","title":"void AddControlsCooldown ( int Cooldown )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addcostume","title":"Add\u00b7Costume ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addcostume-itemconfigitem-item-boolean-itemstateonly","title":"void AddCostume ( ItemConfigItem Item, boolean ItemStateOnly )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addcursemisteffect","title":"Add\u00b7Curse\u00b7Mist\u00b7Effect ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addcursemisteffect","title":"void AddCurseMistEffect ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#adddeadeyecharge","title":"Add\u00b7Dead\u00b7Eye\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-adddeadeyecharge","title":"void AddDeadEyeCharge ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#adddollarbilleffect","title":"Add\u00b7Dollar\u00b7Bill\u00b7Effect ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-adddollarbilleffect","title":"void AddDollarBillEffect ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addeternalhearts","title":"Add\u00b7Eternal\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addeternalhearts-int-eternalhearts","title":"void AddEternalHearts ( int EternalHearts )","text":"<p>Adds eternal hearts to the player. 1 unit is half a heart. Remove them with negative numbers.</p> <p>(Note that eternal hearts automatically turn to full hearts, when you have more than one.)</p> Example Code <p>This code adds 1 eternal heart to the player. <pre><code>Isaac.GetPlayer():AddEternalHearts(1)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addfriendlydip","title":"Add\u00b7Friendly\u00b7Dip ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addfriendlydip-int-subtype-vector-position","title":"void AddFriendlyDip ( int Subtype, Vector Position )","text":"Dip Subtypes <pre><code>0: normal\n1: red\n2: corny\n3: golden\n4: rainbow\n5: black\n6: holy\n12: stone\n13: flaming\n14: poison\n20: brownie\n</code></pre>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addgigabombs","title":"Add\u00b7Giga\u00b7Bombs ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addgigabombs-int-gigabombs","title":"void AddGigaBombs ( int GigaBombs )","text":"Notes <p>Giga bombs do not add to the bomb counter, make sure to increase the bomb count beforehand! You can't add more giga bombs than player's current bomb count.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addgoldenbomb","title":"Add\u00b7Golden\u00b7Bomb ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addgoldenbomb","title":"void AddGoldenBomb ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addgoldenhearts","title":"Add\u00b7Golden\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addgoldenhearts-int-hearts","title":"void AddGoldenHearts ( int Hearts )","text":"<p>Adds golden hearts to the player. 1 unit is a single gold heart. Remove them with negative numbers.</p> Example Code <p>This code adds 1 golden heart to the player. <pre><code>Isaac.GetPlayer():AddGoldenHearts(1)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addgoldenkey","title":"Add\u00b7Golden\u00b7Key ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addgoldenkey","title":"void AddGoldenKey ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addhearts","title":"Add\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addhearts-int-hearts","title":"void AddHearts ( int Hearts )","text":"<p>Adds red hearts to the player if there are any empty heart containers. 1 unit is half a heart. Remove health with negative numbers.</p> Example Code <p>This code adds 1 full red heart to the player. <pre><code>Isaac.GetPlayer():AddHearts(2)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#additemwisp","title":"Add\u00b7Item\u00b7Wisp ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entityfamiliar-additemwisp-collectibletype-collectible-vector-position-boolean-adjustorbitlayer-false","title":"EntityFamiliar AddItemWisp ( CollectibleType Collectible, Vector Position, boolean AdjustOrbitLayer = false )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addjarflies","title":"Add\u00b7Jar\u00b7Flies ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addjarflies-int-flies","title":"void AddJarFlies ( int Flies )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addjarhearts","title":"Add\u00b7Jar\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addjarhearts-int-hearts","title":"void AddJarHearts ( int Hearts )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addkeys","title":"Add\u00b7Keys ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addkeys-int-amount","title":"void AddKeys ( int Amount )","text":"<p>Adds keys to the player. Remove them with negative numbers.</p> Example Code <p>This code adds 1 key to the player. <pre><code>Isaac.GetPlayer():AddKeys(1)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addmaxhearts","title":"Add\u00b7Max\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addmaxhearts-int-maxhearts-boolean-ignorekeeper","title":"void AddMaxHearts ( int MaxHearts, boolean IgnoreKeeper )","text":"<p>Adds heart containers to the player. 2 units is a full heart container. Remove them with negative numbers.</p> Notes <p>It is possible to add a half heart container to the player. This will appear as a regular heart container but can only be filled half-way.</p> Example Code <p>This code adds 1 heart container to the player. <pre><code>Isaac.GetPlayer():AddMaxHearts(2,true)\n</code></pre></p> Bugs <p>IgnoreKeeper does not appear to work as intended.</p> <p>Max hearts can be added or removed from Keeper regardless of what this boolean is. If Keeper has Greed's Gullet and this boolean is set to false, max hearts cannot be added to Keeper, but can be removed normally. If Keeper has Greed's Gullet and this boolean is set to true, Max hearts can be added or removed from Keeper normally.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addminisaac","title":"Add\u00b7Minisaac ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entityfamiliar-addminisaac-vector-position-boolean-playanim-true","title":"EntityFamiliar AddMinisaac ( Vector Position, boolean PlayAnim = true )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addnullcostume","title":"Add\u00b7Null\u00b7Costume ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addnullcostume-nullitemid-nullid","title":"void AddNullCostume ( NullItemID NullId )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addpill","title":"Add\u00b7Pill ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addpill-pillcolor-pill","title":"void AddPill ( PillColor Pill )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addplayerformcostume","title":"Add\u00b7Player\u00b7Form\u00b7Costume ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addplayerformcostume-playerform-form","title":"void AddPlayerFormCostume ( PlayerForm Form )","text":"<p>Adds the costume of the given transformation.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addpoopmana","title":"Add\u00b7Poop\u00b7Mana ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addpoopmana-int-num","title":"void AddPoopMana ( int Num )","text":"<p>Adds (or remove) poop consumables from the player</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addprettyfly","title":"Add\u00b7Pretty\u00b7Fly ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addprettyfly","title":"void AddPrettyFly ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addrottenhearts","title":"Add\u00b7Rotten\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addrottenhearts-int-rottenhearts","title":"void AddRottenHearts ( int RottenHearts )","text":"<p>Adds rotten hearts to the player. 1 unit is half a heart. Remove rotten hearts with negative numbers.</p> Example Code <p>This code adds 1 full rotten heart to the player. <pre><code>Isaac.GetPlayer():AddRottenHearts(2)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addsoulcharge","title":"Add\u00b7Soul\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addsoulcharge-int-amount","title":"void AddSoulCharge ( int Amount )","text":"<p>Adds one soul heart to Bethany's charge, equivalent to a half soul heart.</p> Notes <p>This function will only work when playing as Bethany.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addsoulhearts","title":"Add\u00b7Soul\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addsoulhearts-int-soulhearts","title":"void AddSoulHearts ( int SoulHearts )","text":"<p>Adds soul hearts to the player. 1 unit is half a heart. Remove them with negative numbers.</p> Example Code <p>This code adds 1 full soul heart to the player. <pre><code>Isaac.GetPlayer():AddSoulHearts(2)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addswarmflyorbital","title":"Add\u00b7Swarm\u00b7Fly\u00b7Orbital ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entityfamiliar-addswarmflyorbital-vector-position","title":"EntityFamiliar AddSwarmFlyOrbital ( Vector Position )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#addtrinket","title":"Add\u00b7Trinket ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-addtrinket-trinkettype-type-boolean-firsttimepickingup-true","title":"void AddTrinket ( TrinketType Type, boolean FirstTimePickingUp = true )","text":"<ul> <li>If the player does not have any open trinket slots, this function will do nothing.</li> <li>If the player has an open trinket slot but already has a trinket, the new trinket will go to the first slot and the existing trinket will get pushed back to the second slot.</li> <li>If you provide an argument of 0 or an otherwise invalid trinket ID, the game will crash.</li> <li>Setting FirstTimePickingUp to false will not spawn or add pickups for the item and will not cause it to count towards transformations.</li> </ul>","tags":["Class","Player"]},{"location":"EntityPlayer.html#addwisp","title":"Add\u00b7Wisp ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entityfamiliar-addwisp-collectibletype-collectible-vector-position-boolean-adjustorbitlayer-false-boolean-dontupdate-false","title":"EntityFamiliar AddWisp ( CollectibleType Collectible, Vector Position, boolean AdjustOrbitLayer = false, boolean DontUpdate = false )","text":"<p>The type of Wisp can be defined with the Collectible. If the ID is not corresponding to an active item with a special wisp, it will default to the regular blue wisp.</p> <p>To access special wisp variant like Delirious forms, you need to add <code>65536</code> (1 &lt;&lt; 16) to the id. Example: Delirious Monstro has <code>id = s14</code>, so the wisps id is <code>65550</code>.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#animateappear","title":"Animate\u00b7Appear ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animateappear","title":"void AnimateAppear ( )","text":"<p>Play the animation that is normally played at the beginning of a stage.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#animatecard","title":"Animate\u00b7Card ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animatecard-card-id-string-animname-pickup","title":"void AnimateCard ( Card ID, string AnimName = \"Pickup\" )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#animatecollectible","title":"Animate\u00b7Collectible ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animatecollectible-collectibletype-collectible-string-animname-pickup-string-spriteanimname-playerpickupsparkle","title":"void AnimateCollectible ( CollectibleType Collectible, string AnimName = \"Pickup\", string SpriteAnimName = \"PlayerPickupSparkle\" )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#animatehappy","title":"Animate\u00b7Happy ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animatehappy","title":"void AnimateHappy ( )","text":"<p>Plays the happy animation, played when taking a positive pill.</p> Example Code <p>This code plays the happy animation. <pre><code>local player = Isaac.GetPlayer()\nplayer:AnimateHappy()\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#animatelighttravel","title":"Animate\u00b7Light\u00b7Travel ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animatelighttravel","title":"void AnimateLightTravel ( )","text":"<p>Plays the animation that is played when entering the light in the ascent, or entering the cathedral.</p> Example Code <p>Plays the animation. <pre><code>local player = Isaac.GetPlayer()\nplayer:AnimateLightTravel()\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#animatepickup","title":"Animate\u00b7Pickup ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animatepickup-sprite-sprite-boolean-hideshadow-false-string-animname-pickup","title":"void AnimatePickup ( Sprite sprite, boolean HideShadow = false, string AnimName = \"Pickup\" )","text":"<p>Plays a pickup animation using any supplied Sprite object HideShadow should be usually set to true when rendering a sprite with a custom shadow layer</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#animatepill","title":"Animate\u00b7Pill ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animatepill-pillcolor-pill-string-animname-pickup","title":"void AnimatePill ( PillColor Pill, string AnimName = \"Pickup\" )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#animatepitfallin","title":"Animate\u00b7Pitfall\u00b7In ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animatepitfallin","title":"void AnimatePitfallIn ( )","text":"<p>Does 1/2 heart of damage and plays the animation of falling into a pitfall.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#animatepitfallout","title":"Animate\u00b7Pitfall\u00b7Out ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animatepitfallout","title":"void AnimatePitfallOut ( )","text":"<p>The animation of jumping back out of a pitfall.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#animatesad","title":"Animate\u00b7Sad ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animatesad","title":"void AnimateSad ( )","text":"<p>Plays the sad animation, played when taking a negative pill.</p> Example Code <p>Plays the sad animation. <pre><code>    local player = Isaac.GetPlayer()\nplayer:AnimateSad()\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#animateteleport","title":"Animate\u00b7Teleport ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animateteleport-boolean-up","title":"void AnimateTeleport ( boolean Up )","text":"<p>The animation played when teleporting into another room.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#animatetrapdoor","title":"Animate\u00b7Trapdoor ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animatetrapdoor","title":"void AnimateTrapdoor ( )","text":"<p>Plays the animation of the player jumping down a trapdoor.     ???- example \"Example Code\"         Plays the animation of jumping down a trapdoor.         <code>local player = Isaac.GetPlayer()         player:AnimateTrapdoor()</code></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#animatetrinket","title":"Animate\u00b7Trinket ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-animatetrinket-trinkettype-trinket-string-animname-pickup-string-spriteanimname-playerpickupsparkle","title":"void AnimateTrinket ( TrinketType Trinket, string AnimName = \"Pickup\", string SpriteAnimName = \"PlayerPickupSparkle\" )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#arecontrolsenabled","title":"Are\u00b7Controls\u00b7Enabled ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-arecontrolsenabled","title":"boolean AreControlsEnabled ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#areopposingshootdirectionspressed","title":"Are\u00b7Opposing\u00b7Shoot\u00b7Directions\u00b7Pressed ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-areopposingshootdirectionspressed","title":"boolean AreOpposingShootDirectionsPressed ( )","text":"<p>Returns the non-zero joystick direction from the most recent movement input, but goes to zero after the player comes to a stop.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#canaddcollectible","title":"Can\u00b7Add\u00b7Collectible ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-canaddcollectible-collectibletype-type-collectibletypecollectible_null","title":"boolean CanAddCollectible ( CollectibleType Type = CollectibleType.COLLECTIBLE_NULL )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#canpickblackhearts","title":"Can\u00b7Pick\u00b7Black\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-canpickblackhearts","title":"boolean CanPickBlackHearts ( )","text":"<p>returns true if player has room for more black hearts</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#canpickbonehearts","title":"Can\u00b7Pick\u00b7Bone\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-canpickbonehearts","title":"boolean CanPickBoneHearts ( )","text":"<p>returns true if player has room for more bone hearts</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#canpickgoldenhearts","title":"Can\u00b7Pick\u00b7Golden\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-canpickgoldenhearts","title":"boolean CanPickGoldenHearts ( )","text":"<p>returns true if player has room for more golden hearts</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#canpickredhearts","title":"Can\u00b7Pick\u00b7Red\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-canpickredhearts","title":"boolean CanPickRedHearts ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#canpickrottenhearts","title":"Can\u00b7Pick\u00b7Rotten\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-canpickrottenhearts","title":"boolean CanPickRottenHearts ( )","text":"<p>Returns true if player has room for more rotten hearts</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#canpicksoulhearts","title":"Can\u00b7Pick\u00b7Soul\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-canpicksoulhearts","title":"boolean CanPickSoulHearts ( )","text":"<p>Returns true if player has room for more soul hearts</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#canpickupitem","title":"Can\u00b7Pickup\u00b7Item ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-canpickupitem","title":"boolean CanPickupItem ( )","text":"<p>Can Player pick up an item right now?</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#canshoot","title":"Can\u00b7Shoot ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-canshoot","title":"boolean CanShoot ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#canturnhead","title":"Can\u00b7Turn\u00b7Head ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-canturnhead","title":"boolean CanTurnHead ( )","text":"<p>Returns true if head should react to keys or false otherwise</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#changeplayertype","title":"Change\u00b7Player\u00b7Type ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-changeplayertype-playertype-playertype","title":"void ChangePlayerType ( PlayerType PlayerType )","text":"<p>Used to change one player into another player type. For example turning Cain into Maggy.</p> <p>Changing the player type within MC_POST_PLAYER_INIT will result in the player getting the default items for that character. E.g. Maggy will get her Yum Heart without you having to explicitly add it. Exceptions here include unlockable items (e.g. Isaac's D6) and default numbers of hearts/keys/bombs/coins. You can change the player type after init, but then you're generally responsible for adding any items you might associate with that character.</p> <p>Changing the player Type into Jacob will also spawn Esau.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#checkfamiliar","title":"Check\u00b7Familiar ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-checkfamiliar-int-familiarvariant-int-targetcount-rng-rng-itemconfigitem-sourceitemconfigitem-nil-int-familiarsubtype-1","title":"void CheckFamiliar ( int FamiliarVariant, int TargetCount, RNG rng, ItemConfigItem SourceItemConfigItem = nil, int FamiliarSubType = -1 )","text":"<p>Call this method to spawn the appropriate amount of familiars associated with a custom collectible.</p> <ul> <li>If the target count specified is less than the current amount of familiars, it will spawn more until the target count is met.</li> <li>If the target count specified is than the current amount of familiars, it will despawn familiars until the target count is met.</li> </ul> <p>This is meant to be called in the EvaluateCache callback (when the cache flag is equal to <code>CacheFlag.CACHE_FAMILIARS</code>).</p> <p>Note that this function is bugged in that it will not increment the provided RNG. This is bad because if you provide the player's collectible RNG as the argument for <code>rng</code>, the resulting spawned familiars will potentially have the same <code>InitSeed</code> as familiars spawned previously on the same run. Since <code>InitSeed</code> is the main way to identiy unique familiars, it is important that each familiar has a unique <code>InitSeed</code>. Thus, a brand new <code>RNG</code> object should always be passed to the <code>EntityPlayer.CheckFamiliar</code> method so that each new spawned familiar will have a new, random <code>InitSeed</code>. Subsequently, you should handle random familiar events not with an RNG object based on the familiar's <code>InitSeed</code>, but with a data structure that maps familiar <code>InitSeed</code>to RNG objects that are initialized based on the seed from the <code>EntityPlayer.GetCollectibleRNG</code> method.</p> <p>In most cases, IsaacScript users should use the <code>checkFamiliarFromCollectibles</code> helper function instead of using this method directly, as it automatically calculates the appropriate target count.</p> <p>FamiliarVariant: In most cases, use the familiar variant for your custom familiar.</p> <p>TargetCount: The expected amount of this FamiliarVariant that this EntityPlayer should have. This argument can simply be how many of an item that the current EntityPlayer owns. However, if you want your familiar to synergize with Monster Manual and Box of Friends, then this argument should be  <code>EntityPlayer:GetCollectibleNum(collectibleType) + EntityPlayer:GetEffects():GetCollectibleEffectNum(collectibleType)</code>.</p> <p>rng: Always use a brand new RNG object. (See the previous explanation on why you should not use the RNG from the <code>EntityPlayer.GetCollectibleRNG</code> method.)</p> <p>SourceItemConfigItem: The <code>ItemConfigItem</code> that this familiar was created by. This is nil by default, but it should always be specified so that Sacrificial Altar will work properly. (It informs the game which collectible should be removed if the familiar is tagged with the \"cansacrifice\" entity tag.) This can be obtained with: <code>Isaac.GetItemConfig():GetCollectible(collectibleType)</code></p> <p>FamiliarSubType: The subtype of the familiar to check. -1 matches any subtype.</p> Example Code <p>This code spawns 3 \"Sister Maggy\" familiars. <pre><code>local player = Isaac.GetPlayer()\nlocal sourceCollectibleID = CollectibleType.COLLECTIBLE_SAD_ONION\nlocal collectibleRNG = player:GetCollectibleRNG(sourceCollectibleID)\nlocal itemConfig = Isaac.GetItemConfig():GetCollectible(sourceCollectibleID)\n\nplayer:CheckFamiliar(FamiliarVariant.SISTER_MAGGY, 3, collectibleRNG, itemConfig)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#clearcostumes","title":"Clear\u00b7Costumes ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-clearcostumes","title":"void ClearCostumes ( )","text":"<p>Removes all costumes.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#cleardeadeyecharge","title":"Clear\u00b7Dead\u00b7Eye\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-cleardeadeyecharge","title":"void ClearDeadEyeCharge ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#cleartemporaryeffects","title":"Clear\u00b7Temporary\u00b7Effects ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-cleartemporaryeffects","title":"void ClearTemporaryEffects ( )","text":"<p>Will be called when player exits the room.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#dischargeactiveitem","title":"Discharge\u00b7Active\u00b7Item ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-dischargeactiveitem-activeslot-activeslot-activeslotslot_primary","title":"void DischargeActiveItem ( ActiveSlot ActiveSlot = ActiveSlot.SLOT_PRIMARY )","text":"<p>Sets the charge of your active item to 0 without triggering the active item effect.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#donateluck","title":"Donate\u00b7Luck ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-donateluck-int-luck","title":"void DonateLuck ( int Luck )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#doziteffect","title":"Do\u00b7Zit\u00b7Effect ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-doziteffect-vector-direction","title":"void DoZitEffect ( Vector Direction )","text":"<p>Fires a creep shot, same as the one fired by the item \"The Large Zit\"</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#droppocketitem","title":"Drop\u00b7Pocket\u00b7Item ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-droppocketitem-int-pocketnum-vector-pos","title":"void DropPocketItem ( int PocketNum, Vector Pos )","text":"<p>Drops a held pocketitem (Card, Pill, Rune... from the given itemslot at the given position. Possible pocketnumbers are [0, 1, 2, 3].  Dropping pocket active items or dice bag dices does not work.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#droptrinket","title":"Drop\u00b7Trinket ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-droptrinket-vector-droppos-boolean-replacetick","title":"void DropTrinket ( Vector DropPos, boolean ReplaceTick )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#evaluateitems","title":"Evaluate\u00b7Items ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-evaluateitems","title":"void EvaluateItems ( )","text":"<p>Triggers a cache reevaluation. Will trigger the MC_EVALUATE_CACHE callback.</p> <p>Before you use this function, you need to set the appropriate cache flags first. See the example below.</p> Example Code <p>This code re-evaluates all of the stats for the player. <pre><code>local player = Isaac.GetPlayer()\nplayer:AddCacheFlags(CacheFlag.CACHE_ALL)\nplayer:EvaluateItems()\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#firebomb","title":"Fire\u00b7Bomb ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entitybomb-firebomb-vector-position-vector-velocity-entity-source-nil","title":"EntityBomb FireBomb ( Vector Position, Vector Velocity, Entity Source = nil )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#firebrimstone","title":"Fire\u00b7Brimstone ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entitylaser-firebrimstone-vector-direction-entity-source-nil-float-damagemultiplier-1","title":"EntityLaser FireBrimstone ( Vector Direction, Entity Source = nil, float DamageMultiplier = 1 )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#firedelayedbrimstone","title":"Fire\u00b7Delayed\u00b7Brimstone ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entitylaser-firedelayedbrimstone-float-angle-entity-parent","title":"EntityLaser FireDelayedBrimstone ( float Angle, Entity Parent )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#fireknife","title":"Fire\u00b7Knife ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entityknife-fireknife-entity-parent-float-rotationoffset-0-boolean-cantoverwrite-false-int-subtype-0-int-variant-0","title":"EntityKnife FireKnife ( Entity Parent, float RotationOffset = 0, boolean CantOverwrite = false, int SubType = 0, int Variant = 0 )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#firetear","title":"Fire\u00b7Tear ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entitytear-firetear-vector-position-vector-velocity-boolean-canbeeye-true-boolean-notractorbeam-false-boolean-cantriggerstreakend-true-entity-source-nil-float-damagemultiplier-1","title":"EntityTear FireTear ( Vector Position, Vector Velocity, boolean CanBeEye = true, boolean NoTractorBeam = false, boolean CanTriggerStreakEnd = true, Entity Source = nil, float DamageMultiplier = 1 )","text":"<ul> <li><code>CanBeEye</code>: If the player has the Evil Eye item, passing true allows the tear to have a chance of being an eye.</li> <li><code>NoTractorBeam</code>: If the player has the Tractor Beam item, passing true means that the tear will be exempt from the beam.</li> <li><code>CanTriggerStreakEnd</code>: If the player has the Dead Eye item, passing false means that the tear will be exempt from ending the streak.</li> </ul>","tags":["Class","Player"]},{"location":"EntityPlayer.html#firetechlaser","title":"Fire\u00b7Tech\u00b7Laser ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entitylaser-firetechlaser-vector-position-laseroffset-offsetid-vector-direction-boolean-lefteye-boolean-onehit-false-entity-source-nil-float-damagemultiplier-1","title":"EntityLaser FireTechLaser ( Vector Position, LaserOffset OffsetID, Vector Direction, boolean LeftEye, boolean OneHit = false, Entity Source = nil, float DamageMultiplier = 1 )","text":"Bugs <p>The <code>DamageMultiplier</code> parameter doesn't do anything when supplying LASER_TECH2_OFFSET as the offset.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#firetechxlaser","title":"Fire\u00b7Tech\u00b7XLaser ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entitylaser-firetechxlaser-vector-position-vector-direction-float-radius-entity-source-nil-float-damagemultiplier-1","title":"EntityLaser FireTechXLaser ( Vector Position, Vector Direction, float Radius, Entity Source = nil, float DamageMultiplier = 1 )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#flushqueueitem","title":"Flush\u00b7Queue\u00b7Item ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-flushqueueitem","title":"boolean FlushQueueItem ( )","text":"<p>called after animation is finished, or on special occasions to prevent bugs</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#fullcharge","title":"Full\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-fullcharge-activeslot-activeslot-activeslotslot_primary-int-force-false","title":"boolean FullCharge ( ActiveSlot ActiveSlot = ActiveSlot.SLOT_PRIMARY, int Force = false )","text":"<p>Fully charges the active item. Returns true if the item was fully charged, false otherwise. If player has battery it will first try to fill first charge slot, then the battery slot.</p> <p>Force: If set, items will always be charged even if they normally cannot be recharged by batteries</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getactivecharge","title":"Get\u00b7Active\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getactivecharge-activeslot-activeslot-activeslotslot_primary","title":"int GetActiveCharge ( ActiveSlot ActiveSlot = ActiveSlot.SLOT_PRIMARY )","text":"<p>Get the current charge of your active item.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getactiveitem","title":"Get\u00b7Active\u00b7Item ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#collectibletype-getactiveitem-activeslot-activeslot-activeslotslot_primary","title":"CollectibleType GetActiveItem ( ActiveSlot ActiveSlot = ActiveSlot.SLOT_PRIMARY )","text":"<p>Returns the currently held item. Returns <code>0</code> when no item is held.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getactivesubcharge","title":"Get\u00b7Active\u00b7Sub\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getactivesubcharge-activeslot-activeslot-activeslotslot_primary","title":"int GetActiveSubCharge ( ActiveSlot ActiveSlot = ActiveSlot.SLOT_PRIMARY )","text":"<p>Get the current items subcharge.</p> Bug <p>This function seems to always return 0. Use EntityPlayer:GetActiveCharge() to get any type of charges instead. Use EntityPlayer:GetBatteryCharge() to get the charge of the second charge bar.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getactiveweaponentity","title":"Get\u00b7Active\u00b7Weapon\u00b7Entity ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entity-getactiveweaponentity","title":"Entity GetActiveWeaponEntity ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getaimdirection","title":"Get\u00b7Aim\u00b7Direction ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#const-vector-getaimdirection","title":"const Vector GetAimDirection ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getbabyskin","title":"Get\u00b7Baby\u00b7Skin ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#babysubtype-getbabyskin","title":"BabySubType GetBabySkin ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getbatterycharge","title":"Get\u00b7Battery\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getbatterycharge-activeslot-activeslot-activeslotslot_primary","title":"int GetBatteryCharge ( ActiveSlot ActiveSlot = ActiveSlot.SLOT_PRIMARY )","text":"<p>Get the current charge progress of the second charge of your current active item. This bar is only active, when you have the Collectible \"The Battery\"</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getblackhearts","title":"Get\u00b7Black\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getblackhearts","title":"int GetBlackHearts ( )","text":"<p>This does not return the number of black hearts; it returns the bit mask for which soul hearts are black hearts.</p> Example <p>Imagine we have the following setup of hearts, where S is a soul heart and B is a black heart:</p> <pre><code>B S S B B S S B B\n</code></pre> <p>Calling the function will return:</p> <pre><code>Isaac.GetPlayer():GetBlackHearts() -- returns 409, which is 0001 1001 1001 in binary. Therefore, the read order is right to left.\n</code></pre>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getbloodcharge","title":"Get\u00b7Blood\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getbloodcharge","title":"int GetBloodCharge ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getbodycolor","title":"Get\u00b7Body\u00b7Color ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#skincolor-getbodycolor","title":"SkinColor GetBodyColor ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getbombflags","title":"Get\u00b7Bomb\u00b7Flags ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getbombflags","title":"int GetBombFlags ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getbombvariant","title":"Get\u00b7Bomb\u00b7Variant ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#bombvariant-getbombvariant-tearflags-tearflags-boolean-forcesmallbomb","title":"BombVariant GetBombVariant ( TearFlags TearFlags, boolean ForceSmallBomb )","text":"<p>Pass tear flags to add extra effects to the bomb visual like burn -&gt; hot bombs, even if player doesn't have Hot Bombs collectible. ForceSmallBomb will override large bomb variants for TEAR_PERSISTENT.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getbonehearts","title":"Get\u00b7Bone\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getbonehearts","title":"int GetBoneHearts ( )","text":"<p>Returns the amount of bone hearts that the player has. This is not doubled like the <code>EntityPlayer.GetMaxHearts</code> method is, so if e.g. the player has 3 bone hearts, this will return 3.</p> <p>Also see the <code>EntityPlayer.GetEffectiveMaxHearts</code> method, which accounts for bone hearts.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getbrokenhearts","title":"Get\u00b7Broken\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getbrokenhearts","title":"int GetBrokenHearts ( )","text":"<p>Returns the amount of broken hearts that the player has. This is not doubled like the <code>EntityPlayer.GetMaxHearts</code> method is, so if e.g. the player has 3 broken hearts, this will return 3.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getcard","title":"Get\u00b7Card ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#card-getcard-int-slotid","title":"Card GetCard ( int SlotId )","text":"<p>Gets the ID of the card the player is holding in the given itemslot (0 = Main slot, 1 = secondary slot, 2 or 3). Returns <code>0</code> when no card is held in the slot.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getcardrng","title":"Get\u00b7Card\u00b7RNG ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#rng-getcardrng-card-id","title":"RNG GetCardRNG ( Card ID )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getcollectiblecount","title":"Get\u00b7Collectible\u00b7Count ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getcollectiblecount","title":"int GetCollectibleCount ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getcollectiblenum","title":"Get\u00b7Collectible\u00b7Num ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getcollectiblenum-collectibletype-type-boolean-onlycounttrueitems-false","title":"int GetCollectibleNum ( CollectibleType Type, boolean OnlyCountTrueItems = false )","text":"<p>OnlyCountTrueItems: If set to true, the function only counts collectibles that the player actually owns and ignores things like Lilith's Incubus, items granted by 3 Dollar Bill, and so forth.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getcollectiblerng","title":"Get\u00b7Collectible\u00b7RNG ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#rng-getcollectiblerng-collectibletype-id","title":"RNG GetCollectibleRNG ( CollectibleType ID )","text":"<p>Gets the RNG object of a collectible.</p> Example Code <p>this code gives you the RNG object of the \"Sad Onion\" collectible. <pre><code>local player = Isaac.GetPlayer()\nlocal collectibleRNG = player:GetCollectibleRNG(CollectibleType.COLLECTIBLE_SAD_ONION)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getcostumenullpos","title":"Get\u00b7Costume\u00b7Null\u00b7Pos ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#vector-getcostumenullpos-string-nullframename-boolean-headscale-vector-direction","title":"Vector GetCostumeNullPos ( string NullFrameName, boolean HeadScale, Vector Direction )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getdamagecooldown","title":"Get\u00b7Damage\u00b7Cooldown ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getdamagecooldown","title":"int GetDamageCooldown ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#geteffectivebloodcharge","title":"Get\u00b7Effective\u00b7Blood\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-geteffectivebloodcharge","title":"int GetEffectiveBloodCharge ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#geteffectivemaxhearts","title":"Get\u00b7Effective\u00b7Max\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-geteffectivemaxhearts","title":"int GetEffectiveMaxHearts ( )","text":"<p>Returns the amount of Red Hearts the player can contain in their Heart Containers and Bone Hearts. 1 unit is half a red heart. Example: you have 3 red heart container and one bone heart. 6(red) + 2(bone) = 8</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#geteffectivesoulcharge","title":"Get\u00b7Effective\u00b7Soul\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-geteffectivesoulcharge","title":"int GetEffectiveSoulCharge ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#geteffects","title":"Get\u00b7Effects ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#temporaryeffects-geteffects","title":"TemporaryEffects GetEffects ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#geteternalhearts","title":"Get\u00b7Eternal\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-geteternalhearts","title":"int GetEternalHearts ( )","text":"<p>Returns the amount of eternal hearts the player has.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getextralives","title":"Get\u00b7Extra\u00b7Lives ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getextralives","title":"int GetExtraLives ( )","text":"<p>Returns the number of extra lives the player currently has.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getfiredirection","title":"Get\u00b7Fire\u00b7Direction ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#direction-getfiredirection","title":"Direction GetFireDirection ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getflyingoffset","title":"Get\u00b7Flying\u00b7Offset ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#vector-getflyingoffset","title":"Vector GetFlyingOffset ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getgoldenhearts","title":"Get\u00b7Golden\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getgoldenhearts","title":"int GetGoldenHearts ( )","text":"<p>Returns the amount of golden hearts the player has.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getgreeddonationbreakchance","title":"Get\u00b7Greed\u00b7Donation\u00b7Break\u00b7Chance ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-getgreeddonationbreakchance","title":"float GetGreedDonationBreakChance ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getheadcolor","title":"Get\u00b7Head\u00b7Color ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#skincolor-getheadcolor","title":"SkinColor GetHeadColor ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getheaddirection","title":"Get\u00b7Head\u00b7Direction ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#direction-getheaddirection","title":"Direction GetHeadDirection ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getheartlimit","title":"Get\u00b7Heart\u00b7Limit ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getheartlimit","title":"int GetHeartLimit ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#gethearts","title":"Get\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-gethearts","title":"int GetHearts ( )","text":"<p>Returns the amount of red hearts the player has inside their heart containers and bone hearts. 1 unit is half a heart.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getitemstate","title":"Get\u00b7Item\u00b7State ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#collectibletype-getitemstate","title":"CollectibleType GetItemState ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getjarflies","title":"Get\u00b7Jar\u00b7Flies ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getjarflies","title":"int GetJarFlies ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getjarhearts","title":"Get\u00b7Jar\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getjarhearts","title":"int GetJarHearts ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getlaseroffset","title":"Get\u00b7Laser\u00b7Offset ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#vector-getlaseroffset-laseroffset-id-vector-direction","title":"Vector GetLaserOffset ( LaserOffset ID, Vector Direction )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getlastactiontriggers","title":"Get\u00b7Last\u00b7Action\u00b7Triggers ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getlastactiontriggers","title":"int GetLastActionTriggers ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getlastdamageflags","title":"Get\u00b7Last\u00b7Damage\u00b7Flags ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getlastdamageflags","title":"int GetLastDamageFlags ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getlastdamagesource","title":"Get\u00b7Last\u00b7Damage\u00b7Source ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#const-entityref-getlastdamagesource","title":"const EntityRef GetLastDamageSource ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getlastdirection","title":"Get\u00b7Last\u00b7Direction ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#const-vector-getlastdirection","title":"const Vector GetLastDirection ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmaintwin","title":"Get\u00b7Main\u00b7Twin ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entityplayer-getmaintwin","title":"EntityPlayer GetMainTwin ( )","text":"<p>Returns the main player of pair characters or the main form of characters with multiple forms.</p> <ul> <li>When called on Jacob or Esau, returns Jacob.</li> <li>When called on Tainted Forgotten or Tainted Forgotten's Soul, returns Tainted Forgotten.</li> <li>When called on Tainted Lazarus or Dead Tainted Lazarus, returns themself. If the player has Birthright, then it will return Tainted Lazarus.</li> <li>When called on any other character, returns that character.</li> </ul>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmaxhearts","title":"Get\u00b7Max\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getmaxhearts","title":"int GetMaxHearts ( )","text":"<p>Returns the amount of Heart Containers the player has. 1 unit is half a heart container.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmaxpocketitems","title":"Get\u00b7Max\u00b7Pocket\u00b7Items ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getmaxpocketitems","title":"int GetMaxPocketItems ( )","text":"<p>Get the number of Pickup items you can carry. (1 on default. 2 with belly button or similar)</p> <p>If you have a pocket active, it also increments the number by one.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmaxpoopmana","title":"Get\u00b7Max\u00b7Poop\u00b7Mana ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getmaxpoopmana","title":"int GetMaxPoopMana ( )","text":"<p>Returns the max amount of poop consumables that can be held by the player</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmaxtrinkets","title":"Get\u00b7Max\u00b7Trinkets ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getmaxtrinkets","title":"int GetMaxTrinkets ( )","text":"<p>Get the number of trinkets you can carry. (1 on default. 2 with moms purse or similar)</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmodelingclayeffect","title":"Get\u00b7Modeling\u00b7Clay\u00b7Effect ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#collectibletype-getmodelingclayeffect","title":"CollectibleType GetModelingClayEffect ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmovementdirection","title":"Get\u00b7Movement\u00b7Direction ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#direction-getmovementdirection","title":"Direction GetMovementDirection ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmovementinput","title":"Get\u00b7Movement\u00b7Input ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#const-vector-getmovementinput","title":"const Vector GetMovementInput ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmovementjoystick","title":"Get\u00b7Movement\u00b7Joystick ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#vector-getmovementjoystick","title":"Vector GetMovementJoystick ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmovementvector","title":"Get\u00b7Movement\u00b7Vector ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#vector-getmovementvector","title":"Vector GetMovementVector ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmultishotparams","title":"Get\u00b7Multi\u00b7Shot\u00b7Params ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#multishotparams-getmultishotparams-weapontype-weapontype-weapontypeweapon_tears","title":"MultiShotParams GetMultiShotParams ( WeaponType WeaponType = WeaponType.WEAPON_TEARS )","text":"Bug <p>Since it returns UserData which cant be edited directly, the return value of this function can only be used in combination with the GetMultiShotPositionVelocity() function.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getmultishotpositionvelocity","title":"Get\u00b7Multi\u00b7Shot\u00b7Position\u00b7Velocity ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#posvel-getmultishotpositionvelocity-int-loopindex-weapontype-weapon-vector-shotdirection-float-shotspeed-multishotparams-params","title":"PosVel GetMultiShotPositionVelocity ( int LoopIndex, WeaponType Weapon, Vector ShotDirection, float ShotSpeed, MultiShotParams params )","text":"<p>Call this function in a loop, where the LoopIndex is a number between 0 and the amount of tears the current MultiShotParams contains. Since MultiShotParams is currently not accessable via the modding api, you need to find other ways to get the amount.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getname","title":"Get\u00b7Name ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#string-getname","title":"string GetName ( )","text":"<p>Returns the name of the player. (Isaac, Cain, Azazel,...)</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getnpctarget","title":"Get\u00b7NPCTarget ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entity-getnpctarget","title":"Entity GetNPCTarget ( )","text":"<p>Normally, this function returns the player. However, in some cases, NPCs can be redirected to attack another target, in which case this function will return the alternate target (e.g. after using Best Friend).</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getnumblueflies","title":"Get\u00b7Num\u00b7Blue\u00b7Flies ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getnumblueflies","title":"int GetNumBlueFlies ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getnumbluespiders","title":"Get\u00b7Num\u00b7Blue\u00b7Spiders ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getnumbluespiders","title":"int GetNumBlueSpiders ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getnumbombs","title":"Get\u00b7Num\u00b7Bombs ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getnumbombs","title":"int GetNumBombs ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getnumcoins","title":"Get\u00b7Num\u00b7Coins ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getnumcoins","title":"int GetNumCoins ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getnumgigabombs","title":"Get\u00b7Num\u00b7Giga\u00b7Bombs ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getnumgigabombs","title":"int GetNumGigaBombs ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getnumkeys","title":"Get\u00b7Num\u00b7Keys ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getnumkeys","title":"int GetNumKeys ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getothertwin","title":"Get\u00b7Other\u00b7Twin ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entityplayer-getothertwin","title":"EntityPlayer GetOtherTwin ( )","text":"<p>Returns the other player of pair characters or the other form of characters with multiple forms.</p> <ul> <li>When called on Jacob, returns Esau.</li> <li>When called on Esau, returns Jacob.</li> <li>When called on Tainted Forgotten, returns Tainted Forgotten's Soul.</li> <li>When called on Tainted Forgotten's Soul, returns Tainted Forgotten.</li> <li>When called on Tainted Lazarus, it will only return the Flip Lazarus, if the player has the Birthright item. Otherwise it returns nil.</li> <li>When called on any other character, returns nil.</li> </ul>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getpill","title":"Get\u00b7Pill ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#pillcolor-getpill-int-slotid","title":"PillColor GetPill ( int SlotId )","text":"<p>Gets the ID of the pill the player is holding in the given itemslot (0 = Main slot, 1 = secondary slot, 2 or 3) Returns <code>0</code> when no pill is held in the given slot.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getpillrng","title":"Get\u00b7Pill\u00b7RNG ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#rng-getpillrng-pilleffect-id","title":"RNG GetPillRNG ( PillEffect ID )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getplayertype","title":"Get\u00b7Player\u00b7Type ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#playertype-getplayertype","title":"PlayerType GetPlayerType ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getpocketitem","title":"Get\u00b7Pocket\u00b7Item ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#const-playerpocketitem-getpocketitem-int-slotid","title":"const PlayerPocketItem GetPocketItem ( int SlotId )","text":"<p>Get the userdata of the pocketitem (Card,Pill,rune) in a said slot.</p> Bugs <p>This function returns userdata, which can't be processed. It is therefore broken and should not be used!</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getpoopmana","title":"Get\u00b7Poop\u00b7Mana ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getpoopmana","title":"int GetPoopMana ( )","text":"<p>Returns how many poop consumables the player is currently holding</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getpoopspell","title":"Get\u00b7Poop\u00b7Spell ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#poopspelltype-getpoopspell-int-position","title":"PoopSpellType GetPoopSpell ( int Position )","text":"<p>Returns the poop spell at the given position in the player's spell queue</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getrecentmovementvector","title":"Get\u00b7Recent\u00b7Movement\u00b7Vector ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#const-vector-getrecentmovementvector","title":"const Vector GetRecentMovementVector ( )","text":"<p>Returns the joystick direction that drives player movement, taking into account certain modifiers like disabled controls and seed effects.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getrottenhearts","title":"Get\u00b7Rotten\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getrottenhearts","title":"int GetRottenHearts ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getshootinginput","title":"Get\u00b7Shooting\u00b7Input ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#vector-getshootinginput","title":"Vector GetShootingInput ( )","text":"<p>Returns a vector that corresponds to the shooting inputs that this player is pressing.</p> Shooting Angle diagram <p></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getshootingjoystick","title":"Get\u00b7Shooting\u00b7Joystick ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#vector-getshootingjoystick","title":"Vector GetShootingJoystick ( )","text":"<p>Returns a vector that corresponds to the shooting inputs that this player is holding.</p> <p>See the image for the GetShootingInput method.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getsmoothbodyrotation","title":"Get\u00b7Smooth\u00b7Body\u00b7Rotation ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-getsmoothbodyrotation","title":"float GetSmoothBodyRotation ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getsoulcharge","title":"Get\u00b7Soul\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getsoulcharge","title":"int GetSoulCharge ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getsoulhearts","title":"Get\u00b7Soul\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-getsoulhearts","title":"int GetSoulHearts ( )","text":"<p>Returns the amount of Soul Hearts the player has. 1 unit is half a heart.</p> Notes <p>Black Hearts count toward this total, as the game sees them as soul hearts.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#getsubplayer","title":"Get\u00b7Sub\u00b7Player ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entityplayer-getsubplayer","title":"EntityPlayer GetSubPlayer ( )","text":"<p>Returns the other form of The Forgotten.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#gettearhitparams","title":"Get\u00b7Tear\u00b7Hit\u00b7Params ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#tearparams-gettearhitparams-weapontype-weapontype-float-damagescale-1-int-teardisplacement-1-entity-source-nil","title":"TearParams GetTearHitParams ( WeaponType WeaponType, float DamageScale = 1, int TearDisplacement = 1, Entity Source = nil )","text":"<p>Used for tear parameters that are calculated on hit (ex: Tough love, Common cold), DamageScale is used for scale calculation based on damage</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#gettearmovementinheritance","title":"Get\u00b7Tear\u00b7Movement\u00b7Inheritance ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#vector-gettearmovementinheritance-vector-shotdirection","title":"Vector GetTearMovementInheritance ( Vector ShotDirection )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#gettearpoisondamage","title":"Get\u00b7Tear\u00b7Poison\u00b7Damage ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-gettearpoisondamage","title":"float GetTearPoisonDamage ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#gettearrangemodifier","title":"Get\u00b7Tear\u00b7Range\u00b7Modifier ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-gettearrangemodifier","title":"int GetTearRangeModifier ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#gettotaldamagetaken","title":"Get\u00b7Total\u00b7Damage\u00b7Taken ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-gettotaldamagetaken","title":"int GetTotalDamageTaken ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#gettractorbeam","title":"Get\u00b7Tractor\u00b7Beam ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entity-gettractorbeam","title":"Entity GetTractorBeam ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#gettrinket","title":"Get\u00b7Trinket ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#trinkettype-gettrinket-int-trinketindex","title":"TrinketType GetTrinket ( int TrinketIndex )","text":"<p>Gets the ID of the trinket the player is holding in the given trinketslot (0 or 1). Returns <code>0</code> when no trinket is held in the given slot.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#gettrinketmultiplier","title":"Get\u00b7Trinket\u00b7Multiplier ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-gettrinketmultiplier-trinkettype-trinketid","title":"int GetTrinketMultiplier ( TrinketType TrinketID )","text":"<p>Gets the multiplier of a given Trinket effect. This is analog to the number of times the trinket effect is applied.</p> Multiplier Breakdown <ul> <li>Per normal trinket of this type equipped / gulped : +1</li> <li>Per golden trinket of this type equipped / gulped : +2</li> <li>Mom's Box equipped : +1 (does not stack)</li> </ul>","tags":["Class","Player"]},{"location":"EntityPlayer.html#gettrinketrng","title":"Get\u00b7Trinket\u00b7RNG ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#rng-gettrinketrng-trinkettype-trinketid","title":"RNG GetTrinketRNG ( TrinketType TrinketID )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getvelocitybeforeupdate","title":"Get\u00b7Velocity\u00b7Before\u00b7Update ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#const-vector-getvelocitybeforeupdate","title":"const Vector GetVelocityBeforeUpdate ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#getzodiaceffect","title":"Get\u00b7Zodiac\u00b7Effect ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#collectibletype-getzodiaceffect","title":"CollectibleType GetZodiacEffect ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#hascollectible","title":"Has\u00b7Collectible ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-hascollectible-collectibletype-type-boolean-ignoremodifiers-false","title":"boolean HasCollectible ( CollectibleType Type, boolean IgnoreModifiers = false )","text":"<p>IgnoreModifiers: If set to true, only counts collectibles the player actually owns and ignores effects granted by items like Zodiac, 3 Dollar Bill and Lemegeton</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#hascursemisteffect","title":"Has\u00b7Curse\u00b7Mist\u00b7Effect ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-hascursemisteffect","title":"boolean HasCurseMistEffect ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#hasfullhearts","title":"Has\u00b7Full\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-hasfullhearts","title":"boolean HasFullHearts ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#hasfullheartsandsoulhearts","title":"Has\u00b7Full\u00b7Hearts\u00b7And\u00b7Soul\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-hasfullheartsandsoulhearts","title":"boolean HasFullHeartsAndSoulHearts ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#hasgoldenbomb","title":"Has\u00b7Golden\u00b7Bomb ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-hasgoldenbomb","title":"boolean HasGoldenBomb ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#hasgoldenkey","title":"Has\u00b7Golden\u00b7Key ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-hasgoldenkey","title":"boolean HasGoldenKey ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#hasinvincibility","title":"Has\u00b7Invincibility ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-hasinvincibility-damageflag-flags-0","title":"boolean HasInvincibility ( DamageFlag Flags = 0 )","text":"<p>returns true when player is in an invincibility state</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#hasplayerform","title":"Has\u00b7Player\u00b7Form ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-hasplayerform-playerform-form","title":"boolean HasPlayerForm ( PlayerForm Form )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#hastimeditem","title":"Has\u00b7Timed\u00b7Item ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-hastimeditem","title":"boolean HasTimedItem ( )","text":"<p>Kept for avoiding modding issues.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#hastrinket","title":"Has\u00b7Trinket ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-hastrinket-trinkettype-type-boolean-ignoremodifiers-false","title":"boolean HasTrinket ( TrinketType Type, boolean IgnoreModifiers = false )","text":"<p>IgnoreModifiers: If set to true, only counts trinkets the player actually holds and ignores effects granted by other items</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#hasweapontype","title":"Has\u00b7Weapon\u00b7Type ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-hasweapontype-weapontype-weapontype","title":"boolean HasWeaponType ( WeaponType WeaponType )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#initbabyskin","title":"Init\u00b7Baby\u00b7Skin ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-initbabyskin","title":"void InitBabySkin ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#isblackheart","title":"Is\u00b7Black\u00b7Heart ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-isblackheart-int-heart","title":"boolean IsBlackHeart ( int Heart )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#isboneheart","title":"Is\u00b7Bone\u00b7Heart ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-isboneheart-int-heart","title":"boolean IsBoneHeart ( int heart )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#iscoopghost","title":"Is\u00b7Coop\u00b7Ghost ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-iscoopghost","title":"boolean IsCoopGhost ( )","text":"<p>In a multiplayer game, if a player dies, they will return as a tiny ghost. This method returns true if the player is a co-op ghost.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#isextraanimationfinished","title":"Is\u00b7Extra\u00b7Animation\u00b7Finished ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-isextraanimationfinished","title":"boolean IsExtraAnimationFinished ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#isfullspriterendering","title":"Is\u00b7Full\u00b7Sprite\u00b7Rendering ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-isfullspriterendering","title":"boolean IsFullSpriteRendering ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#ishelditemvisible","title":"Is\u00b7Held\u00b7Item\u00b7Visible ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-ishelditemvisible","title":"boolean IsHeldItemVisible ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#isholdingitem","title":"Is\u00b7Holding\u00b7Item ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-isholdingitem","title":"boolean IsHoldingItem ( )","text":"<p>Is Player holding up an item (card/collectible/etc)</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#isitemqueueempty","title":"Is\u00b7Item\u00b7Queue\u00b7Empty ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-isitemqueueempty","title":"boolean IsItemQueueEmpty ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#isp2appearing","title":"Is\u00b7P2Appearing ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-isp2appearing","title":"boolean IsP2Appearing ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#isposinspotlight","title":"Is\u00b7Pos\u00b7In\u00b7Spot\u00b7Light ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-isposinspotlight-vector-position","title":"boolean IsPosInSpotLight ( Vector Position )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#issubplayer","title":"Is\u00b7Sub\u00b7Player ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-issubplayer","title":"boolean IsSubPlayer ( )","text":"<p>Returns true if the player object was returned from the <code>EntityPlayer.GetSubPlayer</code> method. (This method is not related to multiplayer.)</p> <p>Additionally, this also returns true for the player object representing Dead Tainted Lazarus that fires at the beginning of the run in the PostPlayerInit callback. (The PostPlayerInit callback fires first for Dead Tainted Lazarus before firing for the normal Tainted Lazarus.)</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#needscharge","title":"Needs\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-needscharge-activeslot-activeslot-activeslotslot_primary","title":"boolean NeedsCharge ( ActiveSlot ActiveSlot = ActiveSlot.SLOT_PRIMARY )","text":"<p>This will always return false for active items that have <code>chargetype=\"special\"</code> set in the <code>items.xml</code> file, even if they are not fully charged.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#playextraanimation","title":"Play\u00b7Extra\u00b7Animation ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-playextraanimation-string-animation","title":"void PlayExtraAnimation ( string Animation )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#queueextraanimation","title":"Queue\u00b7Extra\u00b7Animation ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-queueextraanimation-string-animation","title":"void QueueExtraAnimation ( string Animation )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#queueitem","title":"Queue\u00b7Item ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-queueitem-itemconfigitem-item-int-charge-0-boolean-touched-false-boolean-golden-false-int-vardata-0","title":"void QueueItem ( ItemConfigItem Item, int Charge = 0, boolean Touched = false, boolean Golden = false, int VarData = 0 )","text":"<p>When the player touches a collectible or trinket, they are not granted it immediately. Instead, the item is queued for the duration of the animation where the player holds the item above their head. When the animation is finished, the item in the queue will be granted. This method adds a new item to the item queue. If the player is not currently playing an animation, then the queued item will simply be awarded instantly.</p> <p>Also see <code>FlushQueueItem()</code>, <code>IsItemQueueEmpty()</code>, and <code>QueuedItem</code>.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#removeblackheart","title":"Remove\u00b7Black\u00b7Heart ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-removeblackheart-int-blackheart","title":"void RemoveBlackHeart ( int BlackHeart )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#removebluefly","title":"Remove\u00b7Blue\u00b7Fly ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-removebluefly","title":"void RemoveBlueFly ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#removebluespider","title":"Remove\u00b7Blue\u00b7Spider ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-removebluespider","title":"void RemoveBlueSpider ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#removecollectible","title":"Remove\u00b7Collectible ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-removecollectible-collectibletype-type-boolean-ignoremodifiers-false-activeslot-activeslot-activeslotslot_primary-boolean-removefromplayerform-true","title":"void RemoveCollectible ( CollectibleType Type, boolean IgnoreModifiers = false, ActiveSlot ActiveSlot = ActiveSlot.SLOT_PRIMARY, boolean RemoveFromPlayerForm = true )","text":"<p>IgnoreModifiers: Ignores collectible effects granted by other items (i.e. Void)</p> <p>Slot: Sets the active slot this collectible should be removed from</p> <p>RemoveFromPlayerForm: If successfully removed and part of a transformation, decrease that transformation's counter by 1</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#removecostume","title":"Remove\u00b7Costume ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-removecostume-itemconfigitem-item","title":"void RemoveCostume ( ItemConfigItem Item )","text":"<p>Removes a given costume based on its item config entry.</p> Example code <p>This code removes the costume of the Spoon Bender collectible. <pre><code>local player = Isaac.GetPlayer()\nlocal itemConfig = Isaac.GetItemConfig()\nlocal itemConfigItem = itemConfig:GetCollectible(CollectibleType.COLLECTIBLE_SPOON_BENDER)\nplayer:RemoveCostume(itemConfigItem)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#removecursemisteffect","title":"Remove\u00b7Curse\u00b7Mist\u00b7Effect ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-removecursemisteffect","title":"void RemoveCurseMistEffect ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#removegoldenbomb","title":"Remove\u00b7Golden\u00b7Bomb ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-removegoldenbomb","title":"void RemoveGoldenBomb ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#removegoldenkey","title":"Remove\u00b7Golden\u00b7Key ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-removegoldenkey","title":"void RemoveGoldenKey ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#removeskincostume","title":"Remove\u00b7Skin\u00b7Costume ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-removeskincostume","title":"void RemoveSkinCostume ( )","text":"<p>Removes player-specific costumes like Magdalene's hair or Cain's eyepatch.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#renderbody","title":"Render\u00b7Body ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-renderbody-vector-position","title":"void RenderBody ( Vector position )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#renderglow","title":"Render\u00b7Glow ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-renderglow-vector-position","title":"void RenderGlow ( Vector position )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#renderhead","title":"Render\u00b7Head ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-renderhead-vector-position","title":"void RenderHead ( Vector position )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#rendertop","title":"Render\u00b7Top ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-rendertop-vector-position","title":"void RenderTop ( Vector position )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#replacecostumesprite","title":"Replace\u00b7Costume\u00b7Sprite ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-replacecostumesprite-itemconfigitem-item-string-spritepath-int-spriteid","title":"void ReplaceCostumeSprite ( ItemConfigItem Item, string SpritePath, int SpriteId )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#resetdamagecooldown","title":"Reset\u00b7Damage\u00b7Cooldown ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-resetdamagecooldown","title":"void ResetDamageCooldown ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#resetitemstate","title":"Reset\u00b7Item\u00b7State ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-resetitemstate","title":"void ResetItemState ( )","text":"<p>Room transitions call this to prevent lock ups.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#respawnfamiliars","title":"Respawn\u00b7Familiars ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-respawnfamiliars","title":"void RespawnFamiliars ( )","text":"<p>Respawns all familiars associated to the player.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#revive","title":"Revive ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-revive","title":"void Revive ( )","text":"<p>Revives the player.</p> Bugs <p>Exiting the run at any point after this function is called will make it so that the run can't be continued.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#setactivecharge","title":"Set\u00b7Active\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-setactivecharge-int-charge-activeslot-activeslot-activeslotslot_primary","title":"void SetActiveCharge ( int Charge, ActiveSlot ActiveSlot = ActiveSlot.SLOT_PRIMARY )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#setbloodcharge","title":"Set\u00b7Blood\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-setbloodcharge-int-amount","title":"void SetBloodCharge ( int Amount )","text":"<p>Only works on Tainted Bethany.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#setcard","title":"Set\u00b7Card ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-setcard-int-slotid-card-id","title":"void SetCard ( int SlotId, Card ID )","text":"<p>Change the card/rune the player is holding in the given itemslot (0 or 1).</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#setfullhearts","title":"Set\u00b7Full\u00b7Hearts ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-setfullhearts","title":"void SetFullHearts ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#setmindamagecooldown","title":"Set\u00b7Min\u00b7Damage\u00b7Cooldown ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-setmindamagecooldown-int-damagecooldown","title":"void SetMinDamageCooldown ( int DamageCooldown )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#setpill","title":"Set\u00b7Pill ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-setpill-int-slotid-pillcolor-pill","title":"void SetPill ( int SlotId, PillColor Pill )","text":"<p>Change the pill the player is holding in the given itemslot (0 or 1).</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#setpocketactiveitem","title":"Set\u00b7Pocket\u00b7Active\u00b7Item()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-setpocketactiveitem-collectibletype-type-activeslot-slot-boolean-keepinpools","title":"void SetPocketActiveItem ( CollectibleType Type, ActiveSlot Slot, boolean KeepInPools )","text":"<p>Sets the player's pocket active item to the given active item. Slot can be either SLOT_POCKET or SLOT_POCKET2. Items added to SLOT_POCKET2 will always be removed upon being used. If KeepInPools is set to true, the item will not be removed from the item pools. Use this to let the player start with a custom active item in their pocket active slot right away.</p> Bugs <p>Calling this function inside PostPlayerInit callback causes a crash when continuing a saved run after closing and reopening the game, unless KeepInPools argument is set to true.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#setshootingcooldown","title":"Set\u00b7Shooting\u00b7Cooldown ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-setshootingcooldown-int-cooldown","title":"void SetShootingCooldown ( int Cooldown )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#setsoulcharge","title":"Set\u00b7Soul\u00b7Charge ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-setsoulcharge-int-amount","title":"void SetSoulCharge ( int Amount )","text":"<p>Only works on Bethany.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#settargettrapdoor","title":"Set\u00b7Target\u00b7Trap\u00b7Door ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-settargettrapdoor-gridentity-trapdoor","title":"void SetTargetTrapDoor ( GridEntity TrapDoor )","text":"<p>This function got removed with Repentance.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#shootredcandle","title":"Shoot\u00b7Red\u00b7Candle ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-shootredcandle-vector-direction","title":"void ShootRedCandle ( Vector Direction )","text":"<p>for ghost pepper item + poop and farts</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#spawnmawofvoid","title":"Spawn\u00b7Maw\u00b7Of\u00b7Void ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entitylaser-spawnmawofvoid-int-timeout","title":"EntityLaser SpawnMawOfVoid ( int Timeout )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#stopextraanimation","title":"Stop\u00b7Extra\u00b7Animation ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-stopextraanimation","title":"void StopExtraAnimation ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#swapactiveitems","title":"Swap\u00b7Active\u00b7Items ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-swapactiveitems","title":"void SwapActiveItems ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#throwbluespider","title":"Throw\u00b7Blue\u00b7Spider ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entity-throwbluespider-vector-position-vector-target","title":"Entity ThrowBlueSpider ( Vector Position, Vector Target )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#throwfriendlydip","title":"Throw\u00b7Friendly\u00b7Dip ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entityfamiliar-throwfriendlydip-int-subtype-vector-position-vector-target-vectorzero","title":"EntityFamiliar ThrowFriendlyDip ( int Subtype, Vector Position, Vector Target = Vector.Zero )","text":"Dip Subtypes <pre><code>0: normal\n1: red\n2: corny\n3: golden\n4: rainbow\n5: black\n6: holy\n12: stone\n13: flaming\n14: poison\n20: brownie\n</code></pre>","tags":["Class","Player"]},{"location":"EntityPlayer.html#throwheldentity","title":"Throw\u00b7Held\u00b7Entity ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#entity-throwheldentity-vector-velocity","title":"Entity ThrowHeldEntity ( Vector Velocity )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#triggerbookofvirtues","title":"Trigger\u00b7Book\u00b7Of\u00b7Virtues ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-triggerbookofvirtues-collectibletype-type-collectibletypecollectible_null-int-charge-0","title":"void TriggerBookOfVirtues ( CollectibleType Type = CollectibleType.COLLECTIBLE_NULL, int Charge = 0 )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#tryholdentity","title":"Try\u00b7Hold\u00b7Entity ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-tryholdentity-entity-entity","title":"boolean TryHoldEntity ( Entity Entity )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#tryholdtrinket","title":"Try\u00b7Hold\u00b7Trinket ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-tryholdtrinket-trinkettype-type","title":"boolean TryHoldTrinket ( TrinketType Type )","text":"<p>Returns true if an active item pickup cooldown is over. returns true if trinket can be added, else false</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#tryremovecollectiblecostume","title":"Try\u00b7Remove\u00b7Collectible\u00b7Costume ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-tryremovecollectiblecostume-collectibletype-collectible-boolean-keeppersistent","title":"void TryRemoveCollectibleCostume ( CollectibleType Collectible, boolean KeepPersistent )","text":"<p>Tries to remove a costume of the given collectible. <code>KeepPersistent</code> is used to define if persistent costumes should be removed. If its set to <code>false</code>, it will only remove temporary costumes.</p> Example code <p>This code removes the costume of the Spoon Bender collectible. <pre><code>local player = Isaac.GetPlayer()\nplayer:TryRemoveCollectibleCostume(CollectibleType.COLLECTIBLE_SPOON_BENDER, false)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#tryremovenullcostume","title":"Try\u00b7Remove\u00b7Null\u00b7Costume ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-tryremovenullcostume-nullitemid-nullid","title":"void TryRemoveNullCostume ( NullItemID NullId )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#tryremovetrinket","title":"Try\u00b7Remove\u00b7Trinket ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-tryremovetrinket-trinkettype-type","title":"boolean TryRemoveTrinket ( TrinketType Type )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#tryremovetrinketcostume","title":"Try\u00b7Remove\u00b7Trinket\u00b7Costume ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-tryremovetrinketcostume-trinkettype-trinket","title":"void TryRemoveTrinketCostume ( TrinketType Trinket )","text":"<p>Tries to remove a trinket costume</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#tryusekey","title":"Try\u00b7Use\u00b7Key ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-tryusekey","title":"boolean TryUseKey ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#updatecanshoot","title":"Update\u00b7Can\u00b7Shoot ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-updatecanshoot","title":"void UpdateCanShoot ( )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#useactiveitem","title":"Use\u00b7Active\u00b7Item ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-useactiveitem-collectibletype-item-useflags-useflags-0-activeslot-slot-1-int-customvardata-0","title":"void UseActiveItem ( CollectibleType Item, UseFlags UseFlags = 0, ActiveSlot Slot = -1, int CustomVarData = 0 )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-useactiveitem-collectibletype-item-boolean-showanim-false-boolean-keepactiveitem-false-boolean-allownonmainplayer-true-boolean-toaddcostume-false-activeslot-slot-1-int-customvardata-0","title":"void UseActiveItem ( CollectibleType Item, boolean ShowAnim = false, boolean KeepActiveItem = false, boolean AllowNonMainPlayer = true, boolean ToAddCostume = false, ActiveSlot Slot = -1, int CustomVarData = 0 )","text":"<p>Slot: The active slot this item was used from (set to -1 if this item wasn't triggered by any active slot)</p> Notes <p>This method will increment the number of CollectibleEffects (see Temporary Effects) of the passed item by 1 for the current room, and will trigger any associated MC_USE_ITEM callbacks. As of Repentance, this method can also be used on Passive and Familiar ItemTypes.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#usecard","title":"Use\u00b7Card ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-usecard-card-id-useflags-useflags-0","title":"void UseCard ( Card ID, UseFlags UseFlags = 0 )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#usepill","title":"Use\u00b7Pill ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-usepill-pilleffect-id-pillcolor-pillcolor-useflags-useflags-0","title":"void UsePill ( PillEffect ID, PillColor PillColor, UseFlags UseFlags = 0  )","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#usepoopspell","title":"Use\u00b7Poop\u00b7Spell ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#void-usepoopspell-poopspelltype-type","title":"void UsePoopSpell ( PoopSpellType type )","text":"<p>Triggers one of Tainted ???'s poop spells (see PoopSpellType enum)</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#willplayerrevive","title":"Will\u00b7Player\u00b7Revive ()","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-willplayerrevive","title":"boolean WillPlayerRevive ( )","text":"<p>This function will return true if the player has one or more extra lives or if a conditional revival item will work on the next death.</p> <p>Right now, there are 3 items that grant conditional extra lives:</p> <ul> <li>Guppy's Collar - This function will successfully predict whether or not the next revive from Guppy's Collar will work or not. (50% chance)</li> <li>Broken Ankh - This function will successfully predict whether or not the next revive from Broken Ankh will work or not. (22.22% chance)</li> <li>Mysterious Paper - This function will only successfully predict the revive from Missing Poster every 4 frames, because it evaluates only one of its 4 possible item effects each frame.</li> </ul>","tags":["Class","Player"]},{"location":"EntityPlayer.html#variables","title":"Variables","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#babyskin","title":"Baby\u00b7Skin","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#babysubtype-babyskin","title":"BabySubType BabySkin","text":"<p>P2 Skin section Used to hold the selected skin (in case of glitched baby it will pick a random one)</p> Bugs <p>This variable actually contains userdata and is not usable within API. Attempt to change it will results in a crash.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#canfly","title":"Can\u00b7Fly","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-canfly","title":"boolean CanFly","text":"<p>Player stat - Only change this in a callback to MC_EVALUATE_CACHE. Can the player fly over rocks and pits?</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#controllerindex","title":"Controller\u00b7Index","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#const-int-controllerindex","title":"const int ControllerIndex","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#controlscooldown","title":"Controls\u00b7Cooldown","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-controlscooldown","title":"int ControlsCooldown","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#controlsenabled","title":"Controls\u00b7Enabled","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#boolean-controlsenabled","title":"boolean ControlsEnabled","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#damage","title":"Damage","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-damage","title":"float Damage","text":"<p>Player stat - Only change this in a callback to MC_EVALUATE_CACHE.  This is equal to the Damage Stat.  How much damage do the players tears or other main weapons do?</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#firedelay","title":"Fire\u00b7Delay","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-firedelay","title":"float FireDelay","text":"<p>How long until the player can spawn their next tear?</p> Version Difference <p>In the Afterbirth+ version of the modding api, this variable is an integer</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#friendballenemy","title":"Friend\u00b7Ball\u00b7Enemy","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#const-entitydesc-friendballenemy","title":"const EntityDesc FriendBallEnemy","text":"Bugs <p>This function returns userdata that cant be edited or accessed.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#headframedelay","title":"Head\u00b7Frame\u00b7Delay","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-headframedelay","title":"int HeadFrameDelay","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#ibscharge","title":"IBS\u00b7Charge","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-ibscharge","title":"float IBSCharge","text":"<p>Internally used by IBS, increases based on damage dealt, range is 0-1</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#itemholdcooldown","title":"Item\u00b7Hold\u00b7Cooldown","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-itemholdcooldown","title":"int ItemHoldCooldown","text":"<p>Used for avoiding player get stucked between rocks when switching a flying item with other active item.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#lasercolor","title":"Laser\u00b7Color","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#color-lasercolor","title":"Color LaserColor","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#luck","title":"Luck","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-luck","title":"float Luck","text":"<p>Player stat - Only change this in a callback to MC_EVALUATE_CACHE.  This is equal to the Luck Stat.  Better luck generally means better random events.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#maxfiredelay","title":"Max\u00b7Fire\u00b7Delay","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-maxfiredelay","title":"float MaxFireDelay","text":"<p>Player stat - Only change this in a callback to MC_EVALUATE_CACHE.  This is equal to the Tears Stat.  How long between each tear can spawn?</p> Version Difference <p>In the Afterbirth+ version of the modding api, this variable is an integer</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#movespeed","title":"Move\u00b7Speed","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-movespeed","title":"float MoveSpeed","text":"<p>Player stat - Only change this in a callback to MC_EVALUATE_CACHE.  This is equal to the Speed Stat.  How fast can the player move?</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#queueditem","title":"Queued\u00b7Item","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#queueitemdata-queueditem","title":"QueueItemData QueuedItem","text":"<ul> <li>When Isaac picks up a collectible or a trinket, he holds it above his head for a while. At this point, the collectible/trinket is not actually put into his inventory yet.</li> <li>In other words, the item is queued for insertion until the animation completes, at which point the queue is processed and the item is inserted.</li> <li><code>QueuedItem</code> holds a object of type <code>QueueItemData</code> that describes the item that a player is currently holding above their head.</li> <li><code>QueuedItem</code> is never nil, even if the player is not currently holding up any item. (However, <code>player.QueuedItem.Item</code> will be nil if they are not currently holding up any item.)</li> <li>This only stores data for collectibles and trinkets. It does not store any data for pocket items (even though Isaac plays a similar \"holding above head\" animation for pocket items).</li> <li>Also see <code>FlushQueueItem()</code>, <code>IsItemQueueEmpty()</code>, and <code>QueueItem()</code>.</li> </ul>","tags":["Class","Player"]},{"location":"EntityPlayer.html#samsonberserkcharge","title":"Samson\u00b7Berserk\u00b7Charge","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#int-samsonberserkcharge","title":"int SamsonBerserkCharge","text":"<p>Internally used by Tainted Samson, increases based on damage dealt, range is 0-100000</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#secondaryactiveitem","title":"Secondary\u00b7Active\u00b7Item","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#activeitemdesc-secondaryactiveitem","title":"ActiveItemDesc SecondaryActiveItem","text":"Bug <p>This function does not exist anymore in Repentance. As of right now, there is no other function to get the ActiveItemDesc of any active item the player holds. Until this is fixed, this info will stay here.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#shotspeed","title":"Shot\u00b7Speed","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-shotspeed","title":"float ShotSpeed","text":"<p>Player stat - Only change this in a callback to MC_EVALUATE_CACHE.  This is equal to the ShotSpeed Stat.</p> <p>Defines how fast the tear travel when spawned.</p> <p>The default velocity of a tear shot is 10 times the players ShotSpeed.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#tearcolor","title":"Tear\u00b7Color","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#color-tearcolor","title":"Color TearColor","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#tearfallingacceleration","title":"Tear\u00b7Falling\u00b7Acceleration","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-tearfallingacceleration","title":"float TearFallingAcceleration","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#tearfallingspeed","title":"Tear\u00b7Falling\u00b7Speed","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-tearfallingspeed","title":"float TearFallingSpeed","text":"<p>Player stat - Only change this in a callback to MC_EVALUATE_CACHE. How fast is the tear moving up or down when it spawns? Affects range.</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#tearflags","title":"Tear\u00b7Flags","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#tearflags-tearflags","title":"TearFlags TearFlags","text":"<p>Player stat - Only change this in a callback to MC_EVALUATE_CACHE. Various TearFlags.</p> Example Code <p>This code makes Isaac's tears spectral. <pre><code>local mod:OnEvaluateTearFlags(player, flag)\n    player.TearFlags = player.TearFlags | TearFlags.TEAR_SPECTRAL\nend\n\nmod:AddCallback(ModCallbacks.MC_EVALUATE_CACHE, mod.OnEvaluateTearFlags, CacheFlag.CACHE_TEARFLAG)\n</code></pre></p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#tearheight","title":"Tear\u00b7Height","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-tearheight","title":"float TearHeight","text":"<p>Player stat - Only change this in a callback to MC_EVALUATE_CACHE. How high above the ground is the tear when it spawns?</p> Example Code <p>This code gives Isaac a +5 range up.</p> <pre><code>local mod:OnEvaluateRange(player, flag)\n    -- we give -5 because the TearHeight stat is always negative; the lower the number - the further the tear travels\n    player.TearHeight = player.TearHeight - 5\nend\n\nmod:AddCallback(ModCallbacks.MC_EVALUATE_CACHE, mod.OnEvaluateRange, CacheFlag.CACHE_RANGE)\n</code></pre>","tags":["Class","Player"]},{"location":"EntityPlayer.html#tearrange","title":"Tear\u00b7Range","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#float-tearrange","title":"float TearRange","text":"<p>Player stat - Only change this in a callback to MC_EVALUATE_CACHE. How far should a tear go when it spawns?</p>","tags":["Class","Player"]},{"location":"EntityPlayer.html#tearsoffset","title":"Tears\u00b7Offset","text":"","tags":["Class","Player"]},{"location":"EntityPlayer.html#vector-tearsoffset","title":"Vector TearsOffset","text":"","tags":["Class","Player"]},{"location":"EntityProjectile.html","title":"Class \"EntityProjectile\"","text":"","tags":["Class"]},{"location":"EntityProjectile.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityProjectile.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityProjectile.html#addchangeflags","title":"Add\u00b7Change\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityProjectile.html#void-addchangeflags-int-flags","title":"void AddChangeFlags ( int Flags )","text":"<p>See ChangeFlags.</p>","tags":["Class"]},{"location":"EntityProjectile.html#addfallingaccel","title":"Add\u00b7Falling\u00b7Accel ()","text":"","tags":["Class"]},{"location":"EntityProjectile.html#void-addfallingaccel-float-value","title":"void AddFallingAccel ( float Value )","text":"","tags":["Class"]},{"location":"EntityProjectile.html#addfallingspeed","title":"Add\u00b7Falling\u00b7Speed ()","text":"","tags":["Class"]},{"location":"EntityProjectile.html#void-addfallingspeed-float-value","title":"void AddFallingSpeed ( float Value )","text":"","tags":["Class"]},{"location":"EntityProjectile.html#addheight","title":"Add\u00b7Height ()","text":"","tags":["Class"]},{"location":"EntityProjectile.html#void-addheight-float-value","title":"void AddHeight ( float Value )","text":"","tags":["Class"]},{"location":"EntityProjectile.html#addprojectileflags","title":"Add\u00b7Projectile\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityProjectile.html#void-addprojectileflags-int-flags","title":"void AddProjectileFlags ( int Flags )","text":"<p>You can change the attributes of the projectile by adding one or more <code>ProjectileFlag</code>.</p>","tags":["Class"]},{"location":"EntityProjectile.html#addscale","title":"Add\u00b7Scale ()","text":"","tags":["Class"]},{"location":"EntityProjectile.html#void-addscale-float-value","title":"void AddScale ( float Value )","text":"","tags":["Class"]},{"location":"EntityProjectile.html#clearprojectileflags","title":"Clear\u00b7Projectile\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityProjectile.html#void-clearprojectileflags-int-flags","title":"void ClearProjectileFlags ( int Flags )","text":"","tags":["Class"]},{"location":"EntityProjectile.html#hasprojectileflags","title":"Has\u00b7Projectile\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityProjectile.html#boolean-hasprojectileflags-int-flags","title":"boolean HasProjectileFlags ( int Flags )","text":"","tags":["Class"]},{"location":"EntityProjectile.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"EntityProjectile.html#acceleration","title":"Acceleration","text":"","tags":["Class"]},{"location":"EntityProjectile.html#float-acceleration","title":"float Acceleration","text":"","tags":["Class"]},{"location":"EntityProjectile.html#changeflags","title":"Change\u00b7Flags","text":"","tags":["Class"]},{"location":"EntityProjectile.html#int-changeflags","title":"int ChangeFlags","text":"<p>Uses ProjectileFlags to define the projectile attributes after the \"Changed\" state was activated. The ProjectileFlag.CHANGE_FLAGS_AFTER_TIMEOUT needs to be set to allow for this change to apply!</p> <p>Informations about \"Changed\" State:</p> <p>Projectiles can have two states: normal (default) and changed.</p> <p>Changed state activates when projectile's frame count reaches the value set in ChangeTimeout. After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity.</p> <p>Also used in: ProjectileParams()</p>","tags":["Class"]},{"location":"EntityProjectile.html#changetimeout","title":"Change\u00b7Timeout","text":"","tags":["Class"]},{"location":"EntityProjectile.html#int-changetimeout","title":"int ChangeTimeout","text":"<p>Number of frames that need to elapse after spawn till the \"Changed\" state is activated. The ProjectileFlags.CHANGE_FLAGS_AFTER_TIMEOUT or CHANGE_VELOCITY_AFTER_TIMEOUT need to be set to allow for this change to apply!</p> <p>Informations about \"Changed\" State:</p> <p>Projectiles can have two states: normal (default) and changed.</p> <p>Changed state activates when projectile's frame count reaches the value set in ChangeTimeout. After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity.</p> <p>Also used in: ProjectileParams()</p>","tags":["Class"]},{"location":"EntityProjectile.html#changevelocity","title":"Change\u00b7Velocity","text":"","tags":["Class"]},{"location":"EntityProjectile.html#float-changevelocity","title":"float ChangeVelocity","text":"<p>Velocity value that gets applied when the \"Changed\" state is activated. The ProjectileFlag.CHANGE_VELOCITY_AFTER_TIMEOUT need to be set to allow for this change to apply!</p> <p>Informations about \"Changed\" State:</p> <p>Projectiles can have two states: normal (default) and changed.</p> <p>Changed state activates when projectile's frame count reaches the value set in ChangeTimeout. After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity.</p> <p>Also used in: ProjectileParams()</p>","tags":["Class"]},{"location":"EntityProjectile.html#curvingstrength","title":"Curving\u00b7Strength","text":"","tags":["Class"]},{"location":"EntityProjectile.html#float-curvingstrength","title":"float CurvingStrength","text":"","tags":["Class"]},{"location":"EntityProjectile.html#damage","title":"Damage","text":"","tags":["Class"]},{"location":"EntityProjectile.html#float-damage","title":"float Damage","text":"","tags":["Class"]},{"location":"EntityProjectile.html#depthoffset","title":"Depth\u00b7Offset","text":"","tags":["Class"]},{"location":"EntityProjectile.html#float-depthoffset","title":"float DepthOffset","text":"","tags":["Class"]},{"location":"EntityProjectile.html#fallingaccel","title":"Falling\u00b7Accel","text":"","tags":["Class"]},{"location":"EntityProjectile.html#float-fallingaccel","title":"float FallingAccel","text":"","tags":["Class"]},{"location":"EntityProjectile.html#fallingspeed","title":"Falling\u00b7Speed","text":"","tags":["Class"]},{"location":"EntityProjectile.html#float-fallingspeed","title":"float FallingSpeed","text":"","tags":["Class"]},{"location":"EntityProjectile.html#height","title":"Height","text":"","tags":["Class"]},{"location":"EntityProjectile.html#float-height","title":"float Height","text":"<p>Defines the height of a projectile. Height should be a negative value. Default is <code>-23</code>. To make projectiles that remain at a perfectly stationary Height until collision, set FallingSpeed to <code>0</code> and FallingAccel to <code>-0.1</code>.</p>","tags":["Class"]},{"location":"EntityProjectile.html#homingstrength","title":"Homing\u00b7Strength","text":"","tags":["Class"]},{"location":"EntityProjectile.html#float-homingstrength","title":"float HomingStrength","text":"","tags":["Class"]},{"location":"EntityProjectile.html#projectileflags","title":"Projectile\u00b7Flags","text":"","tags":["Class"]},{"location":"EntityProjectile.html#projectileflags-projectileflags","title":"ProjectileFlags ProjectileFlags","text":"<p>Uses ProjectileFlags to define the projectile attributes.</p>","tags":["Class"]},{"location":"EntityProjectile.html#scale","title":"Scale","text":"","tags":["Class"]},{"location":"EntityProjectile.html#float-scale","title":"float Scale","text":"","tags":["Class"]},{"location":"EntityProjectile.html#wiggleframeoffset","title":"Wiggle\u00b7Frame\u00b7Offset","text":"","tags":["Class"]},{"location":"EntityProjectile.html#int-wiggleframeoffset","title":"int WiggleFrameOffset","text":"","tags":["Class"]},{"location":"EntityPtr.html","title":"Class \"EntityPtr\"","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityPtr.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityPtr.html#entityptr","title":"Entity\u00b7Ptr ()","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityPtr.html#const-entityptr-entityptr-entity","title":"const EntityPtr EntityPtr ( Entity )","text":"<p>The constructor is a global function. For example</p> <pre><code>local playerPtr = nil\n\nlocal function postPlayerInit(player)\n  playerPtr = EntityPtr(player)\nend\n\nlocal function postGameStarted()\n  local player = getPlayerFromPtr(playerPtr)\nend\n\nlocal function getPlayerFromPtr()\n  if playerPtr == nil then\n    return nil\n  end\n\n  if playerPtr.Ref == nil then\n    return nil\n  end\n\n  return playerPtr.Ref:ToPlayer()\nend\n</code></pre>","tags":["Globals","Class"],"boost":0.25},{"location":"EntityPtr.html#functions","title":"Functions","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityPtr.html#setreference","title":"Set\u00b7Reference ()","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityPtr.html#void-setreference-entity-ref","title":"void SetReference ( Entity ref )","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityPtr.html#variables","title":"Variables","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityPtr.html#ref","title":"Ref","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityPtr.html#entity-ref","title":"Entity Ref","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html","title":"Class \"EntityRef\"","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#entityref","title":"Entity\u00b7Ref ()","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#entityref-entityref-entity","title":"EntityRef EntityRef ( Entity )","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#variables","title":"Variables","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#entity","title":"Entity","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#entity-entity","title":"Entity Entity","text":"<p>optional</p>","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#ischarmed","title":"Is\u00b7Charmed","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#boolean-ischarmed","title":"boolean IsCharmed","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#isfriendly","title":"Is\u00b7Friendly","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#boolean-isfriendly","title":"boolean IsFriendly","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#position","title":"Position","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#vector-position","title":"Vector Position","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#spawnertype","title":"Spawner\u00b7Type","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#entitytype-spawnertype","title":"EntityType SpawnerType","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#spawnervariant","title":"Spawner\u00b7Variant","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#int-spawnervariant","title":"int SpawnerVariant","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#type","title":"Type","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#entitytype-type","title":"EntityType Type","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#variant","title":"Variant","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityRef.html#int-variant","title":"int Variant","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"EntityTear.html","title":"Class \"EntityTear\"","text":"","tags":["Class"]},{"location":"EntityTear.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>","tags":["Class"]},{"location":"EntityTear.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"EntityTear.html#addtearflags","title":"Add\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityTear.html#void-addtearflags-tearflags-flags","title":"void AddTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityTear.html#changevariant","title":"Change\u00b7Variant ()","text":"","tags":["Class"]},{"location":"EntityTear.html#void-changevariant-int-newvariant","title":"void ChangeVariant ( int NewVariant )","text":"","tags":["Class"]},{"location":"EntityTear.html#cleartearflags","title":"Clear\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityTear.html#void-cleartearflags-tearflags-flags","title":"void ClearTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityTear.html#hastearflags","title":"Has\u00b7Tear\u00b7Flags ()","text":"","tags":["Class"]},{"location":"EntityTear.html#boolean-hastearflags-tearflags-flags","title":"boolean HasTearFlags ( TearFlags Flags )","text":"","tags":["Class"]},{"location":"EntityTear.html#resetspritescale","title":"Reset\u00b7Sprite\u00b7Scale ()","text":"","tags":["Class"]},{"location":"EntityTear.html#void-resetspritescale","title":"void ResetSpriteScale ( )","text":"<p>Resets the tear sprite animation depending on scale.</p>","tags":["Class"]},{"location":"EntityTear.html#setdeadeyeintensity","title":"Set\u00b7Dead\u00b7Eye\u00b7Intensity ()","text":"","tags":["Class"]},{"location":"EntityTear.html#void-setdeadeyeintensity-float-intensity","title":"void SetDeadEyeIntensity ( float Intensity )","text":"","tags":["Class"]},{"location":"EntityTear.html#setknockbackmultiplier","title":"Set\u00b7Knockback\u00b7Multiplier ()","text":"","tags":["Class"]},{"location":"EntityTear.html#void-setknockbackmultiplier-float-multiplier","title":"void SetKnockbackMultiplier ( float Multiplier )","text":"","tags":["Class"]},{"location":"EntityTear.html#setparentoffset","title":"Set\u00b7Parent\u00b7Offset ()","text":"","tags":["Class"]},{"location":"EntityTear.html#void-setparentoffset-vector-offset","title":"void SetParentOffset ( Vector Offset )","text":"","tags":["Class"]},{"location":"EntityTear.html#setwaitframes","title":"Set\u00b7Wait\u00b7Frames ()","text":"","tags":["Class"]},{"location":"EntityTear.html#void-setwaitframes-int-value","title":"void SetWaitFrames ( int Value )","text":"","tags":["Class"]},{"location":"EntityTear.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"EntityTear.html#basedamage","title":"Base\u00b7Damage","text":"","tags":["Class"]},{"location":"EntityTear.html#const-float-basedamage","title":"const float BaseDamage","text":"","tags":["Class"]},{"location":"EntityTear.html#basescale","title":"Base\u00b7Scale","text":"","tags":["Class"]},{"location":"EntityTear.html#const-float-basescale","title":"const float BaseScale","text":"","tags":["Class"]},{"location":"EntityTear.html#bounced","title":"Bounced","text":"","tags":["Class"]},{"location":"EntityTear.html#boolean-bounced","title":"boolean Bounced","text":"<p>true if tear bounced off something.</p> <p>This attribute got removed with Repentance.</p>","tags":["Class"]},{"location":"EntityTear.html#cantriggerstreakend","title":"Can\u00b7Trigger\u00b7Streak\u00b7End","text":"","tags":["Class"]},{"location":"EntityTear.html#boolean-cantriggerstreakend","title":"boolean CanTriggerStreakEnd","text":"<p>For Onan's strak and Dead Eye.</p>","tags":["Class"]},{"location":"EntityTear.html#continuevelocity","title":"Continue\u00b7Velocity","text":"","tags":["Class"]},{"location":"EntityTear.html#vector-continuevelocity","title":"Vector ContinueVelocity","text":"","tags":["Class"]},{"location":"EntityTear.html#fallingacceleration","title":"Falling\u00b7Acceleration","text":"","tags":["Class"]},{"location":"EntityTear.html#float-fallingacceleration","title":"float FallingAcceleration","text":"","tags":["Class"]},{"location":"EntityTear.html#fallingspeed","title":"Falling\u00b7Speed","text":"","tags":["Class"]},{"location":"EntityTear.html#float-fallingspeed","title":"float FallingSpeed","text":"","tags":["Class"]},{"location":"EntityTear.html#height","title":"Height","text":"","tags":["Class"]},{"location":"EntityTear.html#float-height","title":"float Height","text":"","tags":["Class"]},{"location":"EntityTear.html#homingfriction","title":"Homing\u00b7Friction","text":"","tags":["Class"]},{"location":"EntityTear.html#float-homingfriction","title":"float HomingFriction","text":"","tags":["Class"]},{"location":"EntityTear.html#knockbackmultiplier","title":"Knockback\u00b7Multiplier","text":"","tags":["Class"]},{"location":"EntityTear.html#float-knockbackmultiplier","title":"float KnockbackMultiplier","text":"","tags":["Class"]},{"location":"EntityTear.html#parentoffset","title":"Parent\u00b7Offset","text":"","tags":["Class"]},{"location":"EntityTear.html#vector-parentoffset","title":"Vector ParentOffset","text":"<p>Used for Position adjustment (vs PositionOffset which is a render offset)</p>","tags":["Class"]},{"location":"EntityTear.html#posdisplacement","title":"Pos\u00b7Displacement","text":"","tags":["Class"]},{"location":"EntityTear.html#const-vector-posdisplacement","title":"const Vector PosDisplacement","text":"","tags":["Class"]},{"location":"EntityTear.html#rotation","title":"Rotation","text":"","tags":["Class"]},{"location":"EntityTear.html#float-rotation","title":"float Rotation","text":"","tags":["Class"]},{"location":"EntityTear.html#scale","title":"Scale","text":"","tags":["Class"]},{"location":"EntityTear.html#float-scale","title":"float Scale","text":"","tags":["Class"]},{"location":"EntityTear.html#stickdiff","title":"Stick\u00b7Diff","text":"","tags":["Class"]},{"location":"EntityTear.html#vector-stickdiff","title":"Vector StickDiff","text":"","tags":["Class"]},{"location":"EntityTear.html#sticktarget","title":"Stick\u00b7Target","text":"","tags":["Class"]},{"location":"EntityTear.html#entity-sticktarget","title":"Entity StickTarget","text":"","tags":["Class"]},{"location":"EntityTear.html#sticktimer","title":"Stick\u00b7Timer","text":"","tags":["Class"]},{"location":"EntityTear.html#int-sticktimer","title":"int StickTimer","text":"","tags":["Class"]},{"location":"EntityTear.html#tearflags","title":"Tear\u00b7Flags","text":"","tags":["Class"]},{"location":"EntityTear.html#tearflags-tearflags","title":"TearFlags TearFlags","text":"","tags":["Class"]},{"location":"EntityTear.html#tearindex","title":"Tear\u00b7Index","text":"","tags":["Class"]},{"location":"EntityTear.html#const-int-tearindex","title":"const int TearIndex","text":"<ul> <li>In each run, the game keeps track of how many tears have been fired by the player in total.</li> <li><code>TearIndex</code> represents this tear counter.</li> <li>It is 0-indexed, meaning that the first tear fired by the player on a run will have a <code>TearIndex</code> of 0, the second tear fired by the player on a run will have a <code>TearIndex</code> of 1, and so on.</li> </ul>","tags":["Class"]},{"location":"EntityTear.html#waitframes","title":"Wait\u00b7Frames","text":"","tags":["Class"]},{"location":"EntityTear.html#int-waitframes","title":"int WaitFrames","text":"","tags":["Class"]},{"location":"Font.html","title":"Class \"Font\"","text":"","tags":["Globals","Class"]},{"location":"Font.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"]},{"location":"Font.html#font","title":"Font ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#font-font","title":"Font Font ( )","text":"<p>Constructor for the \"Font\" class.</p> Example Code <p>Example usage. <pre><code>local f = Font() -- init font object\nf:Load(\"font/terminus.fnt\") -- load a font into the font object\nf:DrawString(\"Hello World!\",60,50,KColor(1,1,1,1),0,true) -- render string with loaded font on position 60x50y\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Font.html#functions","title":"Functions","text":"","tags":["Globals","Class"]},{"location":"Font.html#drawstring","title":"Draw\u00b7String ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#void-drawstring-string-string-float-positionx-float-positiony-kcolor-rendercolor-int-boxwidth-0-boolean-center-false","title":"void DrawString ( string String, float PositionX, float PositionY, KColor RenderColor, int BoxWidth = 0, boolean Center = false )","text":"<p>Draws a string of text to the screen Converts UTF8 to UTF16, then draws the string. Notes: The BoxWidth and Center parameters can be used for aligning the text: If BoxWidth is zero, the text will be left aligned and the center parameter will be ignored If BoxWidth is NOT zero, and the Center parameter is FALSE, then the text will be right aligned inside the BoxWidth size If BoxWidth is NOT zero, and the center parameter is TRUE, then the text will be centered inside the BoxWidth size</p> Bug <p>Calling this function with <code>nil</code> as either the <code>String</code> or <code>RenderColor</code> parameters will crash the game.</p> Example Code <p>Example usage. <pre><code>-- In an initialization function:\nlocal f = Font() -- init font object\nf:Load(\"font/terminus.fnt\") -- load a font into the font object\n\n-- In a render function on every frame:\nf:DrawString(\"Hello World!\",60,50,KColor(1,1,1,1),0,true) -- render string with loaded font on position (60, 50)\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Font.html#drawstringscaled","title":"Draw\u00b7String\u00b7Scaled ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#void-drawstringscaled-string-string-float-positionx-float-positiony-float-scalex-float-scaley-kcolor-rendercolor-int-boxwidth-0-boolean-center-false","title":"void DrawStringScaled ( string String, float PositionX, float PositionY, float ScaleX, float ScaleY, KColor RenderColor, int BoxWidth = 0, boolean Center = false )","text":"<p>Draws a scaled string of text on the screen. Converts UTF8 to UTF16, then draws the string.</p> Bug <p>Calling this function with <code>nil</code> as either the <code>String</code> or <code>RenderColor</code> parameters will crash the game.</p> Example Code <p>Example usage. <pre><code>local f = Font() -- init font object\nf:Load(\"font/terminus.fnt\") -- load a font into the font object\nf:DrawStringScaled(\"Hello World!\",60,50,0.5,0.5,KColor(1,1,1,1),0,true) -- render string with loaded font on position 60x50y\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Font.html#drawstringscaledutf8","title":"Draw\u00b7String\u00b7Scaled\u00b7UTF8 ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#void-drawstringscaledutf8-string-string-float-positionx-float-positiony-float-scalex-float-scaley-kcolor-rendercolor-int-boxwidth-0-boolean-center-false","title":"void DrawStringScaledUTF8 ( string String, float PositionX, float PositionY, float ScaleX, float ScaleY, KColor RenderColor, int BoxWidth = 0, boolean Center = false )","text":"<p>Draws a scaled string of Unicode text on the screen.</p> Bug <p>Calling this function with <code>nil</code> as either the <code>String</code> or <code>RenderColor</code> parameters will crash the game.</p> Example Code <p>Example usage. <pre><code>local f = Font() -- init font object\nf:Load(\"font/terminus.fnt\") -- load a font into the font object\nf:DrawStringScaledUTF8(\"Hello World!\",60,50,0.5,0.5,KColor(1,1,1,1),0,true) -- render string with loaded font on position 60x50y\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Font.html#drawstringutf8","title":"Draw\u00b7String\u00b7UTF8 ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#void-drawstringutf8-string-string-float-positionx-float-positiony-kcolor-rendercolor-int-boxwidth-0-boolean-center-false","title":"void DrawStringUTF8 ( string String, float PositionX, float PositionY, KColor RenderColor, int BoxWidth = 0, boolean Center = false )","text":"<p>Draws a string of Unicode text to the screen Notes: The BoxWidth and Center parameters can be used for aligning the text: If BoxWidth is zero, the text will be left aligned and the center parameter will be ignored If BoxWidth is NOT zero, and the Center parameter is FALSE, then the text will be right aligned inside the BoxWidth size If BoxWidth is NOT zero, and the center parameter is TRUE, then the text will be centered inside the BoxWidth size</p> Bug <p>Calling this function with <code>nil</code> as either the <code>String</code> or <code>RenderColor</code> parameters will crash the game.</p> Example Code <p>Example usage. <pre><code>local f = Font() -- init font object\nf:Load(\"font/terminus.fnt\") -- load a font into the font object\nf:DrawStringUTF8(\"Hello World!\",60,50,KColor(1,1,1,1),0,true) -- render string with loaded font on position 60x50y\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Font.html#getbaselineheight","title":"Get\u00b7Baseline\u00b7Height ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#int-getbaselineheight","title":"int GetBaselineHeight ( )","text":"<p>Get the number of pixels from the absolute top of the line to the base of the characters</p>","tags":["Globals","Class"]},{"location":"Font.html#getcharacterwidth","title":"Get\u00b7Character\u00b7Width ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#int-getcharacterwidth-char-character","title":"int GetCharacterWidth ( char Character )","text":"<p>Returns the width of a specific character</p>","tags":["Globals","Class"]},{"location":"Font.html#getlineheight","title":"Get\u00b7Line\u00b7Height ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#int-getlineheight","title":"int GetLineHeight ( )","text":"<p>Get the distance in pixels between each line of text</p>","tags":["Globals","Class"]},{"location":"Font.html#getstringwidth","title":"Get\u00b7String\u00b7Width ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#int-getstringwidth-string-string","title":"int GetStringWidth ( string String )","text":"<p>Converts UTF8 to UTF16 and returns string width</p> Bug <p>Calling this function with <code>nil</code> as parameter will crash the game.</p>","tags":["Globals","Class"]},{"location":"Font.html#getstringwidthutf8","title":"Get\u00b7String\u00b7Width\u00b7UTF8 ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#int-getstringwidthutf8-string-string","title":"int GetStringWidthUTF8 ( string String )","text":"<p>returns string width of a Unicode text.</p>","tags":["Globals","Class"]},{"location":"Font.html#isloaded","title":"Is\u00b7Loaded ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#boolean-isloaded","title":"boolean IsLoaded ( )","text":"<p>Returns whether a font is loaded or not.</p>","tags":["Globals","Class"]},{"location":"Font.html#load","title":"Load ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#void-load-string-filepath","title":"void Load ( string FilePath )","text":"<p>Loads a font.</p> Note <p>To check that the font actually got loaded, call the IsLoaded() method afterwards.</p> Example Code <p>Example usage. <pre><code>local f = Font() -- init font object\nf:Load(\"font/terminus.fnt\") -- load a font into the font object\nf:DrawString(\"Hello World!\",60,50,KColor(1,1,1,1),0,true) -- render string with loaded font on position 60x50y\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Font.html#setmissingcharacter","title":"Set\u00b7Missing\u00b7Character ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#void-setmissingcharacter-char-missingcharacter","title":"void SetMissingCharacter ( char MissingCharacter )","text":"<p>Converts UTF8 to UTF16, then draws Sets the missing character to be used by the font (the character used when missing characters are encountered)</p>","tags":["Globals","Class"]},{"location":"Font.html#unload","title":"Unload ()","text":"","tags":["Globals","Class"]},{"location":"Font.html#void-unload","title":"void Unload ( )","text":"<p>Unloads all our data from memory</p>","tags":["Globals","Class"]},{"location":"Game.html","title":"Class \"Game\"","text":"","tags":["Globals","Class"]},{"location":"Game.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"]},{"location":"Game.html#game","title":"Game ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#game-game","title":"Game Game ( )","text":"<p>Returns a Game object.</p> Example Code <p>Example usage: <pre><code>Game():IsPaused()\n--returns true if the game is paused\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Game.html#functions","title":"Functions","text":"","tags":["Globals","Class"]},{"location":"Game.html#adddevilroomdeal","title":"Add\u00b7Devil\u00b7Room\u00b7Deal ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-adddevilroomdeal","title":"void AddDevilRoomDeal ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#addencounteredboss","title":"Add\u00b7Encountered\u00b7Boss ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-addencounteredboss-entitytype-boss-int-variant","title":"void AddEncounteredBoss ( EntityType Boss, int Variant )","text":"","tags":["Globals","Class"]},{"location":"Game.html#addpixelation","title":"Add\u00b7Pixelation ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-addpixelation-int-duration","title":"void AddPixelation ( int Duration )","text":"<p>Triggers the effect of the \"retro vision\" pill.</p>","tags":["Globals","Class"]},{"location":"Game.html#addstagewithoutdamage","title":"Add\u00b7Stage\u00b7Without\u00b7Damage ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-addstagewithoutdamage","title":"void AddStageWithoutDamage ( )","text":"<p>Increases the ingame counter, that keeps track of the stages you cleared without taking damage. (useful for Devil deal manipulations)</p>","tags":["Globals","Class"]},{"location":"Game.html#addstagewithoutheartspicked","title":"Add\u00b7Stage\u00b7Without\u00b7Hearts\u00b7Picked ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-addstagewithoutheartspicked","title":"void AddStageWithoutHeartsPicked ( )","text":"<p>Increases the ingame counter, that keeps track of stages you cleared without picking up hearts.</p>","tags":["Globals","Class"]},{"location":"Game.html#addtreasureroomsvisited","title":"Add\u00b7Treasure\u00b7Rooms\u00b7Visited ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-addtreasureroomsvisited","title":"void AddTreasureRoomsVisited ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#bombdamage","title":"Bomb\u00b7Damage ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-bombdamage-vector-position-float-damage-float-radius-boolean-linecheck-true-entity-source-nil-tearflags-tearflags-tearflagstear_normal-int-damageflags-damageflagsdamage_explosion-boolean-damagesource-false","title":"void BombDamage ( Vector Position, float Damage, float Radius, boolean LineCheck = true, Entity Source = nil, TearFlags TearFlags = TearFlags.TEAR_NORMAL, int DamageFlags = DamageFlags.DAMAGE_EXPLOSION, boolean DamageSource = false )","text":"","tags":["Globals","Class"]},{"location":"Game.html#bombexplosioneffects","title":"Bomb\u00b7Explosion\u00b7Effects ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-bombexplosioneffects-vector-position-float-damage-tearflags-tearflags-tearflagstear_normal-color-color-colordefault-entity-source-nil-float-radiusmult-1-boolean-linecheck-true-boolean-damagesource-false-int-damageflags-damageflagsdamage_explosion","title":"void BombExplosionEffects ( Vector Position, float Damage, TearFlags TearFlags = TearFlags.TEAR_NORMAL, Color Color = Color.Default, Entity Source = nil, float RadiusMult = 1, boolean LineCheck = true, boolean DamageSource = false, int DamageFlags = DamageFlags.DAMAGE_EXPLOSION )","text":"<p>The complete bomb explosion package: Do damage, spawn boomgraphics, and apply tearflag-based effects.</p>","tags":["Globals","Class"]},{"location":"Game.html#bombtearflageffects","title":"Bomb\u00b7Tearflag\u00b7Effects ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-bombtearflageffects-vector-position-float-radius-tearflags-tearflags-entity-source-nil-float-radiusmult-1","title":"void BombTearflagEffects ( Vector Position, float Radius, TearFlags TearFlags, Entity Source = nil, float RadiusMult = 1)","text":"<p>Does bomb-exclusive special effects.</p>","tags":["Globals","Class"]},{"location":"Game.html#butterbeanfart","title":"Butter\u00b7Bean\u00b7Fart ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-butterbeanfart-vector-position-float-radius-entity-source-boolean-showeffect-boolean-dosuperknockback","title":"void ButterBeanFart ( Vector Position, float Radius, Entity Source, boolean ShowEffect, boolean DoSuperKnockback )","text":"","tags":["Globals","Class"]},{"location":"Game.html#changeroom","title":"Change\u00b7Room ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-changeroom-int-roomindex-int-dimension-1","title":"void ChangeRoom ( int RoomIndex, int Dimension = -1 )","text":"<p>This function should be used over <code>Level.ChangeRoom</code> because that function will not update the fxlayers properly.</p> Dimension Info <p>Dimension: ID of the dimension to get the room from</p> <pre><code>* -1: Current dimension\n* 0: Main dimension\n* 1: Secondary dimension, used by Downpour mirror dimension and Mines escape sequence\n* 2: Death Certificate dimension\n</code></pre>","tags":["Globals","Class"]},{"location":"Game.html#charmfart","title":"Charm\u00b7Fart ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-charmfart-vector-position-float-radius-entity-source","title":"void CharmFart ( Vector Position, float Radius, Entity Source )","text":"","tags":["Globals","Class"]},{"location":"Game.html#cleardonationmodangel","title":"Clear\u00b7Donation\u00b7Mod\u00b7Angel ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-cleardonationmodangel","title":"void ClearDonationModAngel ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#cleardonationmodgreed","title":"Clear\u00b7Donation\u00b7Mod\u00b7Greed ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-cleardonationmodgreed","title":"void ClearDonationModGreed ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#clearstageswithoutdamage","title":"Clear\u00b7Stages\u00b7Without\u00b7Damage ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-clearstageswithoutdamage","title":"void ClearStagesWithoutDamage ( )","text":"<p>Sets the counter for stages cleared without damage to 0.</p>","tags":["Globals","Class"]},{"location":"Game.html#clearstageswithoutheartspicked","title":"Clear\u00b7Stages\u00b7Without\u00b7Hearts\u00b7Picked ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-clearstageswithoutheartspicked","title":"void ClearStagesWithoutHeartsPicked ( )","text":"<p>Sets the counter for stages cleared without picking up hearts to 0.</p>","tags":["Globals","Class"]},{"location":"Game.html#darken","title":"Darken ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-darken-float-darkness-int-timeout","title":"void Darken ( float Darkness, int Timeout )","text":"<p>Darkens the room. This is the function that is called internally during The Lamb fight or when Dice Rooms are activated.</p>","tags":["Globals","Class"]},{"location":"Game.html#donateangel","title":"Donate\u00b7Angel ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-donateangel-int-donate","title":"void DonateAngel ( int Donate )","text":"","tags":["Globals","Class"]},{"location":"Game.html#donategreed","title":"Donate\u00b7Greed ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-donategreed-int-donate","title":"void DonateGreed ( int Donate )","text":"","tags":["Globals","Class"]},{"location":"Game.html#end","title":"End ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-end-ending-ending","title":"void End ( Ending Ending )","text":"Ending notes <p>1: Game over \"Dear Diary\" (exit/restart)</p> <p>2: Mom / Epilogue (movie)</p> <p>3: Mom's Heart / End 1/2/3/4/5/6/7/8/9/10/11 (movie) or just Credits depending on context</p> <p>4: Satan / End 12 (movie)</p> <p>5: Isaac / End 13 (movie)</p> <p>6: The Lamb / End 15 (movie)</p> <p>7: ??? / End 14 (movie)</p> <p>8: Mega Satan / End 16 (movie)</p> <p>9: Greed / End 18 (movie)</p> <p>10: Hush / End 17 (movie)</p> <p>11: Delirium / End 20 (movie)</p> <p>12: Greedier / End 19 (movie)</p> <p>13: Mother / End 21 (movie)</p> <p>14: The Beast / Final (movie)</p> <p>Successful endings increment your win streak. If you pass a bad number like 0 then you can artificially increase your win streak as much as you want.</p>","tags":["Globals","Class"]},{"location":"Game.html#fadein","title":"Fadein ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-fadein-float-speed","title":"void Fadein ( float Speed )","text":"","tags":["Globals","Class"]},{"location":"Game.html#fadeout","title":"Fadeout ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-fadeout-float-speed-fadeouttarget-target","title":"void Fadeout ( float Speed, FadeoutTarget Target )","text":"Notes <p>FadeoutTarget types:</p> <p>0: File Select Menu</p> <p>1: File Selected Menu (New run, Start game, etc.)</p> <p>2: Title</p> <p>3: New Game (Starts a new run)</p> <p>4: Victory lap</p>","tags":["Globals","Class"]},{"location":"Game.html#fart","title":"Fart ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-fart-vector-position-float-radius-85-entity-source-nil-float-fartscale-1-int-fartsubtype-0-color-fartcolor-colordefault","title":"void Fart ( Vector Position, float Radius = 85, Entity Source = nil, float FartScale = 1, int FartSubType = 0, Color FartColor = Color.Default )","text":"","tags":["Globals","Class"]},{"location":"Game.html#finishchallenge","title":"Finish\u00b7Challenge ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-finishchallenge","title":"void FinishChallenge ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getambush","title":"Get\u00b7Ambush ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#ambush-getambush","title":"Ambush GetAmbush ( )","text":"Bug <p>Since it returns UserData, this function is unusable and therefore broken.</p>","tags":["Globals","Class"]},{"location":"Game.html#getdarknessmodifier","title":"Get\u00b7Darkness\u00b7Modifier ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#float-getdarknessmodifier","title":"float GetDarknessModifier ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getdevilroomdeals","title":"Get\u00b7Devil\u00b7Room\u00b7Deals ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getdevilroomdeals","title":"int GetDevilRoomDeals ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getdonationmodangel","title":"Get\u00b7Donation\u00b7Mod\u00b7Angel ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getdonationmodangel","title":"int GetDonationModAngel ( )","text":"<p>Get the value that indicates the angel-counter of a shop-donation maschine. This Stat increases everytime you donate to a shop. A higher number grants a few advantages.</p>","tags":["Globals","Class"]},{"location":"Game.html#getdonationmodgreed","title":"Get\u00b7Donation\u00b7Mod\u00b7Greed ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getdonationmodgreed","title":"int GetDonationModGreed ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getfont","title":"Get\u00b7Font ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#font-getfont","title":"Font GetFont ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getframecount","title":"Get\u00b7Frame\u00b7Count ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getframecount","title":"int GetFrameCount ( )","text":"<p>Returns the number of frames the gameplay is actively running. Pauses are therefore not included! 1 second equals 30 frames. This function therefore works drastically different than <code>Isaac.GetFrameCount()</code></p> Example Code <p>This code returns hours, minutes, seconds, and milliseconds of the game running actively: <pre><code>local curTime = Game():GetFrameCount()\nlocal msecs= curTime%30 * (10/3) -- turns the millisecond value range from [0 to 30] to [0 to 100]\nlocal secs= math.floor(curTime/30)%60\nlocal mins= math.floor(curTime/30/60)%60\nlocal hours= math.floor(curTime/30/60/60)%60\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Game.html#getgreedbosswavenum","title":"Get\u00b7Greed\u00b7Boss\u00b7Wave\u00b7Num ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getgreedbosswavenum","title":"int GetGreedBossWaveNum ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getgreedwavesnum","title":"Get\u00b7Greed\u00b7Waves\u00b7Num ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getgreedwavesnum","title":"int GetGreedWavesNum ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#gethud","title":"Get\u00b7HUD ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#hud-gethud","title":"HUD GetHUD ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getitemoverlay","title":"Get\u00b7Item\u00b7Overlay ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#itemoverlay-getitemoverlay","title":"ItemOverlay GetItemOverlay ( )","text":"Bug <p>Since it returns UserData, this function is unusable and therefore broken.</p>","tags":["Globals","Class"]},{"location":"Game.html#getitempool","title":"Get\u00b7Item\u00b7Pool ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#itempool-getitempool","title":"ItemPool GetItemPool ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getlastdevilroomstage","title":"Get\u00b7Last\u00b7Devil\u00b7Room\u00b7Stage ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#levelstage-getlastdevilroomstage","title":"LevelStage GetLastDevilRoomStage ( )","text":"Bug <p>Since it returns UserData, this function is unusable and therefore broken.</p>","tags":["Globals","Class"]},{"location":"Game.html#getlastlevelwithdamage","title":"Get\u00b7Last\u00b7Level\u00b7With\u00b7Damage ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#levelstage-getlastlevelwithdamage","title":"LevelStage GetLastLevelWithDamage ( )","text":"Bug <p>Since it returns UserData, this function is unusable and therefore broken.</p>","tags":["Globals","Class"]},{"location":"Game.html#getlastlevelwithouthalfhp","title":"Get\u00b7Last\u00b7Level\u00b7Without\u00b7Half\u00b7Hp ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#levelstage-getlastlevelwithouthalfhp","title":"LevelStage GetLastLevelWithoutHalfHp ( )","text":"Bug <p>Since it returns UserData, this function is unusable and therefore broken.</p>","tags":["Globals","Class"]},{"location":"Game.html#getlevel","title":"Get\u00b7Level ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#level-getlevel","title":"Level GetLevel ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getnearestplayer","title":"Get\u00b7Nearest\u00b7Player ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#entityplayer-getnearestplayer-vector-pos","title":"EntityPlayer GetNearestPlayer ( Vector Pos )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getnumencounteredbosses","title":"Get\u00b7Num\u00b7Encountered\u00b7Bosses ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getnumencounteredbosses","title":"int GetNumEncounteredBosses ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getnumplayers","title":"Get\u00b7Num\u00b7Players ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getnumplayers","title":"int GetNumPlayers ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getplayer","title":"Get\u00b7Player ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#entityplayer-getplayer-int-index","title":"EntityPlayer GetPlayer ( int Index )","text":"<p>Returns the EntityPlayer with the given index. This function can return <code>nil</code> if the function is called before any player is initialized. If an index is given, that is not used, it will return the last player in the list.</p> <p>This function is the same as <code>Isaac.GetPlayer()</code>.</p>","tags":["Globals","Class"]},{"location":"Game.html#getrandomplayer","title":"Get\u00b7Random\u00b7Player ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#entityplayer-getrandomplayer-vector-pos-float-radius","title":"EntityPlayer GetRandomPlayer ( Vector Pos, float Radius )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getroom","title":"Get\u00b7Room ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#room-getroom","title":"Room GetRoom ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getscreenshakecountdown","title":"Get\u00b7Screen\u00b7Shake\u00b7Countdown ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getscreenshakecountdown","title":"int GetScreenShakeCountdown ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getseeds","title":"Get\u00b7Seeds ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#seeds-getseeds","title":"Seeds GetSeeds ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getstageswithoutdamage","title":"Get\u00b7Stages\u00b7Without\u00b7Damage ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getstageswithoutdamage","title":"int GetStagesWithoutDamage ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getstageswithoutheartspicked","title":"Get\u00b7Stages\u00b7Without\u00b7Hearts\u00b7Picked ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getstageswithoutheartspicked","title":"int GetStagesWithoutHeartsPicked ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getstateflag","title":"Get\u00b7State\u00b7Flag ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#boolean-getstateflag-gamestateflag-gamestateflag","title":"boolean GetStateFlag ( GameStateFlag GameStateFlag )","text":"","tags":["Globals","Class"]},{"location":"Game.html#gettargetdarkness","title":"Get\u00b7Target\u00b7Darkness ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#float-gettargetdarkness","title":"float GetTargetDarkness ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#gettreasureroomvisitcount","title":"Get\u00b7Treasure\u00b7Room\u00b7Visit\u00b7Count ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-gettreasureroomvisitcount","title":"int GetTreasureRoomVisitCount ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#getvictorylap","title":"Get\u00b7Victory\u00b7Lap ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-getvictorylap","title":"int GetVictoryLap ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#hasencounteredboss","title":"Has\u00b7Encountered\u00b7Boss ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#boolean-hasencounteredboss-entitytype-boss-int-variant","title":"boolean HasEncounteredBoss ( EntityType Boss, int Variant )","text":"","tags":["Globals","Class"]},{"location":"Game.html#hashallucination","title":"Has\u00b7Hallucination ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#boolean-hashallucination","title":"boolean HasHallucination ( )","text":"<p>Returns true if the Delirium animation (Static noise intersected with past gameplay fotage) is playing right now.</p>","tags":["Globals","Class"]},{"location":"Game.html#isgreedmode","title":"Is\u00b7Greed\u00b7Mode ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#boolean-isgreedmode","title":"boolean IsGreedMode ( )","text":"<p>Returns true if the current gamemode is set to Greed or Greedier mode.</p> <p>To differentiate between Greed and Greedier mode, you need to use the <code>Game().Difficulty</code> attribute.</p>","tags":["Globals","Class"]},{"location":"Game.html#ispaused","title":"Is\u00b7Paused ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#boolean-ispaused","title":"boolean IsPaused ( )","text":"<p>Returns true, if the game is in a state, where the player is unable to input any thing or the game logic is paused. This includes having the pause menu opened, being in room transitions/cutscenes or while displaying a \"big book\" animation.</p>","tags":["Globals","Class"]},{"location":"Game.html#makeshockwave","title":"Make\u00b7Shockwave ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-makeshockwave-vector-position-float-amplitude-float-speed-int-duration","title":"void MakeShockwave ( Vector Position, float Amplitude, float Speed, int Duration )","text":"","tags":["Globals","Class"]},{"location":"Game.html#movetorandomroom","title":"Move\u00b7To\u00b7Random\u00b7Room ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-movetorandomroom-boolean-iamerrorroom-int-seed-entityplayer-player","title":"void MoveToRandomRoom ( boolean IAmErrorRoom, int Seed, EntityPlayer Player )","text":"","tags":["Globals","Class"]},{"location":"Game.html#nextvictorylap","title":"Next\u00b7Victory\u00b7Lap ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-nextvictorylap","title":"void NextVictoryLap ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#render","title":"Render ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-render","title":"void Render ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#rerollenemy","title":"Reroll\u00b7Enemy ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#boolean-rerollenemy-entity-e","title":"boolean RerollEnemy ( Entity e )","text":"","tags":["Globals","Class"]},{"location":"Game.html#rerolllevelcollectibles","title":"Reroll\u00b7Level\u00b7Collectibles ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-rerolllevelcollectibles","title":"void RerollLevelCollectibles ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#rerolllevelpickups","title":"Reroll\u00b7Level\u00b7Pickups ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-rerolllevelpickups-int-seed","title":"void RerollLevelPickups ( int Seed )","text":"","tags":["Globals","Class"]},{"location":"Game.html#setlastdevilroomstage","title":"Set\u00b7Last\u00b7Devil\u00b7Room\u00b7Stage ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-setlastdevilroomstage-levelstage-stage","title":"void SetLastDevilRoomStage ( LevelStage Stage )","text":"","tags":["Globals","Class"]},{"location":"Game.html#setlastlevelwithdamage","title":"Set\u00b7Last\u00b7Level\u00b7With\u00b7Damage ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-setlastlevelwithdamage-levelstage-stage","title":"void SetLastLevelWithDamage ( LevelStage Stage )","text":"","tags":["Globals","Class"]},{"location":"Game.html#setlastlevelwithouthalfhp","title":"Set\u00b7Last\u00b7Level\u00b7Without\u00b7Half\u00b7Hp ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-setlastlevelwithouthalfhp-levelstage-stage","title":"void SetLastLevelWithoutHalfHp ( LevelStage Stage )","text":"","tags":["Globals","Class"]},{"location":"Game.html#setstateflag","title":"Set\u00b7State\u00b7Flag ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-setstateflag-gamestateflag-gamestateflag-boolean-val","title":"void SetStateFlag ( GameStateFlag GameStateFlag, boolean Val )","text":"","tags":["Globals","Class"]},{"location":"Game.html#shakescreen","title":"Shake\u00b7Screen ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-shakescreen-int-timeout","title":"void ShakeScreen ( int Timeout )","text":"","tags":["Globals","Class"]},{"location":"Game.html#showfortune","title":"Show\u00b7Fortune ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-showfortune","title":"void ShowFortune ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#showhallucination","title":"Show\u00b7Hallucination ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-showhallucination-int-framecount-backdroptype-backdrop-backdroptypenum_backdrops","title":"void ShowHallucination ( int FrameCount, BackdropType Backdrop = BackdropType.NUM_BACKDROPS )","text":"<p>Plays the Delirium animation (Static noise intersected with past gameplay fotage), which will also change the background of the current room.</p> Workaround Code for AB+ mods <p>This function was broken in AB+, so there was this implementation in order to recreate the effect.</p> <p>This code emulated the effect of this function by hijacking the Delirious item effect</p> <pre><code>local usagetime = -1 -- stores the last time the effect was called.\n\n-- call this function to play the Hallucination effect\nfunction playHallucination()\n    local player = Isaac.GetPlayer()\n    usagetime = Game().TimeCounter\n    player:UseActiveItem(510, false, false, false, false) -- use the delirious item without applying the costume\n    player:GetEffects():RemoveCollectibleEffect(510) -- remove any unwanted side effects of the item usage\nend\n\n-- Removes all spawned NPC entities when activating the function\nfunction mod:onFriendlyInit(npc)\n    if Game().TimeCounter-usagetime == 0 then -- only remove enemies that spawned when the effect was called!\n        npc:Remove()\n    end\nend\nmod:AddCallback(ModCallbacks.MC_POST_NPC_INIT, mod.onFriendlyInit)\n</code></pre>","tags":["Globals","Class"]},{"location":"Game.html#showrule","title":"Show\u00b7Rule ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-showrule","title":"void ShowRule ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#spawn","title":"Spawn ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#entity-spawn-entitytype-type-int-variant-vector-position-vector-velocity-entity-spawner-int-subtype-int-seed","title":"Entity Spawn ( EntityType Type, int Variant, Vector Position, Vector Velocity, Entity Spawner, int SubType, int Seed )","text":"<p>The game has two spawn functions, Game():Spawn() (this one) and Isaac.Spawn(). If you need to spawn something with a specific seed, then you use Game():Spawn(). If you need to spawn something with a randomly generated seed, then use Isaac.Spawn(). Most of the time, you will probably want to use Isaac.Spawn().</p> Example Code <p>This code spawns a Leech with specific seed. <pre><code>Game():Spawn(\n  EntityType.ENTITY_LEECH, -- Type\n  0, -- Variant\n  Game():GetRoom():GetCenterPos(), -- Position\n  Vector(0, 0), -- Velocity\n  nil, -- Parent\n  0, -- SubType\n  Game():GetRoom():GetSpawnSeed() -- Seed (the \"GetSpawnSeed()\" function gets a reproducible seed based on the room, e.g. \"2496979501\")\n)\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Game.html#spawnentitydesc","title":"Spawn\u00b7Entity\u00b7Desc ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#entitynpc-spawnentitydesc-entitydesc-desc-vector-position-entity-spawner","title":"EntityNPC SpawnEntityDesc ( EntityDesc desc, Vector Position, Entity Spawner )","text":"","tags":["Globals","Class"]},{"location":"Game.html#spawnparticles","title":"Spawn\u00b7Particles ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-spawnparticles-vector-pos-effectvariant-particletype-int-numparticles-float-speed-color-color-colordefault-float-height-100000-int-subtype-0","title":"void SpawnParticles ( Vector Pos, EffectVariant ParticleType, int NumParticles, float Speed, Color Color = Color.Default, float Height = 100000, int SubType = 0 )","text":"","tags":["Globals","Class"]},{"location":"Game.html#startroomtransition","title":"Start\u00b7Room\u00b7Transition ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-startroomtransition-int-roomindex-direction-direction-roomtransitionanim-animation-roomtransitionanimwalk-entityplayer-player-nil-int-dimension-1","title":"void StartRoomTransition ( int RoomIndex, Direction Direction, RoomTransitionAnim Animation = RoomTransitionAnim.WALK, EntityPlayer Player = nil, int Dimension = -1 )","text":"<p>Note that if you use <code>RoomTransitionAnim.PIXELATION</code> (2), you must not interrupt the effect (e.g. with another room transition or room change) once it starts playing. Otherwise, after around 11 interuptions, the \"log.txt\" will start to become spammed with \"[ASSERT] - PushRenderTarget: stack overflow!\". This is because internally, the game uses a finite buffer to store information about the effect, and if it is interrupted, the buffer will never be cleared.</p> Dimension Info <p>Dimension: ID of the dimension to get the room from</p> <pre><code>* -1: Current dimension\n* 0: Main dimension\n* 1: Secondary dimension, used by Downpour mirror dimension and Mines escape sequence\n* 2: Death Certificate dimension\n</code></pre> Notes <p>The boss vs screen overrides all of these transitions, however, using RoomTransitionAnim.DEATH_CERTIFICATE will make it so the player appears lying down after the vs screen and the game will be paused while they get up.</p> Bugs <p>The Direction variable is completely ignored at all times, with the game instead calculating the direction between the two rooms itself for the animation. The two rooms are the current room and the room of the RoomIndex. It has no impact on the doors either.</p>","tags":["Globals","Class"]},{"location":"Game.html#startstagetransition","title":"Start\u00b7Stage\u00b7Transition ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-startstagetransition-boolean-samestage-stagetransitionanimation-animation-entityplayer-player","title":"void StartStageTransition ( boolean SameStage, StageTransition::Animation Animation, EntityPlayer Player )","text":"<p>Starts a transition animation, like the ones used when entering a trapdoor or light beam to reach the next stage.</p> <p>The value of Animation seemingly has no actual effect on the transition. (If you have more info, submit a pull request.)</p> Bug <p>Contrary to previous beliefs, this function will crash when not provided with an EntityPlayer. It is worth noting however, that the function, even when used correctly, is inconsistent and seems to sometimes crash for no reason.</p>","tags":["Globals","Class"]},{"location":"Game.html#update","title":"Update ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-update","title":"void Update ( )","text":"","tags":["Globals","Class"]},{"location":"Game.html#updatestrangeattractor","title":"Update\u00b7Strange\u00b7Attractor ()","text":"","tags":["Globals","Class"]},{"location":"Game.html#void-updatestrangeattractor-vector-position-float-force-10-float-radius-250","title":"void UpdateStrangeAttractor ( Vector Position, float Force = 10, float Radius = 250 )","text":"","tags":["Globals","Class"]},{"location":"Game.html#variables","title":"Variables","text":"","tags":["Globals","Class"]},{"location":"Game.html#bluewombpartime","title":"Blue\u00b7Womb\u00b7Par\u00b7Time","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-bluewombpartime","title":"int BlueWombParTime","text":"","tags":["Globals","Class"]},{"location":"Game.html#bossrushpartime","title":"Boss\u00b7Rush\u00b7Par\u00b7Time","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-bossrushpartime","title":"int BossRushParTime","text":"<p>Number of frames of game time.</p>","tags":["Globals","Class"]},{"location":"Game.html#challenge","title":"Challenge","text":"","tags":["Globals","Class"]},{"location":"Game.html#challenge-challenge","title":"Challenge Challenge","text":"","tags":["Globals","Class"]},{"location":"Game.html#difficulty","title":"Difficulty","text":"","tags":["Globals","Class"]},{"location":"Game.html#const-difficulty-difficulty","title":"const Difficulty Difficulty","text":"","tags":["Globals","Class"]},{"location":"Game.html#screenshakeoffset","title":"Screen\u00b7Shake\u00b7Offset","text":"","tags":["Globals","Class"]},{"location":"Game.html#const-vector-screenshakeoffset","title":"const Vector ScreenShakeOffset","text":"","tags":["Globals","Class"]},{"location":"Game.html#timecounter","title":"Time\u00b7Counter","text":"","tags":["Globals","Class"]},{"location":"Game.html#int-timecounter","title":"int TimeCounter","text":"<p>same as FrameCounter but can be modified, mostly used for timed events (bossrush, daily, ...) and not for timestepping</p>","tags":["Globals","Class"]},{"location":"GlobalFunctions.html","title":"Class \"Global Functions\"","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#constructors","title":"Constructors","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#bitset128","title":"BitSet128 ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#bitset128-bitset128-int-low-0-int-high-0","title":"BitSet128 BitSet128 ( int Low = 0, int High = 0 )","text":"<p>Constructor for the \"BitSet128\" class.</p> <p>BitSet128 is used as a storage system for flags and other bit-wise evaluated values that exceed the numeric limits of the default 64-bit integers which only allow for up to 64 flags to be defined. BitSet128 allows for up to 128 Flags by spliting the bitset into a \"lower\" and \"higher\" part. Those parts are represented by a simple 64bit integer number.</p>","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#color","title":"Color ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#color-color-float-r-float-g-float-b-float-a-1-float-ro-0-float-go-0-float-bo-0","title":"Color Color ( float R, float G, float B, float A = 1, float RO = 0, float GO = 0, float BO = 0 )","text":"<p>Constructor for the \"Color\" class.</p> <p>When using the Font class, use KColor() instead.</p> <p>Colors are made of three separate components, tint, colorize and offset. Tint acts like a color multiplicator. Offset is a color which is added after the tint is applied. Colorize is complicated. See the <code>SetColorize()</code> function for a detailed description.</p> <p>R, G, B, A, RO, GO and BO accept numbers between 0 and 1.</p>","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#entityptr","title":"Entity\u00b7Ptr ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#entityptr-entityptr-entity-entity","title":"EntityPtr EntityPtr ( Entity entity )","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#entityref","title":"Entity\u00b7Ref ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#entityref-entityref-entity-entity","title":"EntityRef EntityRef ( Entity entity )","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#font","title":"Font ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#font-font","title":"Font Font ( )","text":"<p>Constructor for the \"Font\" class.</p> Example Code <p>Example usage. <pre><code>local f = Font() -- init font object\nf:Load(\"font/terminus.fnt\") -- load a font into the font object\nf:DrawString(\"Hello World!\",60,50,KColor(1,1,1,1),0,true) -- render string with loaded font on position 60x50y\n</code></pre></p>","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#game","title":"Game ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#game-game","title":"Game Game ( )","text":"<p>Returns a Game object.</p> Example Code <p>Example usage: <pre><code>Game():IsPaused()\n--returns true if the game is paused\n</code></pre></p>","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#kcolor","title":"KColor ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#kcolor-kcolor-float-red-float-green-float-blue-float-alpha","title":"KColor KColor ( float red, float green, float blue, float alpha )","text":"<p>Constructor for the \"KColor\" class.</p> Notes <p>\"KColor\" is only used in the Font class. For most other situations you will need to use the Color() constructor.</p>","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#musicmanager","title":"Music\u00b7Manager ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#musicmanager-musicmanager","title":"MusicManager MusicManager ( )","text":"<p>Returns a MusicManager object.</p> Example Code <p>Example usage: <pre><code>MusicManager():Disable()\n</code></pre></p>","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#projectileparams","title":"Projectile\u00b7Params ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#projectileparams-projectileparams","title":"ProjectileParams ProjectileParams ( )","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#registermod","title":"Register\u00b7Mod ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#mod-reference-registermod-string-modname-int-apiversion","title":"Mod Reference RegisterMod ( string modName, int apiVersion )","text":"<p>Method to define a mod in the game. This needs to be defined to handle callbacks and save data in your mod.</p> <p>Returns a table which acts as the Mod Reference.</p> Example Code <pre><code>local yourMod = RegisterMod(\"someMod\", 1)\n</code></pre>","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#rng","title":"RNG ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#rng-rng","title":"RNG RNG ( )","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#sfxmanager","title":"SFXManager ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#sfxmanager-sfxmanager","title":"SFXManager SFXManager ( )","text":"<p>Returns a SFXManager object.</p> Example Code <p>Example usage: <pre><code>SFXManager():Stop(SoundEffect.SOUND_1UP)\n</code></pre></p>","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#sprite","title":"Sprite ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#sprite-sprite","title":"Sprite Sprite ( )","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#vector","title":"Vector ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#vector-vector-float-x-float-y","title":"Vector Vector ( float x, float y)","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#functions","title":"Functions","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#getptrhash","title":"Get\u00b7Ptr\u00b7Hash ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#int-getptrhash-object-object","title":"int GetPtrHash ( Object object )","text":"<p>Returns a hash-value of the pointer given as an input value. Valid inputs are any Isaac object, including <code>Entity</code>, <code>Room</code>, <code>RNG</code>, <code>Sprite</code>, <code>Game</code> etc.</p> <p>It can be used to easily compare two entities, making equality checks very easy.</p> <p>Example:</p> <p>If you spawn a certain entity, save it in a variable and then compare it to the <code>entity</code> parameter in <code>MC_ENTITY_TAKE_DMG</code>, this comparison will never be true even if both variables refer to the exact same entity in the game. <code>GetPtrHash()</code> turns pointer into a fixed number, which makes comparisons easier.</p> Example Code <p>Example on check if two entities saved in different variables are the same. <pre><code>-- don't do it like this\nif entity1 == entity2 then\n    -- this will always be false, because two different references on a pointer are not equal\nend\n-- use GetPtrHash() to compare them\nif GetPtrHash(entity1) == GetPtrHash(entity2) then\n    -- this will be true, when the pointer of both variables point to the same object.\nend\n</code></pre></p>","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#random","title":"Random ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#int-random","title":"int Random ( )","text":"<p>Returns a random integer between 0 and 2^32. It is tested to be inclusive on the lower end and exclusive on the higher end.</p> <p>Since this function can return 0, you cannot safely use it as the seed for an RNG object, since RNG objects with a seed of 0 crash the game. It is recommended to abstract away this failure case by using a helper function that arbitrarily sets the seed to 1 when the seed is 0.</p>","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#randomvector","title":"Random\u00b7Vector ()","text":"","tags":["Globals"],"boost":2},{"location":"GlobalFunctions.html#vector-randomvector","title":"Vector RandomVector ( )","text":"<p>Returns a random vector with length 1. Multiply this vector by a number for larger random vectors.</p>","tags":["Globals"],"boost":2},{"location":"Globals.html","title":"Globals","text":"<p>Global variables are variables that every mod has access to. In Isaac modding, the global environment is a mix of things provided by the Lua standard library and things provided by the Isaac API.</p>","tags":["Globals"],"boost":2},{"location":"Globals.html#getting-the-global-variables","title":"Getting the Global Variables","text":"<p>You can print out the current global variables with the following Lua code:</p> <pre><code>local function getSortedTableKeys(t)\n  local tableKeys = {}\n  for key, _ in pairs(t) do\n    table.insert(tableKeys, key)\n  end\n  table.sort(tableKeys)\n\n  return tableKeys\nend\n\nlocal function printSortedTableKeys(t)\n  local sortedTableKeys = getSortedTableKeys(t)\n  for _, key in ipairs(sortedTableKeys) do\n    Isaac.DebugString(tostring(key))\n  end\nend\n\nlocal function printAllGlobals()\n  Isaac.DebugString(\"All globals:\")\n  Isaac.DebugString(\"------------\")\n  printSortedTableKeys(_G)\nend\n\nprintAllGlobals()\n</code></pre> <p>Another option is to use Taz's Global Variable Menu mod.</p>","tags":["Globals"],"boost":2},{"location":"Globals.html#vanilla","title":"Vanilla","text":"<p>This is a list of every global variable that is available in the Lua environment, by default:</p> <ul> <li>ActionTriggers</li> <li>ActiveSlot</li> <li>BabySubType</li> <li>BackdropType</li> <li>BatterySubType</li> <li>BedSubType</li> <li>BitSet128</li> <li>BombSubType</li> <li>BombVariant</li> <li>ButtonAction</li> <li>CacheFlag</li> <li>Card</li> <li>Challenge</li> <li>ChampionColor</li> <li>ChestSubType</li> <li>CoinSubType</li> <li>CollectibleType</li> <li>Color</li> <li>CppContainer</li> <li>DamageFlag</li> <li>Difficulty</li> <li>Direction</li> <li>DoorSlot</li> <li>DoorState</li> <li>DoorVariant</li> <li>EffectVariant</li> <li>Entity</li> <li>EntityBomb</li> <li>EntityCollisionClass</li> <li>EntityEffect</li> <li>EntityFamiliar</li> <li>EntityFlag</li> <li>EntityGridCollisionClass</li> <li>EntityKnife</li> <li>EntityLaser</li> <li>EntityNPC</li> <li>EntityPartition</li> <li>EntityPickup</li> <li>EntityPlayer</li> <li>EntityProjectile</li> <li>EntityPtr</li> <li>EntityRef</li> <li>EntityTear</li> <li>EntityType</li> <li>FamiliarVariant</li> <li>Font</li> <li>Game</li> <li>GameStateFlag</li> <li>GetPtrHash</li> <li>GridCollisionClass</li> <li>GridEntity</li> <li>GridEntityDesc</li> <li>GridEntityDoor</li> <li>GridEntityPit</li> <li>GridEntityPoop</li> <li>GridEntityPressurePlate</li> <li>GridEntityRock</li> <li>GridEntitySpikes</li> <li>GridEntityTNT</li> <li>GridEntityType</li> <li>GridRooms</li> <li>HUD</li> <li>HeartSubType</li> <li>Input</li> <li>InputHook</li> <li>Isaac</li> <li>ItemConfig</li> <li>ItemPool</li> <li>ItemPoolType</li> <li>ItemType</li> <li>KColor</li> <li>KeySubType</li> <li>Keyboard</li> <li>LaserOffset</li> <li>LaserSubType</li> <li>Level</li> <li>LevelCurse</li> <li>LevelStage</li> <li>LevelStateFlag</li> <li>LocustSubtypes</li> <li>ModCallbacks</li> <li>Mouse</li> <li>Music</li> <li>MusicManager</li> <li>NpcState</li> <li>NullItemID</li> <li>Options</li> <li>PathFinder</li> <li>PickupPrice</li> <li>PickupVariant</li> <li>PillColor</li> <li>PillEffect</li> <li>PlayerForm</li> <li>PlayerSpriteLayer</li> <li>PlayerType</li> <li>PlayerTypes</li> <li>PoopPickupSubType</li> <li>PoopSpellType</li> <li>ProjectileFlags</li> <li>ProjectileParams</li> <li>ProjectileVariant</li> <li>QueueItemData</li> <li>REPENTANCE</li> <li>RNG</li> <li>Random</li> <li>RandomVector</li> <li>RegisterMod</li> <li>RenderMode</li> <li>Room</li> <li>RoomConfig</li> <li>RoomDescriptor</li> <li>RoomShape</li> <li>RoomTransitionAnim</li> <li>RoomType</li> <li>SFXManager</li> <li>SackSubType</li> <li>SeedEffect</li> <li>Seeds</li> <li>SkinColor</li> <li>SortingLayer</li> <li>SoundEffect</li> <li>Sprite</li> <li>StageType</li> <li>StartDebug</li> <li>TearFlags</li> <li>TearParams</li> <li>TearVariant</li> <li>TemporaryEffect</li> <li>TemporaryEffects</li> <li>TrinketType</li> <li>UseFlag</li> <li>Vector</li> <li>WeaponType</li> <li>_G</li> <li>_VERSION</li> <li>assert</li> <li>collectgarbage</li> <li>coroutine</li> <li>dofile</li> <li>error</li> <li>getmetatable</li> <li>include</li> <li>ipairs</li> <li>load</li> <li>math</li> <li>next</li> <li>pairs</li> <li>pcall</li> <li>print</li> <li>rawequal</li> <li>rawget</li> <li>rawlen</li> <li>rawset</li> <li>require</li> <li>select</li> <li>setmetatable</li> <li>string</li> <li>table</li> <li>tonumber</li> <li>tostring</li> <li>type</li> <li>utf8</li> <li>xpcall</li> </ul>","tags":["Globals"],"boost":2},{"location":"Globals.html#with-the-luadebug-flag","title":"With the \"--luadebug\" flag","text":"<p>Having the \"--luadebug\" flag turned on changes the default global variables slightly.</p> <p>The following global variables are added:</p> <ul> <li>debug</li> <li>io</li> <li>loadfile</li> <li>os</li> <li>package</li> </ul>","tags":["Globals"],"boost":2},{"location":"Globals.html#mods","title":"Mods","text":"<p>Mods can also add extra global variables to the environment. You can find out which variables are provided by mods by cross-referencing the current global variables to the previous list.</p>","tags":["Globals"],"boost":2},{"location":"GridEntity.html","title":"Class \"GridEntity\"","text":"","tags":["Class"]},{"location":"GridEntity.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class GridEntity:::diagramCurrentPage\n    class GridEntityDoor\n    class GridEntityPit\n    class GridEntityPoop\n    class GridEntityPressurePlate\n    class GridEntityRock\n    class GridEntitySpikes\n    class GridEntityTNT\n    GridEntity &lt;|-- GridEntityDoor\n    GridEntity &lt;|-- GridEntityPit\n    GridEntity &lt;|-- GridEntityPoop\n    GridEntity &lt;|-- GridEntityPressurePlate\n    GridEntity &lt;|-- GridEntityRock\n    GridEntity &lt;|-- GridEntitySpikes\n    GridEntity &lt;|-- GridEntityTNT\n    link GridEntity \"GridEntity.html\" \"Go to page for 'GridEntity' class\"\n    link GridEntityDoor \"GridEntityDoor.html\" \"Go to page for 'GridEntityDoor' class\"\n    link GridEntityPit \"GridEntityPit.html\" \"Go to page for 'GridEntityPit' class\"\n    link GridEntityPoop \"GridEntityPoop.html\" \"Go to page for 'GridEntityPoop' class\"\n    link GridEntityPressurePlate \"GridEntityPressurePlate.html\" \"Go to page for 'GridEntityPressurePlate' class\"\n    link GridEntityRock \"GridEntityRock.html\" \"Go to page for 'GridEntityRock' class\"\n    link GridEntitySpikes \"GridEntitySpikes.html\" \"Go to page for 'GridEntitySpikes' class\"\n    link GridEntityTNT \"GridEntityTNT.html\" \"Go to page for 'GridEntityTNT' class\"</code></pre>","tags":["Class"]},{"location":"GridEntity.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"GridEntity.html#destroy","title":"Destroy ()","text":"","tags":["Class"]},{"location":"GridEntity.html#boolean-destroy-boolean-immediate","title":"boolean Destroy ( boolean Immediate )","text":"","tags":["Class"]},{"location":"GridEntity.html#getgridindex","title":"Get\u00b7Grid\u00b7Index ()","text":"","tags":["Class"]},{"location":"GridEntity.html#int-getgridindex","title":"int GetGridIndex ( )","text":"","tags":["Class"]},{"location":"GridEntity.html#getrng","title":"Get\u00b7RNG ()","text":"","tags":["Class"]},{"location":"GridEntity.html#rng-getrng","title":"RNG GetRNG ( )","text":"","tags":["Class"]},{"location":"GridEntity.html#getsavestate","title":"Get\u00b7Save\u00b7State ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitydesc-getsavestate","title":"GridEntityDesc GetSaveState ( )","text":"Info <p>Both the Desc property and the GetSaveState() method return the exact same GridEntityDesc object. The game devs advise to use GetSaveState() instead of Desc.</p>","tags":["Class"]},{"location":"GridEntity.html#getsprite","title":"Get\u00b7Sprite ()","text":"","tags":["Class"]},{"location":"GridEntity.html#sprite-getsprite","title":"Sprite GetSprite ( )","text":"","tags":["Class"]},{"location":"GridEntity.html#gettype","title":"Get\u00b7Type ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitytype-gettype","title":"GridEntityType GetType ( )","text":"","tags":["Class"]},{"location":"GridEntity.html#getvariant","title":"Get\u00b7Variant ()","text":"","tags":["Class"]},{"location":"GridEntity.html#int-getvariant","title":"int GetVariant ( )","text":"","tags":["Class"]},{"location":"GridEntity.html#hurt","title":"Hurt ()","text":"","tags":["Class"]},{"location":"GridEntity.html#boolean-hurt-int-damage","title":"boolean Hurt ( int Damage )","text":"","tags":["Class"]},{"location":"GridEntity.html#init","title":"Init ()","text":"","tags":["Class"]},{"location":"GridEntity.html#void-init-int-seed","title":"void Init ( int Seed )","text":"","tags":["Class"]},{"location":"GridEntity.html#postinit","title":"Post\u00b7Init ()","text":"","tags":["Class"]},{"location":"GridEntity.html#void-postinit","title":"void PostInit ( )","text":"","tags":["Class"]},{"location":"GridEntity.html#render","title":"Render ()","text":"","tags":["Class"]},{"location":"GridEntity.html#void-render-vector-offset","title":"void Render ( Vector Offset )","text":"","tags":["Class"]},{"location":"GridEntity.html#settype","title":"Set\u00b7Type ()","text":"","tags":["Class"]},{"location":"GridEntity.html#void-settype-gridentitytype-type","title":"void SetType ( GridEntityType Type )","text":"","tags":["Class"]},{"location":"GridEntity.html#setvariant","title":"Set\u00b7Variant ()","text":"","tags":["Class"]},{"location":"GridEntity.html#void-setvariant-int-variant","title":"void SetVariant ( int Variant )","text":"","tags":["Class"]},{"location":"GridEntity.html#todoor","title":"To\u00b7Door ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitydoor-todoor","title":"GridEntityDoor ToDoor ( )","text":"Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#topit","title":"To\u00b7Pit ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitypit-topit","title":"GridEntityPit ToPit ( )","text":"Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#topoop","title":"To\u00b7Poop ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitypoop-topoop","title":"GridEntityPoop ToPoop ( )","text":"Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#topressureplate","title":"To\u00b7Pressure\u00b7Plate ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitypressureplate-topressureplate","title":"GridEntityPressurePlate ToPressurePlate ( )","text":"Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#torock","title":"To\u00b7Rock ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentityrock-torock","title":"GridEntityRock ToRock ( )","text":"Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#tospikes","title":"To\u00b7Spikes ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentityspikes-tospikes","title":"GridEntitySpikes ToSpikes ( )","text":"Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#totnt","title":"To\u00b7TNT ()","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitytnt-totnt","title":"GridEntityTNT ToTNT ( )","text":"Return behavior <p>If the conversion is not successful, this function returns <code>nil</code>.</p>","tags":["Class"]},{"location":"GridEntity.html#update","title":"Update ()","text":"","tags":["Class"]},{"location":"GridEntity.html#void-update","title":"void Update ( )","text":"","tags":["Class"]},{"location":"GridEntity.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"GridEntity.html#collisionclass","title":"Collision\u00b7Class","text":"","tags":["Class"]},{"location":"GridEntity.html#gridcollisionclass-collisionclass","title":"GridCollisionClass CollisionClass","text":"","tags":["Class"]},{"location":"GridEntity.html#desc","title":"Desc","text":"","tags":["Class"]},{"location":"GridEntity.html#gridentitydesc-desc","title":"GridEntityDesc Desc","text":"Info <p>Both the Desc property and the GetSaveState() method return the exact same GridEntityDesc object. The game devs advise to use GetSaveState() instead of Desc.</p>","tags":["Class"]},{"location":"GridEntity.html#position","title":"Position","text":"","tags":["Class"]},{"location":"GridEntity.html#const-vector-position","title":"const Vector Position","text":"<p>Returns the position of the grid cell's center point</p>","tags":["Class"]},{"location":"GridEntity.html#state","title":"State","text":"","tags":["Class"]},{"location":"GridEntity.html#int-state","title":"int State","text":"<p>Used for various different usecases.</p> Example States <pre><code>Rocks with state = 2 are destroyed rocks (The rubble is the rock basically)\n</code></pre>","tags":["Class"]},{"location":"GridEntity.html#vardata","title":"Var\u00b7Data","text":"","tags":["Class"]},{"location":"GridEntity.html#int-vardata","title":"int VarData","text":"<p>A Variable that stores some entity-specific data. The content can have completely different effects for different GridEntities.</p> Example Code <p>This code spawns a functioning Void Portal into the center of the room. This will teleport you to the floor \"The Void\" and will have the same appearance as the vanilla portal: <pre><code>-- From: https://github.com/IsaacScript/isaac-typescript-definitions/blob/main/typings/unofficial/enumsGridEntityVariants.d.ts\nlocal TrapdoorVariant = {\n  NORMAL = 0,\n  VOID_PORTAL = 1,\n}\n\nlocal game = Game();\nlocal room = game:GetRoom()\nlocal centerPos = room:GetCenterPos()\n\n-- By default, this will spawn a normal trapdoor, even though we specify the Void Portal variant\nlocal voidPortal = Isaac.GridSpawn(GridEntityType.GRID_TRAPDOOR, TrapdoorVariant.VOID_PORTAL, centerPos, true)\n\n-- Set the destination to The Void and apply the pulse effect shader\nvoidPortal.VarData = 1\n\n-- Replace the spritesheet to make it look like a Void Portal\nlocal sprite = portalEntity:GetSprite()\nsprite:Load(\"gfx/grid/voidtrapdoor.anm2\", true)\n</code></pre></p>","tags":["Class"]},{"location":"GridEntityDesc.html","title":"Class \"GridEntityDesc\"","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#initialized","title":"Initialized","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#boolean-initialized","title":"boolean Initialized","text":"<p>this is will be false when its first created</p>","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#spawncount","title":"Spawn\u00b7Count","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#int-spawncount","title":"int SpawnCount","text":"<p>how often this entity has been spawned</p>","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#spawnseed","title":"Spawn\u00b7Seed","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#int-spawnseed","title":"int SpawnSeed","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#state","title":"State","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#int-state","title":"int State","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#type","title":"Type","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#gridentitytype-type","title":"GridEntityType Type","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#vardata","title":"Var\u00b7Data","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#int-vardata","title":"int VarData","text":"<p>Additional data to be stored, when State is not enought.</p>","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#variableseed","title":"Variable\u00b7Seed","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#int-variableseed","title":"int VariableSeed","text":"<p>this seed is will be changed based on some events</p>","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#variant","title":"Variant","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDesc.html#int-variant","title":"int Variant","text":"","tags":["Class"],"boost":0.25},{"location":"GridEntityDoor.html","title":"Class \"GridEntityDoor\"","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class GridEntity:::diagramCurrentPage\n    class GridEntityDoor\n    class GridEntityPit\n    class GridEntityPoop\n    class GridEntityPressurePlate\n    class GridEntityRock\n    class GridEntitySpikes\n    class GridEntityTNT\n    GridEntity &lt;|-- GridEntityDoor\n    GridEntity &lt;|-- GridEntityPit\n    GridEntity &lt;|-- GridEntityPoop\n    GridEntity &lt;|-- GridEntityPressurePlate\n    GridEntity &lt;|-- GridEntityRock\n    GridEntity &lt;|-- GridEntitySpikes\n    GridEntity &lt;|-- GridEntityTNT\n    link GridEntity \"GridEntity.html\" \"Go to page for 'GridEntity' class\"\n    link GridEntityDoor \"GridEntityDoor.html\" \"Go to page for 'GridEntityDoor' class\"\n    link GridEntityPit \"GridEntityPit.html\" \"Go to page for 'GridEntityPit' class\"\n    link GridEntityPoop \"GridEntityPoop.html\" \"Go to page for 'GridEntityPoop' class\"\n    link GridEntityPressurePlate \"GridEntityPressurePlate.html\" \"Go to page for 'GridEntityPressurePlate' class\"\n    link GridEntityRock \"GridEntityRock.html\" \"Go to page for 'GridEntityRock' class\"\n    link GridEntitySpikes \"GridEntitySpikes.html\" \"Go to page for 'GridEntitySpikes' class\"\n    link GridEntityTNT \"GridEntityTNT.html\" \"Go to page for 'GridEntityTNT' class\"</code></pre>","tags":["Class"]},{"location":"GridEntityDoor.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#bar","title":"Bar ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#void-bar","title":"void Bar ( )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#canblowopen","title":"Can\u00b7Blow\u00b7Open ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#boolean-canblowopen","title":"boolean CanBlowOpen ( )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#close","title":"Close ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#void-close-boolean-force","title":"void Close ( boolean Force )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#getspriteoffset","title":"Get\u00b7Sprite\u00b7Offset ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#const-vector-getspriteoffset","title":"const Vector GetSpriteOffset ( )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#isbusted","title":"Is\u00b7Busted ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#boolean-isbusted","title":"boolean IsBusted ( )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#iskeyfamiliartarget","title":"Is\u00b7Key\u00b7Familiar\u00b7Target ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#boolean-iskeyfamiliartarget","title":"boolean IsKeyFamiliarTarget ( )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#islocked","title":"Is\u00b7Locked ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#boolean-islocked","title":"boolean IsLocked ( )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#isopen","title":"Is\u00b7Open ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#boolean-isopen","title":"boolean IsOpen ( )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#isroomtype","title":"Is\u00b7Room\u00b7Type ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#boolean-isroomtype-roomtype-type","title":"boolean IsRoomType ( RoomType Type )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#istargetroomarcade","title":"Is\u00b7Target\u00b7Room\u00b7Arcade ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#boolean-istargetroomarcade","title":"boolean IsTargetRoomArcade ( )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#open","title":"Open ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#void-open","title":"void Open ( )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#setlocked","title":"Set\u00b7Locked ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#void-setlocked-boolean-locked","title":"void SetLocked ( boolean Locked )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#setroomtypes","title":"Set\u00b7Room\u00b7Types ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#void-setroomtypes-roomtype-currentroomtype-roomtype-targetroomtype","title":"void SetRoomTypes ( RoomType CurrentRoomType, RoomType TargetRoomType )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#spawndust","title":"Spawn\u00b7Dust ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#void-spawndust","title":"void SpawnDust ( )","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#tryblowopen","title":"Try\u00b7Blow\u00b7Open ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#boolean-tryblowopen-boolean-fromexplosion-entity-source","title":"boolean TryBlowOpen ( boolean FromExplosion, Entity source )","text":"<p>try to open the door by explosive force, true for success</p>","tags":["Class"]},{"location":"GridEntityDoor.html#tryunlock","title":"Try\u00b7Unlock ()","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#boolean-tryunlock-entityplayer-player-boolean-force","title":"boolean TryUnlock (EntityPlayer player, boolean Force )","text":"<p>try to unlock the door using a key, true for success</p>","tags":["Class"]},{"location":"GridEntityDoor.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#busted","title":"Busted","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#boolean-busted","title":"boolean Busted","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#closeanimation","title":"Close\u00b7Animation","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#string-closeanimation","title":"string CloseAnimation","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#currentroomtype","title":"Current\u00b7Room\u00b7Type","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#roomtype-currentroomtype","title":"RoomType CurrentRoomType","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#direction","title":"Direction","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#direction-direction","title":"Direction Direction","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#extrasprite","title":"Extra\u00b7Sprite","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#sprite-extrasprite","title":"Sprite ExtraSprite","text":"<p>Additional sprite used for the door. Examples for extra sprites are: bars, chains, wooden boards, etc.</p>","tags":["Class"]},{"location":"GridEntityDoor.html#extravisible","title":"Extra\u00b7Visible","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#boolean-extravisible","title":"boolean ExtraVisible","text":"<p>Toggles the visibility of the extra sprite. Examples for extra sprites are: bars, chains, wooden boards, etc.</p>","tags":["Class"]},{"location":"GridEntityDoor.html#lockedanimation","title":"Locked\u00b7Animation","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#string-lockedanimation","title":"string LockedAnimation","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#openanimation","title":"Open\u00b7Animation","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#string-openanimation","title":"string OpenAnimation","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#openlockedanimation","title":"Open\u00b7Locked\u00b7Animation","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#string-openlockedanimation","title":"string OpenLockedAnimation","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#previousstate","title":"Previous\u00b7State","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#int-previousstate","title":"int PreviousState","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#previousvariant","title":"Previous\u00b7Variant","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#int-previousvariant","title":"int PreviousVariant","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#slot","title":"Slot","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#doorslot-slot","title":"DoorSlot Slot","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#targetroomindex","title":"Target\u00b7Room\u00b7Index","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#int-targetroomindex","title":"int TargetRoomIndex","text":"<p>Note: this value only affects the room transition animation and does not actually change the target room.</p>","tags":["Class"]},{"location":"GridEntityDoor.html#targetroomtype","title":"Target\u00b7Room\u00b7Type","text":"","tags":["Class"]},{"location":"GridEntityDoor.html#roomtype-targetroomtype","title":"RoomType TargetRoomType","text":"","tags":["Class"]},{"location":"GridEntityPit.html","title":"Class \"GridEntityPit\"","text":"","tags":["Class"]},{"location":"GridEntityPit.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class GridEntity:::diagramCurrentPage\n    class GridEntityDoor\n    class GridEntityPit\n    class GridEntityPoop\n    class GridEntityPressurePlate\n    class GridEntityRock\n    class GridEntitySpikes\n    class GridEntityTNT\n    GridEntity &lt;|-- GridEntityDoor\n    GridEntity &lt;|-- GridEntityPit\n    GridEntity &lt;|-- GridEntityPoop\n    GridEntity &lt;|-- GridEntityPressurePlate\n    GridEntity &lt;|-- GridEntityRock\n    GridEntity &lt;|-- GridEntitySpikes\n    GridEntity &lt;|-- GridEntityTNT\n    link GridEntity \"GridEntity.html\" \"Go to page for 'GridEntity' class\"\n    link GridEntityDoor \"GridEntityDoor.html\" \"Go to page for 'GridEntityDoor' class\"\n    link GridEntityPit \"GridEntityPit.html\" \"Go to page for 'GridEntityPit' class\"\n    link GridEntityPoop \"GridEntityPoop.html\" \"Go to page for 'GridEntityPoop' class\"\n    link GridEntityPressurePlate \"GridEntityPressurePlate.html\" \"Go to page for 'GridEntityPressurePlate' class\"\n    link GridEntityRock \"GridEntityRock.html\" \"Go to page for 'GridEntityRock' class\"\n    link GridEntitySpikes \"GridEntitySpikes.html\" \"Go to page for 'GridEntitySpikes' class\"\n    link GridEntityTNT \"GridEntityTNT.html\" \"Go to page for 'GridEntityTNT' class\"</code></pre>","tags":["Class"]},{"location":"GridEntityPit.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"GridEntityPit.html#makebridge","title":"Make\u00b7Bridge ()","text":"","tags":["Class"]},{"location":"GridEntityPit.html#void-makebridge-gridentity-parententity","title":"void MakeBridge ( GridEntity parentEntity)","text":"<p>parentEntity can be <code>nil</code> to use the default texture as the bridge</p>","tags":["Class"]},{"location":"GridEntityPit.html#setladder","title":"Set\u00b7Ladder ()","text":"","tags":["Class"]},{"location":"GridEntityPit.html#void-setladder-boolean-value","title":"void SetLadder ( boolean Value )","text":"","tags":["Class"]},{"location":"GridEntityPit.html#updatecollision","title":"Update\u00b7Collision ()","text":"","tags":["Class"]},{"location":"GridEntityPit.html#void-updatecollision","title":"void UpdateCollision ( )","text":"","tags":["Class"]},{"location":"GridEntityPit.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"GridEntityPit.html#hasladder","title":"Has\u00b7Ladder","text":"","tags":["Class"]},{"location":"GridEntityPit.html#boolean-hasladder","title":"boolean HasLadder","text":"","tags":["Class"]},{"location":"GridEntityPoop.html","title":"Class \"GridEntityPoop\"","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class GridEntity:::diagramCurrentPage\n    class GridEntityDoor\n    class GridEntityPit\n    class GridEntityPoop\n    class GridEntityPressurePlate\n    class GridEntityRock\n    class GridEntitySpikes\n    class GridEntityTNT\n    GridEntity &lt;|-- GridEntityDoor\n    GridEntity &lt;|-- GridEntityPit\n    GridEntity &lt;|-- GridEntityPoop\n    GridEntity &lt;|-- GridEntityPressurePlate\n    GridEntity &lt;|-- GridEntityRock\n    GridEntity &lt;|-- GridEntitySpikes\n    GridEntity &lt;|-- GridEntityTNT\n    link GridEntity \"GridEntity.html\" \"Go to page for 'GridEntity' class\"\n    link GridEntityDoor \"GridEntityDoor.html\" \"Go to page for 'GridEntityDoor' class\"\n    link GridEntityPit \"GridEntityPit.html\" \"Go to page for 'GridEntityPit' class\"\n    link GridEntityPoop \"GridEntityPoop.html\" \"Go to page for 'GridEntityPoop' class\"\n    link GridEntityPressurePlate \"GridEntityPressurePlate.html\" \"Go to page for 'GridEntityPressurePlate' class\"\n    link GridEntityRock \"GridEntityRock.html\" \"Go to page for 'GridEntityRock' class\"\n    link GridEntitySpikes \"GridEntitySpikes.html\" \"Go to page for 'GridEntitySpikes' class\"\n    link GridEntityTNT \"GridEntityTNT.html\" \"Go to page for 'GridEntityTNT' class\"</code></pre>","tags":["Class"]},{"location":"GridEntityPoop.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#reducespawnrate","title":"Reduce\u00b7Spawn\u00b7Rate ()","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#void-reducespawnrate","title":"void ReduceSpawnRate ( )","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#respawnredpoop","title":"Respawn\u00b7Red\u00b7Poop ()","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#void-respawnredpoop","title":"void RespawnRedPoop ( )","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#reducedspawnrate","title":"Reduced\u00b7Spawn\u00b7Rate","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#boolean-reducedspawnrate","title":"boolean ReducedSpawnRate","text":"<p>This attribute got removed with Repentance.</p>","tags":["Class"]},{"location":"GridEntityPoop.html#revivetimer","title":"Revive\u00b7Timer","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#int-revivetimer","title":"int ReviveTimer","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#stateanimation","title":"State\u00b7Animation","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#string-stateanimation","title":"string StateAnimation","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#underplayer","title":"Under\u00b7Player","text":"","tags":["Class"]},{"location":"GridEntityPoop.html#boolean-underplayer","title":"boolean UnderPlayer","text":"<p>Used to determine when player moves away from the poop.</p>","tags":["Class"]},{"location":"GridEntityPressurePlate.html","title":"Class \"GridEntityPressurePlate\"","text":"","tags":["Class"]},{"location":"GridEntityPressurePlate.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class GridEntity:::diagramCurrentPage\n    class GridEntityDoor\n    class GridEntityPit\n    class GridEntityPoop\n    class GridEntityPressurePlate\n    class GridEntityRock\n    class GridEntitySpikes\n    class GridEntityTNT\n    GridEntity &lt;|-- GridEntityDoor\n    GridEntity &lt;|-- GridEntityPit\n    GridEntity &lt;|-- GridEntityPoop\n    GridEntity &lt;|-- GridEntityPressurePlate\n    GridEntity &lt;|-- GridEntityRock\n    GridEntity &lt;|-- GridEntitySpikes\n    GridEntity &lt;|-- GridEntityTNT\n    link GridEntity \"GridEntity.html\" \"Go to page for 'GridEntity' class\"\n    link GridEntityDoor \"GridEntityDoor.html\" \"Go to page for 'GridEntityDoor' class\"\n    link GridEntityPit \"GridEntityPit.html\" \"Go to page for 'GridEntityPit' class\"\n    link GridEntityPoop \"GridEntityPoop.html\" \"Go to page for 'GridEntityPoop' class\"\n    link GridEntityPressurePlate \"GridEntityPressurePlate.html\" \"Go to page for 'GridEntityPressurePlate' class\"\n    link GridEntityRock \"GridEntityRock.html\" \"Go to page for 'GridEntityRock' class\"\n    link GridEntitySpikes \"GridEntitySpikes.html\" \"Go to page for 'GridEntitySpikes' class\"\n    link GridEntityTNT \"GridEntityTNT.html\" \"Go to page for 'GridEntityTNT' class\"</code></pre>","tags":["Class"]},{"location":"GridEntityPressurePlate.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"GridEntityPressurePlate.html#reward","title":"Reward ()","text":"","tags":["Class"]},{"location":"GridEntityPressurePlate.html#void-reward","title":"void Reward ( )","text":"<p>Triggers the spawning of the reward as if the plate would be pressed, without actually pressing it.</p> Greed mode behavior <p>When in greedmode and used on the Greedmode-pressureplate, it has multiple effects:</p> <p>When no wave is active, it will spawn a random reward analog to the normal pressure plate pool.</p> <p>When a wave is active, it will spawn a wave, wihtout increasing the wave counter.</p>","tags":["Class"]},{"location":"GridEntityPressurePlate.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"GridEntityPressurePlate.html#greedmoderng","title":"Greed\u00b7Mode\u00b7RNG","text":"","tags":["Class"]},{"location":"GridEntityPressurePlate.html#rng-greedmoderng","title":"RNG GreedModeRNG","text":"<p>RNG object that determines the RNG of anything GreedMode related.</p>","tags":["Class"]},{"location":"GridEntityPressurePlate.html#nextgreedanimation","title":"Next\u00b7Greed\u00b7Animation","text":"","tags":["Class"]},{"location":"GridEntityPressurePlate.html#string-nextgreedanimation","title":"string NextGreedAnimation","text":"<p>Defines the animation that the greed-mode pressureplate should play. This effect is only visual!</p> <p>Every Animation defined in the \"grid_pressureplate.anm2\" file can be used as an input. Any other input will crash the game!</p>","tags":["Class"]},{"location":"GridEntityPressurePlate.html#timerplate","title":"Timer\u00b7Plate","text":"","tags":["Class"]},{"location":"GridEntityPressurePlate.html#sprite-timerplate","title":"Sprite TimerPlate","text":"<p>Reference to the Sprite of the Timerplate beneath the pressureplate in Greed mode.</p>","tags":["Class"]},{"location":"GridEntityRock.html","title":"Class \"GridEntityRock\"","text":"","tags":["Class"]},{"location":"GridEntityRock.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class GridEntity:::diagramCurrentPage\n    class GridEntityDoor\n    class GridEntityPit\n    class GridEntityPoop\n    class GridEntityPressurePlate\n    class GridEntityRock\n    class GridEntitySpikes\n    class GridEntityTNT\n    GridEntity &lt;|-- GridEntityDoor\n    GridEntity &lt;|-- GridEntityPit\n    GridEntity &lt;|-- GridEntityPoop\n    GridEntity &lt;|-- GridEntityPressurePlate\n    GridEntity &lt;|-- GridEntityRock\n    GridEntity &lt;|-- GridEntitySpikes\n    GridEntity &lt;|-- GridEntityTNT\n    link GridEntity \"GridEntity.html\" \"Go to page for 'GridEntity' class\"\n    link GridEntityDoor \"GridEntityDoor.html\" \"Go to page for 'GridEntityDoor' class\"\n    link GridEntityPit \"GridEntityPit.html\" \"Go to page for 'GridEntityPit' class\"\n    link GridEntityPoop \"GridEntityPoop.html\" \"Go to page for 'GridEntityPoop' class\"\n    link GridEntityPressurePlate \"GridEntityPressurePlate.html\" \"Go to page for 'GridEntityPressurePlate' class\"\n    link GridEntityRock \"GridEntityRock.html\" \"Go to page for 'GridEntityRock' class\"\n    link GridEntitySpikes \"GridEntitySpikes.html\" \"Go to page for 'GridEntitySpikes' class\"\n    link GridEntityTNT \"GridEntityTNT.html\" \"Go to page for 'GridEntityTNT' class\"</code></pre>","tags":["Class"]},{"location":"GridEntityRock.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"GridEntityRock.html#getbigrockframe","title":"Get\u00b7Big\u00b7Rock\u00b7Frame ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#int-getbigrockframe","title":"int GetBigRockFrame ( )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#getrubbleanim","title":"Get\u00b7Rubble\u00b7Anim ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#string-getrubbleanim","title":"string GetRubbleAnim ( )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#getsprite","title":"Get\u00b7Sprite ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#const-sprite-getsprite","title":"const Sprite GetSprite ( )","text":"<p>Same as the Repentance exclusive function GetSprite().</p>","tags":["Class"]},{"location":"GridEntityRock.html#setbigrockframe","title":"Set\u00b7Big\u00b7Rock\u00b7Frame ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#void-setbigrockframe-int-frame","title":"void SetBigRockFrame ( int Frame )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#updateanimframe","title":"Update\u00b7Anim\u00b7Frame ()","text":"","tags":["Class"]},{"location":"GridEntityRock.html#void-updateanimframe","title":"void UpdateAnimFrame ( )","text":"","tags":["Class"]},{"location":"GridEntityRock.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"GridEntityRock.html#anim","title":"Anim","text":"","tags":["Class"]},{"location":"GridEntityRock.html#string-anim","title":"string Anim","text":"","tags":["Class"]},{"location":"GridEntityRock.html#framecnt","title":"Frame\u00b7Cnt","text":"","tags":["Class"]},{"location":"GridEntityRock.html#int-framecnt","title":"int FrameCnt","text":"","tags":["Class"]},{"location":"GridEntityRock.html#rubbleanim","title":"Rubble\u00b7Anim","text":"","tags":["Class"]},{"location":"GridEntityRock.html#string-rubbleanim","title":"string RubbleAnim","text":"","tags":["Class"]},{"location":"GridEntitySpikes.html","title":"Class \"GridEntitySpikes\"","text":"","tags":["Class"]},{"location":"GridEntitySpikes.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class GridEntity:::diagramCurrentPage\n    class GridEntityDoor\n    class GridEntityPit\n    class GridEntityPoop\n    class GridEntityPressurePlate\n    class GridEntityRock\n    class GridEntitySpikes\n    class GridEntityTNT\n    GridEntity &lt;|-- GridEntityDoor\n    GridEntity &lt;|-- GridEntityPit\n    GridEntity &lt;|-- GridEntityPoop\n    GridEntity &lt;|-- GridEntityPressurePlate\n    GridEntity &lt;|-- GridEntityRock\n    GridEntity &lt;|-- GridEntitySpikes\n    GridEntity &lt;|-- GridEntityTNT\n    link GridEntity \"GridEntity.html\" \"Go to page for 'GridEntity' class\"\n    link GridEntityDoor \"GridEntityDoor.html\" \"Go to page for 'GridEntityDoor' class\"\n    link GridEntityPit \"GridEntityPit.html\" \"Go to page for 'GridEntityPit' class\"\n    link GridEntityPoop \"GridEntityPoop.html\" \"Go to page for 'GridEntityPoop' class\"\n    link GridEntityPressurePlate \"GridEntityPressurePlate.html\" \"Go to page for 'GridEntityPressurePlate' class\"\n    link GridEntityRock \"GridEntityRock.html\" \"Go to page for 'GridEntityRock' class\"\n    link GridEntitySpikes \"GridEntitySpikes.html\" \"Go to page for 'GridEntitySpikes' class\"\n    link GridEntityTNT \"GridEntityTNT.html\" \"Go to page for 'GridEntityTNT' class\"</code></pre>","tags":["Class"]},{"location":"GridEntitySpikes.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"GridEntitySpikes.html#timeout","title":"Timeout","text":"","tags":["Class"]},{"location":"GridEntitySpikes.html#int-timeout","title":"int Timeout","text":"","tags":["Class"]},{"location":"GridEntityTNT.html","title":"Class \"GridEntityTNT\"","text":"","tags":["Class"]},{"location":"GridEntityTNT.html#class-diagram","title":"Class Diagram","text":"<pre><code>    classDiagram\n    class GridEntity:::diagramCurrentPage\n    class GridEntityDoor\n    class GridEntityPit\n    class GridEntityPoop\n    class GridEntityPressurePlate\n    class GridEntityRock\n    class GridEntitySpikes\n    class GridEntityTNT\n    GridEntity &lt;|-- GridEntityDoor\n    GridEntity &lt;|-- GridEntityPit\n    GridEntity &lt;|-- GridEntityPoop\n    GridEntity &lt;|-- GridEntityPressurePlate\n    GridEntity &lt;|-- GridEntityRock\n    GridEntity &lt;|-- GridEntitySpikes\n    GridEntity &lt;|-- GridEntityTNT\n    link GridEntity \"GridEntity.html\" \"Go to page for 'GridEntity' class\"\n    link GridEntityDoor \"GridEntityDoor.html\" \"Go to page for 'GridEntityDoor' class\"\n    link GridEntityPit \"GridEntityPit.html\" \"Go to page for 'GridEntityPit' class\"\n    link GridEntityPoop \"GridEntityPoop.html\" \"Go to page for 'GridEntityPoop' class\"\n    link GridEntityPressurePlate \"GridEntityPressurePlate.html\" \"Go to page for 'GridEntityPressurePlate' class\"\n    link GridEntityRock \"GridEntityRock.html\" \"Go to page for 'GridEntityRock' class\"\n    link GridEntitySpikes \"GridEntitySpikes.html\" \"Go to page for 'GridEntitySpikes' class\"\n    link GridEntityTNT \"GridEntityTNT.html\" \"Go to page for 'GridEntityTNT' class\"</code></pre>","tags":["Class"]},{"location":"GridEntityTNT.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"GridEntityTNT.html#framecnt","title":"Frame\u00b7Cnt","text":"","tags":["Class"]},{"location":"GridEntityTNT.html#int-framecnt","title":"int FrameCnt","text":"","tags":["Class"]},{"location":"HUD.html","title":"Class \"HUD\"","text":"","tags":["Class"]},{"location":"HUD.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"HUD.html#assignplayerhuds","title":"Assign\u00b7Player\u00b7HUDs ()","text":"","tags":["Class"]},{"location":"HUD.html#void-assignplayerhuds","title":"void AssignPlayerHUDs ( )","text":"<p>Refreshes the HUD (e.g. Characters that have Parent specified no longer show their health in the main HUD).</p>","tags":["Class"]},{"location":"HUD.html#flashchargebar","title":"Flash\u00b7Charge\u00b7Bar ()","text":"","tags":["Class"]},{"location":"HUD.html#void-flashchargebar-entityplayer-player-activeslot-activeslot","title":"void FlashChargeBar ( EntityPlayer Player, ActiveSlot ActiveSlot )","text":"<p>Causes the charge bar of the active item in the specified slot to blink as if it had gained charges</p>","tags":["Class"]},{"location":"HUD.html#invalidateactiveitem","title":"Invalidate\u00b7Active\u00b7Item ()","text":"","tags":["Class"]},{"location":"HUD.html#void-invalidateactiveitem-entityplayer-player-activeslot-activeslot","title":"void InvalidateActiveItem ( EntityPlayer Player, ActiveSlot ActiveSlot )","text":"<p>Forces the specified active item slot to update, this might be useful for functions that modify an active item slot without directly giving or removing items</p>","tags":["Class"]},{"location":"HUD.html#invalidatecraftingitem","title":"Invalidate\u00b7Crafting\u00b7Item ()","text":"","tags":["Class"]},{"location":"HUD.html#void-invalidatecraftingitem-entityplayer-player","title":"void InvalidateCraftingItem ( EntityPlayer Player )","text":"<p>Forces the crafting output from Bag of Crafting to update (this might become useful in the future)</p>","tags":["Class"]},{"location":"HUD.html#isvisible","title":"Is\u00b7Visible ()","text":"","tags":["Class"]},{"location":"HUD.html#boolean-isvisible","title":"boolean IsVisible ( )","text":"<p>Returns false if HUD is invisible and true otherwise.</p>","tags":["Class"]},{"location":"HUD.html#postupdate","title":"Post\u00b7Update ()","text":"","tags":["Class"]},{"location":"HUD.html#void-postupdate","title":"void PostUpdate ( )","text":"","tags":["Class"]},{"location":"HUD.html#render","title":"Render ()","text":"","tags":["Class"]},{"location":"HUD.html#void-render","title":"void Render ( )","text":"","tags":["Class"]},{"location":"HUD.html#setvisible","title":"Set\u00b7Visible ()","text":"","tags":["Class"]},{"location":"HUD.html#void-setvisible-boolean-visible-false","title":"void SetVisible ( boolean Visible = false )","text":"<p>Turns the HUD on or off.</p>","tags":["Class"]},{"location":"HUD.html#showfortunetext","title":"Show\u00b7Fortune\u00b7Text ()","text":"","tags":["Class"]},{"location":"HUD.html#void-showfortunetext-string-mainstring-string-secondarystring","title":"void ShowFortuneText ( string MainString, string SecondaryString, ... )","text":"<p>Allows to display fortune streak with text. Accepts unlimited amount of arguments.</p>","tags":["Class"]},{"location":"HUD.html#showitemtext","title":"Show\u00b7Item\u00b7Text ()","text":"","tags":["Class"]},{"location":"HUD.html#void-showitemtext-string-mainstring-string-secondarystring-boolean-iscursedisplay-false","title":"void ShowItemText ( string MainString, string SecondaryString, boolean IsCurseDisplay = false )","text":"<p>Displays \"streak text\". You can use this to simulate the player picking up an item without them actually picking anything up. The name of the method is misleading, as you can generate any arbitrary text - it does not necessarily have to do with an item.</p> <p>This method is overloaded, meaning that you can use two different sets of parameters, depending on your needs. (See the subsequent section.)</p> <p>For example:</p> <pre><code>local function showHelpText()\n  local game = Game()\n  local hud = game:GetHUD()\n\n  hud:ShowItemText(\"Don't touch the spikes!\", \"It will drain your mana.\")\nend\n</code></pre>","tags":["Class"]},{"location":"HUD.html#showitemtext_1","title":"Show\u00b7Item\u00b7Text ()","text":"","tags":["Class"]},{"location":"HUD.html#void-showitemtext-entityplayer-player-itemconfigitem-item","title":"void ShowItemText ( EntityPlayer Player, ItemConfigItem Item)","text":"<p>Displays \"streak text\". You can use this to simulate the player picking up an item without them actually picking anything up.</p> <p>This method is overloaded, meaning that you can use two different sets of parameters, depending on your needs. (See the previous section.)</p> <p>For example:</p> <pre><code>local function showSadOnionText()\n  local game = Game()\n  local hud = game:GetHUD()\n  local itemConfig = Isaac.GetItemConfig()\n\n  local player = Isaac.GetPlayer()\n  local itemConfigItem = itemConfig:GetCollectible(CollectibleType.COLLECTIBLE_SAD_ONION)\n  hud:ShowItemText(player, itemConfigItem)\nend\n</code></pre>","tags":["Class"]},{"location":"HUD.html#update","title":"Update ()","text":"","tags":["Class"]},{"location":"HUD.html#void-update","title":"void Update ( )","text":"","tags":["Class"]},{"location":"Input.html","title":"Class \"Input\"","text":"Info <p>In this class you need to use a <code>.</code> (Dot) to access its functions instead of a <code>:</code> (colon)!</p> <p>Example: <code>Input.GetMousePosition(true)</code></p>","tags":["Class"]},{"location":"Input.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Input.html#getactionvalue","title":"Get\u00b7Action\u00b7Value ()","text":"","tags":["Class"]},{"location":"Input.html#float-getactionvalue-int-action-int-controllerid","title":"float GetActionValue ( int action, int controllerId )","text":"<p>Returns the current strength in which a button was pressed. This is 0 OR 1 with a keyboard. With a controller, this can be used to get the strength in which you have moved the analog stick in a direction.</p> Example Code <p>This code prints the current \"strength\" in which the analog stick was moved to the left. <pre><code>print(Input.GetActionValue(ButtonAction.ACTION_LEFT, 1))\n</code></pre></p>","tags":["Class"]},{"location":"Input.html#getbuttonvalue","title":"Get\u00b7Button\u00b7Value ()","text":"","tags":["Class"]},{"location":"Input.html#float-getbuttonvalue-int-button-int-controllerid","title":"float GetButtonValue ( int button, int controllerId )","text":"<p>Use \"GetActionValue\" instead of this function.</p>","tags":["Class"]},{"location":"Input.html#getmouseposition","title":"Get\u00b7Mouse\u00b7Position ()","text":"","tags":["Class"]},{"location":"Input.html#vector-getmouseposition-boolean-gamecoords","title":"Vector GetMousePosition ( boolean gameCoords )","text":"<p>Returns the current mouse position in game coordinates (true) or render coordinates.</p> Example Code <p>This code renders \"Hello World!\" at the current mouse position. <pre><code>local mousePos = Input.GetMousePosition(true) -- get mouse position in world coordinates\nlocal screenPos = Isaac.WorldToScreen(mousePos) -- transfer game- to screen coordinates\nIsaac.RenderText(\"Hello World!\", screenPos.X, screenPos.Y, 1 ,1 ,1 ,1 )\n</code></pre></p>","tags":["Class"]},{"location":"Input.html#isactionpressed","title":"Is\u00b7Action\u00b7Pressed ()","text":"","tags":["Class"]},{"location":"Input.html#boolean-isactionpressed-int-action-int-controllerid","title":"boolean IsActionPressed ( int action, int controllerId )","text":"<p>Returns, if an action-button is pressed or not. An Action-button is any button that got a default function assigned to it. This function will return true, as long the button is held down.</p> <p>List of all Action enums</p> Example Code <p>This code prints \"bomb Button pressed\", when any button was pressed that is assigned to the \"place bomb\" function. <pre><code>if Input.IsActionPressed(ButtonAction.ACTION_BOMB, 0)  then\n    print(\"bomb Button pressed\")\nend\n</code></pre></p>","tags":["Class"]},{"location":"Input.html#isactiontriggered","title":"Is\u00b7Action\u00b7Triggered ()","text":"","tags":["Class"]},{"location":"Input.html#boolean-isactiontriggered-int-action-int-controllerid","title":"boolean IsActionTriggered ( int action, int controllerId )","text":"<p>Returns, if an action-button was pressed some time before or not. An Action-button is any button that got a default function assigned to it. This functions will only return true, if the button was pressed down. It will no longer return true, after you called this function and try to call it in the next update cycle (for example in the next render cycle).</p> <p>List of all Action enums</p> Example Code <p>This code prints \"bomb Button pressed\", when any button was pressed that is assigned to the \"place bomb\" function. <pre><code>if Input.IsActionTriggered(ButtonAction.ACTION_BOMB, 0)  then\n    print(\"bomb Button pressed\")\nend\n</code></pre></p>","tags":["Class"]},{"location":"Input.html#isbuttonpressed","title":"Is\u00b7Button\u00b7Pressed ()","text":"","tags":["Class"]},{"location":"Input.html#boolean-isbuttonpressed-int-button-int-controllerid","title":"boolean IsButtonPressed ( int button, int controllerId )","text":"<p>Returns, if a button is pressed or not. This function will return true, as long the button is held down.</p> <p>List of all Keyboard enums</p> Example Code <p>This code prints \"Enter Button pressed\", when the \"Enter\"-Button was pressed. <pre><code>if Input.IsButtonPressed(Keyboard.KEY_ENTER, 0)  then\n    print(\"Enter Button pressed.\")\nend\n</code></pre></p>","tags":["Class"]},{"location":"Input.html#isbuttontriggered","title":"Is\u00b7Button\u00b7Triggered ()","text":"","tags":["Class"]},{"location":"Input.html#boolean-isbuttontriggered-int-button-int-controllerid","title":"boolean IsButtonTriggered ( int button, int controllerId )","text":"<p>Returns, if a button was pressed some time before or not. This functions will only return true, if the button was pressed down. It will no longer return true, after you called this function and try to call it in the next update cycle (for example in the next render cycle).</p> <p>List of all Keyboard enums</p> Example Code <p>This code prints \"Enter Button was pressed\", when the \"Enter\"-Button was pressed. <pre><code>if Input.IsButtonTriggered(Keyboard.KEY_ENTER, 0)  then\n    print(\"Enter Button was pressed.\")\nend\n</code></pre></p>","tags":["Class"]},{"location":"Input.html#ismousebtnpressed","title":"Is\u00b7Mouse\u00b7Btn\u00b7Pressed ()","text":"","tags":["Class"]},{"location":"Input.html#boolean-ismousebtnpressed-int-button","title":"boolean IsMouseBtnPressed ( int button )","text":"<p>Returns, if a mousebutton is pressed or not. Left: 0, Right: 1, mousewheel: 2, back button: 3, forward button: 4</p> Example Code <p>This code prints \"Right Click\", when the \"right\"-mousebutton was pressed. <pre><code>if Input.IsMouseBtnPressed(1)  then\n    print(\"Right Click\")\nend\n</code></pre></p>","tags":["Class"]},{"location":"Isaac.html","title":"\u7c7b \"Isaac\"","text":"\u63d0\u793a <p>\u8bbf\u95eeIsaac\u7c7b\u7684\u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u4f7f\u7528<code>.</code>\uff08\u53e5\u70b9\uff09\u800c\u4e0d\u662f<code>:</code>\uff08\u5192\u53f7\uff09\uff01</p> <p>\u4f8b\u5982\uff1a <pre><code>local player = Isaac.GetPlayer()\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#_1","title":"\u51fd\u6570","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#addcallback","title":"Add\u00b7Callback ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-addcallback-table-modref-function-callbackid-table-callbackfn-int-entityid","title":"void AddCallback ( table modRef, function callbackId, table callbackFn, int entityId )","text":"<p>\u6dfb\u52a0\u4e00\u4e2aMOD\u56de\u8c03\u3002</p> <p>\u63a8\u8350\u4f7f\u7528Mod Reference\u7684AddCallback\u51fd\u6570\u800c\u975e\u8be5\u51fd\u6570\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#addpilleffecttopool","title":"Add\u00b7Pill\u00b7Effect\u00b7To\u00b7Pool ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-addpilleffecttopool-int-pilleffect","title":"int AddPillEffectToPool ( int pillEffect )","text":"<p>\u5c06\u4e00\u4e2a\u80f6\u56ca\u6548\u679cpillEffect\u52a0\u5165\u5230\u80f6\u56ca\u6c60\u4e2d\u3002</p> <p>\u8fd4\u56de\u80f6\u56ca\u989c\u8272\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#addprioritycallback","title":"Add\u00b7Priority\u00b7Callback ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-addprioritycallback-table-modref-function-callbackid-callbackpriority-priority-table-callbackfn-int-entityid","title":"void AddPriorityCallback ( table modRef, function callbackId, CallbackPriority priority, table callbackFn, int entityId )","text":"<p>\u6dfb\u52a0\u4e00\u4e2aMOD\u56de\u8c03\u3002\u8be5\u56de\u8c03\u5177\u6709\u4f18\u5148\u7ea7\uff0c\u5e76\u6839\u636e\u4f18\u5148\u7ea7\u51b3\u5b9a\u6267\u884c\u987a\u5e8f\u3002</p> <p>\u63a8\u8350\u4f7f\u7528Mod Reference\u7684AddPriorityCallback\u51fd\u6570\u800c\u975e\u8be5\u51fd\u6570\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#consoleoutput","title":"Console\u00b7Output ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-consoleoutput-string-text","title":"void ConsoleOutput ( string text )","text":"<p>\u5411\u63a7\u5236\u53f0\u6253\u5370\u4e00\u884c\u6587\u672c\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4f60\u53ef\u4ee5\u4f7f\u7528\u8be5\u793a\u4f8b\u4f5c\u4e3a\u66ff\u4ee3\u3002 <pre><code>Isaac.ConsoleOutput(\"This is a Test.\")\n-- \u8f93\u51fa: This is a Test.\n\n-- \u66ff\u4ee3:\nprint(\"This is a Test.\")\n-- \u8f93\u51fa: This is a Test.\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#countbosses","title":"Count\u00b7Bosses ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-countbosses","title":"int CountBosses ( )","text":"<p>\u8fd4\u56de\u672c\u623f\u95f4\u5185\u7684\u5934\u76ee\u6570\u91cf\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#countenemies","title":"Count\u00b7Enemies ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-countenemies","title":"int CountEnemies ( )","text":"<p>\u8fd4\u56de\u672c\u623f\u95f4\u5185\u7684\u654c\u4eba\u6570\u91cf\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#countentities","title":"Count\u00b7Entities ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-countentities-entity-spawner-entitytype-type-entitytypeentity_null-int-variant-1-int-subtype-1","title":"int CountEntities ( Entity Spawner, EntityType Type = EntityType.ENTITY_NULL, int Variant = -1, int SubType = -1 )","text":"<p>\u8fd4\u56de\u672c\u623f\u95f4\u5185\u7684\u6ee1\u8db3\u6307\u5b9a\u9700\u6c42\u7684\u5b9e\u4f53\u6570\u91cf\u3002</p> <p>Spawner\u4e3a\u8be5\u5b9e\u4f53\u7684\u521b\u5efa\u8005\u3002\uff08\u53ef\u4ee5\u4e3a<code>nil</code>\uff09</p> <p>Type\u4e3a\u8be5\u5b9e\u4f53\u7684\u7c7b\u578b\u3002\uff08\u53ef\u4ee5\u4e3a<code>EntityType.ENTITY_NULL</code>\uff09</p> <p>Variant\u548cSubType\u4e3a\u8be5\u5b9e\u4f53\u7684\u53d8\u4f53\u548c\u5b50\u7c7b\u578b\u3002\uff08\u53ef\u4ee5\u4e3a<code>-1</code>\uff09</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#debugstring","title":"Debug\u00b7String ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-debugstring-string-str","title":"void DebugString ( string str )","text":"<p>\u5411\u65e5\u5fd7\u6587\u4ef6\u6253\u5370\u4e00\u884c\u6587\u672c\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6587\u4ef6\uff1a<code>%systemdrive%\\Users\\%username%\\Documents\\My Games\\Binding of Isaac Repentance\\log.txt</code></p> \u793a\u4f8b\u4ee3\u7801 <p>\u8fd9\u884c\u4ee3\u7801\u4f1a\u5411log.txt\u6253\u5370<code>\"This is a Test.\"</code>\u3002 <pre><code>Isaac.DebugString(\"This is a Test.\")\n-- Output: [INFO] - Lua Debug: This is a Test.\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#executecommand","title":"Execute\u00b7Command ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#string-executecommand-string-command","title":"string ExecuteCommand ( string command )","text":"<p>\u6267\u884c\u4e00\u4e2a\u63a7\u5236\u53f0\u6307\u4ee4\u3002</p> <p>\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u6307\u4ee4\uff0c\u89c1\u63a7\u5236\u53f0\u6559\u7a0b\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#explode","title":"Explode ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-explode-vector-pos-entity-source-float-damage","title":"void Explode ( Vector pos, Entity source, float damage )","text":"<p>\u5728pos\u4f4d\u7f6e\u751f\u6210\u4e00\u6b21\u7206\u70b8\u3002\u5176\u4f24\u5bb3\u6e90\u5b9e\u4f53\u4e3asource\uff0c\u4f24\u5bb3\u4e3adamage\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#findbytype","title":"Find\u00b7By\u00b7Type ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#table-findbytype-entitytype-type-int-variant-1-int-subtype-1-boolean-cache-false-boolean-ignorefriendly-false","title":"table FindByType ( EntityType Type, int Variant = -1, int SubType = -1, boolean Cache = false, boolean IgnoreFriendly = false )","text":"<p>\u8fd4\u56de\u7b26\u5408Type\uff0cVariant\u548cSubType\u7684\u6240\u6709\u5b9e\u4f53\u3002</p> <p>\u5982\u679cVariant/SubType\u4e3a-1\uff0c\u8868\u793a\u5305\u62ec\u4efb\u610fVariant/SubType\u7684\u5b9e\u4f53\u3002</p> <p>Cache\u4e3atrue\u65f6\u4f1a\u7f13\u5b58\u7ed3\u679c\uff0c\u4e00\u5e27\u6267\u884c\u591a\u6b21\u65f6\u53ef\u4ee5\u4f7f\u7528\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#findinradius","title":"Find\u00b7In\u00b7Radius ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#table-findinradius-vector-position-float-radius-int-partitions-0xffffffff","title":"table FindInRadius ( Vector Position, float Radius, int Partitions = 0xFFFFFFFF  )","text":"<p>\u8fd4\u56de\u4e2d\u5fc3\u4e3aPosition\uff0c\u534a\u5f84\u4e3aRadius\u8303\u56f4\u5185\u7684\u6240\u6709\u7531Partitions\u7b5b\u9009\u7684\u5b9e\u4f53\uff08\u53e6\u89c1EntityPartition enum\uff09\uff08\u5305\u62ec\u6240\u6709 = 0xffffffff\uff09</p> <p>\u8be5\u51fd\u6570\u4e0d\u6839\u636e\u5b9e\u4f53\u8ddd\u79bb\u4e2d\u5fc3\u7684\u8ddd\u79bb\uff0c\u800c\u662f\u6839\u636e\u4ed6\u4eec\u52a0\u8f7d\u7684\u987a\u5e8f\u6392\u5e8f\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getbuiltincallbackstate","title":"Get\u00b7Built\u00b7In\u00b7Callback\u00b7State ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#boolean-getbuiltincallbackstate-function-callbackid","title":"boolean GetBuiltInCallbackState ( function callbackId )","text":"<p>\u83b7\u53d6\u5185\u7f6e\u56de\u8c03\u72b6\u6001\u3002</p> <p>\u4f5c\u7528\u672a\u77e5\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getcallbacks","title":"Get\u00b7Callbacks ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#table-getcallbacks-function-callbackid-boolean-createifmissing","title":"table GetCallbacks ( function callbackId, boolean createIfMissing )","text":"<p>\u83b7\u53d6\u6240\u6709callbackId\u7684MOD\u56de\u8c03\u3002</p> <p>createIfMissing\uff1a\u4e3atrue\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u8be5\u56de\u8c03\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getcardidbyname","title":"Get\u00b7Card\u00b7Id\u00b7By\u00b7Name ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getcardidbyname-string-cardhudname","title":"int GetCardIdByName ( string cardHudName )","text":"<p>\u57fa\u4e8e\u201cpocketitems.xml\u201d\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u201chud\u201d\u5c5e\u6027\u8fd4\u56de\u5361\u724cID \u3002\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u201chud\u201d\u5c5e\u6027\u503c\u7684\u5361\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> \u8b66\u544a <p>\u8be5\u51fd\u6570\u7684\u540d\u79f0\u5177\u6709\u8bef\u5bfc\u6027\uff0c\u8be5\u51fd\u6570\u53ea\u80fd\u4f7f\u7528\u5361\u7247\u7684\u201chud\u201d\u5c5e\u6027\u503c\uff0c\u800c\u4e0d\u80fd\u4f7f\u7528\u5361\u724c\u7684\u540d\u79f0\u3002</p> \u6f0f\u6d1e <p>\u6b64\u51fd\u6570\u4e0d\u9002\u7528\u4e8e\u539f\u7248\u5361\u7247/\u7b26\u6587\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728pocketitems.xml\u6587\u4ef6\u4e2d\u7684\u6761\u76ee\u4e2d\u6ca1\u6709\u5b9a\u4e49\u201chud\u201d\u5c5e\u6027\u3002\u60a8\u9700\u8981\u4f7f\u7528Card\u679a\u4e3e\u6765\u83b7\u53d6\u539f\u7248\u7684ID\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u4e00\u5f20MOD\u5361\u724c\u7684\u5361\u724cID\u3002 <pre><code>&lt;pocketitems&gt;\n&lt;card type=\"tarot\" pickup=\"1\" description=\"some description\"  name=\"My new card\" hud=\"my_modded_card\" /&gt;\n&lt;/pocketitems&gt;\n</code></pre> <pre><code>Isaac.GetCardIdByName(\"my_modded_card\")\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getchallenge","title":"Get\u00b7Challenge ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getchallenge","title":"int GetChallenge ( )","text":"<p>\u8fd4\u56de\u73a9\u5bb6\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u7684\u6311\u6218\u7684ID\u3002\u5982\u679c\u73a9\u5bb6\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u6311\u6218\uff0c\u5219\u8fd4\u56de0\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getchallengeidbyname","title":"Get\u00b7Challenge\u00b7Id\u00b7By\u00b7Name ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getchallengeidbyname-string-challengename","title":"int GetChallengeIdByName ( string challengeName )","text":"<p>\u6839\u636e\u6311\u6218\u7684\u540d\u79f0\u8fd4\u56de\u6311\u6218\u7684ID\u3002\uff08\u6587\u4ef6\uff1achallenges.xml\uff09\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u540d\u79f0\u7684\u6311\u6218\uff0c\u5219\u8fd4\u56de<code>-1</code>\uff08\u533a\u5206\u5927\u5c0f\u5199\uff09\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u6311\u6218\u201c\u611a\u4eba\u8282\u201d\u7684\u6311\u6218ID\u3002 <pre><code>Isaac.GetChallengeIdByName(\"Aprils fool\")\n--\u8fd4\u56de\uff1a32\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getcostumeidbypath","title":"Get\u00b7Costume\u00b7Id\u00b7By\u00b7Path ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getcostumeidbypath-string-path","title":"int GetCostumeIdByPath ( string path )","text":"<p>\u6839\u636e\u5916\u89c2\u7684\u6587\u4ef6\u8def\u5f84\u8fd4\u56de\u5916\u89c2\u7684ID\u3002\uff08\u6587\u4ef6\uff1acostumes2.xml\uff09\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u8def\u5f84\u7684\u5916\u89c2\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u5957\u88c5\u201c\u62c9\u4e86\uff01\u201d\u7684\u5916\u89c2ID\u3002 <pre><code>Isaac.GetCostumeIdByPath(\"gfx/characters/n027_Transformation_Poop.anm2\")\n--\u8fd4\u56de\uff1a27\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getcurseidbyname","title":"Get\u00b7Curse\u00b7Id\u00b7By\u00b7Name ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getcurseidbyname-string-cursename","title":"int GetCurseIdByName ( string curseName )","text":"<p>\u6839\u636e\u8bc5\u5492\u7684\u540d\u79f0\u8fd4\u56de\u8bc5\u5492\u7684ID\u3002\uff08\u6587\u4ef6\uff1acurses.xml\uff09\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u540d\u79f0\u7684\u8bc5\u5492\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u672a\u77e5\u8bc5\u5492\u7684\u8bc5\u5492ID\u3002 <pre><code>Isaac.GetCurseIdByName(\"Curse of the Unknown\")\n--\u8fd4\u56de\uff1a4\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getentitytypebyname","title":"Get\u00b7Entity\u00b7Type\u00b7By\u00b7Name ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getentitytypebyname-string-entityname","title":"int GetEntityTypeByName ( string entityName )","text":"<p>\u6839\u636e\u5b9e\u4f53\u7684\u540d\u79f0\u8fd4\u56de\u5b9e\u4f53\u7684EntityType\u3002\uff08\u6587\u4ef6\uff1aentities2.xml\uff09\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u540d\u79f0\u7684\u5b9e\u4f53\uff0c\u5219\u8fd4\u56de<code>0</code>\u3002</p> \u6ce8\u610f <p>\u6ca1\u6709\u8be5\u51fd\u6570\u7684SubType\u7248\u672c\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u71c3\u70e7\u88c2\u53e3\u5c38\u7684EntityType\u3002 <pre><code>Isaac.GetEntityTypeByName(\"Flaming Gaper\")\n--\u8fd4\u56de\uff1a10\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getentityvariantbyname","title":"Get\u00b7Entity\u00b7Variant\u00b7By\u00b7Name ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getentityvariantbyname-string-entityname","title":"int GetEntityVariantByName ( string entityName )","text":"<p>\u6839\u636e\u5b9e\u4f53\u7684\u540d\u79f0\u8fd4\u56de\u5b9e\u4f53\u7684Variant\u3002\uff08\u6587\u4ef6\uff1aentities2.xml\uff09\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u540d\u79f0\u7684\u5b9e\u4f53\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> \u6ce8\u610f <p>\u6ca1\u6709\u8be5\u51fd\u6570\u7684SubType\u7248\u672c\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u71c3\u70e7\u88c2\u53e3\u5c38\u7684Variant\u3002</p> <pre><code>Isaac.GetEntityVariantByName(\"Flaming Gaper\")\n--\u8fd4\u56de\uff1a2\n</code></pre>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getframecount","title":"Get\u00b7Frame\u00b7Count ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getframecount","title":"int GetFrameCount ( )","text":"<p>\u8fd4\u56de\u6574\u4e2a\u6e38\u620f\u6b63\u5728\u8fd0\u884c\u7684\u5e27\u6570\u3002\u5373\u4f7f\u6e38\u620f\u6682\u505c\u6216\u5728\u4e3b\u83dc\u5355\u4e2d\uff0c\u8ba1\u6570\u5668\u4e5f\u4f1a\u589e\u52a0\uff01</p> <p>1\u79d2\u5927\u81f4\u7b49\u4e8e60\u5e27\u3002</p> <p>\u56e0\u6b64\uff0c\u6b64\u51fd\u6570\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e<code>Game():GetFrameCount()</code>Link\u622a\u7136\u4e0d\u540c\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getfreenearposition","title":"Get\u00b7Free\u00b7Near\u00b7Position ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#vector-getfreenearposition-vector-pos-float-step","title":"Vector GetFreeNearPosition ( Vector pos, float step )","text":"<p>\u8fd4\u56de\u8ddd\u79bb\u4f4d\u7f6epos\u6700\u8fd1\u7684\u7a7a\u533a\u57df\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getitemconfig","title":"Get\u00b7Item\u00b7Config ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#itemconfig-getitemconfig","title":"ItemConfig GetItemConfig ( )","text":"<p>\u83b7\u53d6ItemConfig\u5bf9\u8c61\u3002</p> <p>\u8fd9\u662f\u552f\u4e00\u53ef\u4ee5\u8bbf\u95ee<code>ItemConfig</code>\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getitemidbyname","title":"Get\u00b7Item\u00b7Id\u00b7By\u00b7Name ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getitemidbyname-string-itemname","title":"int GetItemIdByName ( string itemName )","text":"<p>\u6839\u636e\u9053\u5177\u540d\u79f0\u8fd4\u56de\u9053\u5177\u7684ID\u3002\uff08\u6587\u4ef6\uff1aitems.xml\uff09\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u540d\u79f0\u7684\u9053\u5177\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u4e00\u4e2aMOD\u9053\u5177\u7684ID\u3002 <pre><code>&lt;passive id=\"1\" name=\"My Mod Item\" description=\"some description\" gfx=\"my_modded_item.png\"/&gt;\n</code></pre> <pre><code>Isaac.GetItemIdByName(\"My Mod Item\")\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getmusicidbyname","title":"Get\u00b7Music\u00b7Id\u00b7By\u00b7Name ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getmusicidbyname-string-musicname","title":"int GetMusicIdByName ( string musicName )","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u97f3\u4e50\u7684ID\u3002\uff08\u6587\u4ef6\uff1amusic.xml\uff09\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u540d\u79f0\u7684\u97f3\u4e50\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u6807\u9898\u754c\u9762\u7684\u97f3\u4e50ID\u3002</p> <pre><code>Isaac.GetMusicIdByName(\"Title Screen\")\n--\u8fd4\u56de\uff1a61\n</code></pre>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getpilleffectbyname","title":"Get\u00b7Pill\u00b7Effect\u00b7By\u00b7Name ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getpilleffectbyname-string-pilleffect","title":"int GetPillEffectByName ( string pillEffect )","text":"<p>\u6839\u636e\u80f6\u56ca\u6548\u679c\u7684\u540d\u79f0\u8fd4\u56de\u80f6\u56ca\u6548\u679cID\u3002\uff08\u6587\u4ef6\uff1apocketitems.xml\uff09\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u540d\u79f0\u7684\u80f6\u56ca\u6548\u679c\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u201c\u6211\u80fd\u6c38\u8fdc\u770b\u6e05\uff01\u201d\u7684\u80f6\u56ca\u6548\u679cID\u3002</p> <pre><code>Isaac.GetPillEffectByName(\"I can see forever!\")\n--\u8fd4\u56de\uff1a23\n</code></pre>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getplayer","title":"Get\u00b7Player ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#entityplayer-getplayer-int-playerid-0","title":"EntityPlayer GetPlayer ( int playerID = 0 )","text":"<p>\u8fd4\u56de\u4e0e\u63d0\u4f9b\u7684\u73a9\u5bb6ID\u5339\u914d\u7684EntityPlayer\u3002\u73a9\u5bb6ID\u4ece0\u5f00\u59cb\u5e76\u5411\u4e0a\u9012\u589e\u3002\u4f8b\u5982\uff0c\u5f53\u626e\u6f14\u96c5\u5404\u5e03\u548c\u4ee5\u626b\u65f6\uff0c\u96c5\u5404\u5e03\u7684\u73a9\u5bb6ID\u5c06\u4e3a0\uff0c\u4ee5\u626b\u7684\u73a9\u5bb6ID\u4e3a1\u3002</p> <p>\u5982\u679c\u4f20\u9012\u4e86\u65e0\u6548\u7684\u73a9\u5bb6ID\uff08\u4f8b\u5982-20\u621620\uff09\uff0c\u5219\u51fd\u6570\u5c06\u5047\u5b9a\u73a9\u5bb6\u7d22\u5f15\u4e3a0\u3002</p> <p>\u5982\u679c\u5728\u4efb\u4f55\u73a9\u5bb6\u521d\u59cb\u5316\u4e4b\u524d\u8c03\u7528\u6b64\u51fd\u6570\uff08\u5373\u5728\u4e3b\u83dc\u5355\u4e2d\u8c03\u7528\u5b83\uff09\uff0c\u5219\u6b64\u51fd\u6570\u4f1a\u8fd4\u56de<code>nil</code>\u3002</p> <p>\u6b64\u51fd\u6570\u4e0e<code>Game():GetPlayer()</code>\u76f8\u540c\u3002</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>local function getPlayers()\n  local game = Game()\n  local numPlayers = game:GetNumPlayers()\n\n  local players = {}\n  for i = 0, numPlayers - 1 do\n    local player = Isaac.GetPlayer(i)\n    table.insert(players, player)\n  end\n\n  return players\nend\n</code></pre>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getplayertypebyname","title":"Get\u00b7Player\u00b7Type\u00b7By\u00b7Name ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#playertype-getplayertypebyname-string-playername-boolean-tainted-false","title":"PlayerType GetPlayerTypeByName ( string playerName , boolean Tainted = false )","text":"<p>\u6839\u636e\u89d2\u8272\u7684\u540d\u79f0\u8fd4\u56de\u89d2\u8272\u7c7b\u578b\uff08ID\uff09\u3002\uff08\u6587\u4ef6\uff1aplayers.xml\uff09\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u540d\u79f0\u7684\u89d2\u8272\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u963f\u6492\u6cfb\u52d2\u7684\u89d2\u8272\u7c7b\u578b\u3002</p> <pre><code>Isaac.GetPlayerTypeByName(\"Azazel\")\n--\u8fd4\u56de\uff1a7\n</code></pre>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getrandomposition","title":"Get\u00b7Random\u00b7Position ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#vector-getrandomposition","title":"Vector GetRandomPosition ( )","text":"<p>\u8fd4\u56de\u5f53\u524d\u623f\u95f4\u5185\u7684\u968f\u673a\u4f4d\u7f6e\u3002</p> <p>\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u8868\u793a\u4e16\u754c\u5750\u6807\u4e2d\u7684\u4f4d\u7f6e\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getroomentities","title":"Get\u00b7Room\u00b7Entities ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#table-getroomentities","title":"table GetRoomEntities ( )","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u53ef\u8fed\u4ee3\u8868\uff0c\u8be5\u8868\u5305\u542b\u8c03\u7528\u51fd\u6570\u65f6\u623f\u95f4\u4e2d\u7684\u6240\u6709\u5b9e\u4f53\u3002</p> <p>\u6b64\u884c\u4e3a\u4e0d\u540c\u4e8e<code>Room::GetEntities()</code>\uff0c\u540e\u8005\u8fd4\u56de\u4e00\u4e2a\u539f\u59cb\u6307\u9488\uff0c\u6307\u5411\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u5b58\u50a8\u623f\u95f4\u6240\u6709\u5b9e\u4f53\u7684\u6570\u7ec4\u3002</p> <p>\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u4f8b\uff0c\u5efa\u8bae\u4f7f\u7528<code>Isaac.GetRoomEntities\uff08\uff09</code>\uff01</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u6253\u5370\u623f\u95f4\u4e2d\u6bcf\u4e2a\u5b9e\u4f53\u7684Type\u3001Variant\u548cSubType\u3002</p> <pre><code>for i, entity in ipairs(Isaac.GetRoomEntities()) do\n    print(entity.Type, entity.Variant, entity.SubType)\nend\n</code></pre>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getscreenheight","title":"Get\u00b7Screen\u00b7Height ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#float-getscreenheight","title":"float GetScreenHeight ( )","text":"<p>\u83b7\u53d6\u6e38\u620f\u5c4f\u5e55\u7684\u9ad8\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getscreenpointscale","title":"Get\u00b7Screen\u00b7Point\u00b7Scale ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#float-getscreenpointscale","title":"float GetScreenPointScale ( )","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u5c4f\u5e55\u201c\u7f29\u653e\u201d\u7a0b\u5ea6\u7684\u6570\u5b57\u3002</p> <p>\u6839\u636e\u6e38\u620f\u7a97\u53e3\u7684\u5206\u8fa8\u7387\uff0c\u53ef\u4ee5\u662f<code>1.0</code>\u6216<code>2.0</code>\u7b49\u3002</p> \u89c6\u9891\u6f14\u793a <p> \u6f14\u793a\u6e38\u620f\u7a97\u53e3\u7684\u5927\u5c0f\u5982\u4f55\u6539\u53d8\u6b64\u51fd\u6570\u8fd4\u56de\u7684\u503c\u3002 </p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getscreenwidth","title":"Get\u00b7Screen\u00b7Width ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#float-getscreenwidth","title":"float GetScreenWidth ( )","text":"<p>\u83b7\u53d6\u6e38\u620f\u5c4f\u5e55\u7684\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#getsoundidbyname","title":"Get\u00b7Sound\u00b7Id\u00b7By\u00b7Name ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-getsoundidbyname-string-soundname","title":"int GetSoundIdByName ( string soundName )","text":"<p>\u6839\u636e\u97f3\u6548\u7684\u540d\u79f0\u8fd4\u56de\u97f3\u6548\u7684ID\u3002\uff08\u6587\u4ef6\uff1asounds.xml\uff09\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u540d\u79f0\u7684\u97f3\u6548\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u540d\u4e3a\"Custom Sound Effect\"\u7684\u97f3\u6548ID\u3002</p> <pre><code>Isaac.GetSoundIdByName(\"Custom Sound Effect\")\n</code></pre>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#gettextwidth","title":"Get\u00b7Text\u00b7Width ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-gettextwidth-string-str","title":"int GetTextWidth ( string str )","text":"<p>\u57fa\u4e8e\u201cterminus8\u201d\u5b57\u4f53\uff08\u4e0eIsaac.RenderText()\u4e2d\u4f7f\u7528\u7684\u5b57\u4f53\u76f8\u540c\uff09\uff0c\u8fd4\u56de\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u5bbd\u5ea6\uff08\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#gettime","title":"Get\u00b7Time ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-gettime","title":"int GetTime ( )","text":"<p>\u8fd4\u56de\u81ea\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u4ee5\u6765\u7684\u5f53\u524d\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002</p> <p>\u8fd9\u4e0e\u7ecf\u8fc7\u4e86\u591a\u5c11\u5e27\u65e0\u5173\uff0c\u5bf9\u4e8e\u6d4b\u91cf\u7ecf\u8fc7\u4e86\u591a\u5c11\u5b9e\u65f6\u65f6\u95f4\u975e\u5e38\u6709\u7528\u3002\uff08\u5e27\u5e76\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65f6\u95f4\u6307\u6807\uff0c\u56e0\u4e3a\u6e38\u620f\u4f1a\u5728\u6bcf\u5c42\u8fc7\u6e21\u52a8\u753b\u548c\u623f\u95f4\u8fc7\u6e21\u52a8\u753b\u65f6\u52a0\u8f7d\u65b0\u6570\u636e\uff0c\u7136\u540e\u9501\u5b9a\u3002\uff09</p> <p>\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5b9e\u73b0\u57fa\u4e8e\u5b9e\u65f6\u7684\u5c4f\u5e55\u901f\u5ea6\u8fd0\u884c\u8ba1\u65f6\u5668\uff0c\u6216\u8005\u5c06\u4e00\u4e2a\u51fd\u6570\u7684\u6027\u80fd\u5f71\u54cd\u4e0e\u53e6\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u6bd4\u8f83\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#gettrinketidbyname","title":"Get\u00b7Trinket\u00b7Id\u00b7By\u00b7Name ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#int-gettrinketidbyname-string-trinketname","title":"int GetTrinketIdByName ( string trinketName )","text":"<p>\u6839\u636e\u9970\u54c1\u7684\u540d\u79f0\u8fd4\u56de\u5176\u9970\u54c1ID\u3002\uff08\u6587\u4ef6\uff1aitems.xml\uff09\u5982\u679c\u627e\u4e0d\u5230\u5177\u6709\u8be5\u540d\u79f0\u7684\u9970\u54c1\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6\u4e00\u4e2aMOD\u9970\u54c1\u7684ID\u3002 <pre><code>&lt;trinket id=\"1\" name=\"My Mod Trinket\" description=\"some description\" gfx=\"my_modded_trinket.png\"/&gt;\n</code></pre> <pre><code>Isaac.GetTrinketIdByName(\"My Mod Trinket\")\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#gridspawn","title":"Grid\u00b7Spawn ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#gridentity-gridspawn-gridentitytype-gridentitytype-int-variant-vector-position-boolean-forced","title":"GridEntity GridSpawn ( GridEntityType gridEntityType, int variant, Vector position, boolean forced )","text":"<p>\u5728\u7ed9\u5b9a\u4f4d\u7f6e\uff08\u4e16\u754c\u5750\u6807\uff09\u751f\u6210\u4e00\u4e2a\u7f51\u683c\u5b9e\u4f53\u3002</p> Bugs <p>\u201cforced\u201d\u53c2\u6570\u65e0\u6548\uff0c\u5e76\u4e14\u5c06\u4e0d\u4f1a\u8986\u76d6\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u7f51\u683c\u5b9e\u4f53\u3002\u5982\u679c\u5fc5\u8981\u7684\u8bdd\uff0c\u5148\u5728\u5728\u7ed9\u5b9a\u4f4d\u7f6e\u79fb\u9664\u7f51\u683c\u5b9e\u4f53\uff0c\u7136\u540e\u5728\u518d\u5176\u4e0a\u751f\u6210\u65b0\u7684\u7f51\u683c\u5b9e\u4f53\u3002</p> <p>\u4f8b\u5982\uff0c\u8981\u5728\u623f\u95f4\u4e2d\u592e\u751f\u6210\u4e00\u5757\u8d85\u7ea7\u6807\u8bb0\u77f3\u5934\uff1a</p> <pre><code>local game = Game()\nlocal room = game:GetRoom()\nlocal centerPos = room:GetCenterPos()\nIsaac.GridSpawn(GridEntityType.GRID_ROCK_SS, 0, centerPos, true)\n</code></pre>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#hasmoddata","title":"Has\u00b7Mod\u00b7Data ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#boolean-hasmoddata-table-modref","title":"boolean HasModData ( table modRef )","text":"<p>\u5982\u679c\u60a8\u7684mod\u4f7f\u7528\u201cSaveModData()\u201d\u51fd\u6570\u5b58\u50a8\u4e86\u6570\u636e\u2014\u2014\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u7684mod\u7684\u6570\u636e\u6587\u4ef6\u5939\u4e2d\u6709\u4e00\u4e2a\u201csaveX.dat\u201d\u6587\u4ef6\uff0c\u5219\u8fd4\u56de<code>true</code>\u3002</p> <p>\u67093\u4e2a\u201csaveX.dat\u201d\u6587\u4ef6\uff0c\u6bcf\u4e2a\u5b58\u6863\u4e00\u4e2a\u3002\u6570\u5b57\u8868\u793a\u5b83\u5bf9\u5e94\u7684\u5b58\u6863\uff0c\u7531\u6e38\u620f\u81ea\u52a8\u786e\u5b9a\u3002</p> <p>\u5bf9\u4e8eAB+\uff0c\u5b83\u4eec\u5b58\u50a8\u5728\u201cmain.lua\u201d\u6587\u4ef6\u65c1\u8fb9\u7684mod\u6587\u4ef6\u5939\u4e2d\u3002</p> <p>\u5bf9\u4e8e\u5fcf\u6094\uff0c\u5b83\u4eec\u5b58\u50a8\u5728\u6e38\u620f\u6587\u4ef6\u4e2d\u201cmods\u201d\u6587\u4ef6\u5939\u65c1\u8fb9\u7684\u201cdata\u201d\u6587\u4ef6\u5939\u4e2d\u3002</p> <p>\u5efa\u8bae\u4f7f\u7528Mod Reference\u7684HasData\u51fd\u6570\u800c\u975e\u8be5\u51fd\u6570\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#loadmoddata","title":"Load\u00b7Mod\u00b7Data ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#string-loadmoddata-table-modref","title":"string LoadModData ( table modRef )","text":"<p>\u8fd4\u56de\u4f7f\u7528\u201cSaveModData()\u201d\u51fd\u6570\u5b58\u50a8\u5728\u201csaveX.dat\u201d\u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u4e32\u3002\u5982\u679c\u60a8\u7684mod\u7684\u6570\u636e\u4e2d\u6ca1\u6709\u201csaveX.dat\u201d\u6587\u4ef6\uff0c\u6b64\u51fd\u6570\u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u3002</p> <p>\u67093\u4e2a\u201csaveX.dat\u201d\u6587\u4ef6\uff0c\u6bcf\u4e2a\u5b58\u6863\u4e00\u4e2a\u3002\u6570\u5b57\u8868\u793a\u5b83\u5bf9\u5e94\u7684\u5b58\u6863\uff0c\u7531\u6e38\u620f\u81ea\u52a8\u786e\u5b9a\u3002</p> <p>\u5982\u679c\u5728\u4e3b\u83dc\u5355\u4e2d\u8c03\u7528\u6b64\u51fd\u6570\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u8fd4\u56de\u5b58\u68631\u7684\u4fdd\u5b58\u6570\u636e\u3002</p> <p>\u5bf9\u4e8eAB+\uff0c\u5b83\u4eec\u5b58\u50a8\u5728\u201cmain.lua\u201d\u6587\u4ef6\u65c1\u8fb9\u7684mod\u6587\u4ef6\u5939\u4e2d\u3002</p> <p>\u5bf9\u4e8e\u5fcf\u6094\uff0c\u5b83\u4eec\u5b58\u50a8\u5728\u6e38\u620f\u6587\u4ef6\u4e2d\u201cmods\u201d\u6587\u4ef6\u5939\u65c1\u8fb9\u7684\u201cdata\u201d\u6587\u4ef6\u5939\u4e2d\u3002</p> <p>\u5efa\u8bae\u4f7f\u7528Mod Reference\u7684LoadData\u51fd\u6570\u800c\u975e\u8be5\u51fd\u6570\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#registermod","title":"Register\u00b7Mod ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-registermod-table-modref-string-modname-int-apiversion","title":"void RegisterMod ( table modRef, string modName, int apiVersion )","text":"<p>\u5728\u6e38\u620f\u4e2d\u6ce8\u518c\u4e00\u4e2a\u8868\u4ee5\u4f7f\u7528Mod Reference\u3002</p> <p>\u5efa\u8bae\u6539\u7528\u5168\u5c40\u7684RegisterMod\u51fd\u6570\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#removecallback","title":"Remove\u00b7Callback ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-removecallback-table-modref-function-callbackid-table-callbackfn","title":"void RemoveCallback ( table modRef, function callbackId, table callbackFn )","text":"<p>\u79fb\u9664\u4e00\u4e2aMOD\u56de\u8c03\u3002</p> <p>\u63a8\u8350\u4f7f\u7528Mod Reference\u7684RemoveCallback\u51fd\u6570\u800c\u975e\u8be5\u51fd\u6570\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#removemoddata","title":"Remove\u00b7Mod\u00b7Data ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-removemoddata-table-modref","title":"void RemoveModData ( table modRef )","text":"<p>\u5982\u679c\u5b58\u5728\u50a8\u5b58\u7684\u201csaveX.dat\u201d\u6587\u4ef6\uff0c\u5c06\u5176\u5220\u9664\u3002</p> <p>\u67093\u4e2a\u201csaveX.dat\u201d\u6587\u4ef6\uff0c\u6bcf\u4e2a\u5b58\u6863\u4e00\u4e2a\u3002\u6570\u5b57\u8868\u793a\u5b83\u5bf9\u5e94\u7684\u5b58\u6863\uff0c\u7531\u6e38\u620f\u81ea\u52a8\u786e\u5b9a\u3002</p> <p>\u5efa\u8bae\u4f7f\u7528Mod Reference\u7684RemoveData\u51fd\u6570\u800c\u975e\u8be5\u51fd\u6570\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#renderscaledtext","title":"Render\u00b7Scaled\u00b7Text ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-renderscaledtext-string-str-float-x-float-y-float-scalex-float-scaley-float-r-float-g-float-b-float-a","title":"void RenderScaledText ( string str, float X, float Y, float ScaleX, float ScaleY, float R, float G, float B, float A )","text":"<p>\u5728\u5c4f\u5e55\u4e0a\u6e32\u67d3\u7f29\u653e\u540e\u7684\u6587\u672c\u3002X\u548cY\u5750\u6807\u9700\u8981\u5728\u5c4f\u5e55\u5750\u6807\uff08X[0\uff0c~500) Y[0\uff0c~350) \uff09\u4e2d\u3002ScaleX\u3001ScaleY\u3001R\u3001G\u3001B\u548cA\u9700\u8981\u5728[0,1]\u4e4b\u95f4\u3002</p> <p>\u67d0\u4e9b\u6bd4\u4f8b\u503c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5b57\u4f53\u663e\u793a\u53d8\u5f62\u548c\u50cf\u7d20\u5316\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u73a9\u5bb6\u7684\u4f4d\u7f6e\u3002</p> <pre><code>local player = Isaac.GetPlayer()\nlocal text = \"X: \" .. player.Position.X .. \", Y: \" .. player.Position.Y\nIsaac.RenderScaledText(text, 50, 50, 0.5, 0.5, 1, 1, 1, 1)\n</code></pre>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#rendertext","title":"Render\u00b7Text ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-rendertext-string-str-float-x-float-y-float-r-float-g-float-b-float-a","title":"void RenderText ( string str, float X, float Y, float R, float G, float B, float A )","text":"<p>\u5728\u5c4f\u5e55\u4e0a\u6e32\u67d3\u9ed8\u8ba4\u5927\u5c0f\u7684\u6587\u672c\u3002X\u548cY\u5750\u6807\u9700\u8981\u5728\u5c4f\u5e55\u5750\u6807\uff08X[0\uff0c~500) Y[0\uff0c~350) \uff09\u4e2d\u3002ScaleX\u3001ScaleY\u3001R\u3001G\u3001B\u548cA\u9700\u8981\u5728[0,1]\u4e4b\u95f4\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u73a9\u5bb6\u7684\u4f4d\u7f6e\u3002</p> <pre><code>local player = Isaac.GetPlayer()\nlocal pos = player.Position\nIsaac.RenderText(\"X: \"..pos.X..\" Y: \"..pos.Y, 50, 50, 1 ,1 ,1 ,1 )\n</code></pre>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#runcallback","title":"Run\u00b7Callback ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-runcallback-function-callbackid","title":"void RunCallback ( function callbackId, ... )","text":"<p>\u6267\u884c\u6240\u6709callbackId\u7684MOD\u56de\u8c03\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#runcallbackwithparam","title":"Run\u00b7Callback\u00b7With\u00b7Param ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-runcallbackwithparam-function-callbackid-object-param","title":"void RunCallbackWithParam ( function callbackId, object param, ... )","text":"<p>\u6267\u884c\u6240\u6709\u53ef\u9009\u53c2\u6570\u4e3aparam\u7684callbackId\u7684MOD\u56de\u8c03\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#savemoddata","title":"Save\u00b7Mod\u00b7Data ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-savemoddata-table-modref-string-data","title":"void SaveModData ( table modRef, string data )","text":"<p>\u5411\u201csaveX.dat\u201d\u5b58\u50a8\u4e00\u4e32\u5b57\u7b26\u4e32\u3002\u5b58\u50a8\u7684\u6570\u636e\u5728\u91cd\u5f00\u4e00\u5c40\u548c\u6e38\u620f\u91cd\u542f\u4e4b\u540e\u4e5f\u4f1a\u5b58\u5728\uff0c\u56e0\u6b64\u975e\u5e38\u9002\u5408\u5b58\u50a8\u6301\u4e45\u6570\u636e\u3002</p> <p>\u67093\u4e2a\u201csaveX.dat\u201d\u6587\u4ef6\uff0c\u6bcf\u4e2a\u5b58\u6863\u4e00\u4e2a\u3002\u6570\u5b57\u8868\u793a\u5b83\u5bf9\u5e94\u7684\u5b58\u6863\uff0c\u7531\u6e38\u620f\u81ea\u52a8\u786e\u5b9a\u3002</p> <p>\u5bf9\u4e8eAB+\uff0c\u5b83\u4eec\u5b58\u50a8\u5728\u201cmain.lua\u201d\u6587\u4ef6\u65c1\u8fb9\u7684mod\u6587\u4ef6\u5939\u4e2d\u3002</p> <p>\u5bf9\u4e8e\u5fcf\u6094\uff0c\u5b83\u4eec\u5b58\u50a8\u5728\u6e38\u620f\u6587\u4ef6\u4e2d\u201cmods\u201d\u6587\u4ef6\u5939\u65c1\u8fb9\u7684\u201cdata\u201d\u6587\u4ef6\u5939\u4e2d\u3002</p> <p>\u5efa\u8bae\u4f7f\u7528Mod Reference\u7684SaveData\u51fd\u6570\u800c\u975e\u8be5\u51fd\u6570\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#screentoworld","title":"Screen\u00b7To\u00b7World ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#vector-screentoworld-vector-pos","title":"Vector ScreenToWorld ( Vector pos )","text":"<p>\u5c06\u5c4f\u5e55\u5750\u6807\uff08\u4e5f\u79f0\u4e3a\u7a97\u53e3\u5750\u6807\uff09\u8f6c\u6362\u4e3a\u4e16\u754c\u5750\u6807\u3002\u8fd9\u53ef\u4ee5\u7528\u4e8e\u6839\u636e\u5c4f\u5e55\u4e0a\u7684\u67d0\u4e00\u70b9\u83b7\u53d6\u623f\u95f4\u4e2d\u7684\u7279\u5b9a\u4f4d\u7f6e\u3002</p> <p>\u4e16\u754c\u5750\u6807\u4e3ax[0\uff0cinf) y[0\uff0cinf)\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#screentoworlddistance","title":"Screen\u00b7To\u00b7World\u00b7Distance ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#vector-screentoworlddistance-vector-pos","title":"Vector ScreenToWorldDistance ( Vector pos )","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#setbuiltincallbackstate","title":"Set\u00b7Built\u00b7In\u00b7Callback\u00b7State ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#void-setbuiltincallbackstate-function-callbackid-boolean-state","title":"void SetBuiltInCallbackState ( function callbackId, boolean state )","text":"<p>\u8bbe\u7f6e\u5185\u7f6e\u56de\u8c03\u72b6\u6001\u3002</p> <p>\u4f5c\u7528\u672a\u77e5\u3002</p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#spawn","title":"Spawn ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#entity-spawn-int-entitytype-int-entityvariant-int-entitysubtype-vector-position-vector-velocity-entity-spawner","title":"Entity Spawn ( int entityType, int entityVariant, int entitySubtype, Vector position, Vector velocity, Entity Spawner )","text":"<p>\u5728\u7ed9\u5b9a\u4f4d\u7f6e\u751f\u6210\u4e00\u4e2a\u5b9e\u4f53\u3002\u5982\u679c\u4f4d\u7f6e\u4e0d\u662f\u7a7a\u7684\uff0c\u4f1a\u5728\u6700\u8fd1\u7684\u7a7a\u4f4d\u7f6e\u751f\u6210\u3002</p> <p>\u6709\u4e24\u4e2a\u751f\u6210\u5b9e\u4f53\u7684\u51fd\u6570\uff1aIsaac.Spawn()\u548cGame():Spawn()\u3002\u5982\u679c\u4f60\u9700\u8981\u7528\u7279\u5b9a\u7684\u79cd\u5b50\u6765\u751f\u6210\u5b9e\u4f53\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u4f7f\u7528Game():Spawn()\u3002\u5982\u679c\u4f60\u60f3\u751f\u6210\u968f\u673a\u79cd\u5b50\u7684\u5b9e\u4f53\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u4f7f\u7528Isaac.Spawn()\u3002</p> <p>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f1a\u4f7f\u7528Isaac.Spawn()\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u5728\u672c\u623f\u95f4\u7684\u4e2d\u592e\u751f\u6210\u4e00\u4e2a\u968f\u673a\u9053\u5177\u3002 <pre><code>Isaac.Spawn(EntityType.ENTITY_PICKUP, PickupVariant.PICKUP_COLLECTIBLE, 0, Vector(320,280), Vector(0,0), nil)\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#worldtorenderposition","title":"World\u00b7To\u00b7Render\u00b7Position ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#vector-worldtorenderposition-vector-pos","title":"Vector WorldToRenderPosition ( Vector pos )","text":"<p>\u5c06\u4e16\u754c\u5750\u6807\uff08\u53c8\u540d\u6e38\u620f\u5750\u6807\uff09\u8f6c\u6362\u4e3a\u6e32\u67d3\u5750\u6807\u3002\u8fd9\u53ef\u4ee5\u7528\u4e8e\u5728\u623f\u95f4\u4e2d\u7684\u56fa\u5b9a\u4f4d\u7f6e\u6e32\u67d3\u4e8b\u7269\u3002\u6e32\u67d3\u5750\u6807\u7cfb\u4e3ax[0\uff0cinf) y[0\uff0cinf)\u3002\u5b83\u5b9a\u4e49\u5f53\u524d\u623f\u95f4\u4e2d\u6e32\u67d3\u5e73\u9762\u4e0a\u7684\u4f4d\u7f6e\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u5728\u9f20\u6807\u5149\u6807\u7684\u4f4d\u7f6e\u6e32\u67d3\u201cTest\u201d\uff0c\u4e0e\u6e38\u620f\u662f\u5426\u5904\u4e8e\u5168\u5c4f\u65e0\u5173\u3002 <pre><code>local mousePos = Input.GetMousePosition(true)\nlocal renderpos = Isaac.WorldToRenderPosition(mousePos) * 2\nIsaac.RenderText(\"test\", renderpos.X, renderpos.Y, 1 ,1 ,1 ,1 )\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#worldtoscreen","title":"World\u00b7To\u00b7Screen ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#vector-worldtoscreen-vector-pos","title":"Vector WorldToScreen ( Vector pos )","text":"<p>\u5c06\u4e16\u754c\u5750\u6807\uff08\u53c8\u540d\u6e38\u620f\u5750\u6807\uff09\u8f6c\u6362\u4e3a\u5c4f\u5e55\uff08\u53c8\u540d\u7a97\u53e3\uff09\u5750\u6807\u3002\u8fd9\u53ef\u4ee5\u7528\u6765\u6e32\u67d3\u5b9e\u4f53\u65c1\u8fb9\u7684\u4e1c\u897f\u3002\u5c4f\u5e55\u5750\u6807\u7cfb\u4e3ax[0\uff0cinf) y[0\uff0cinf)\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5b83\u4e00\u76f4\u5230~500x ~300y\u3002</p> <p>\u8fd4\u56de\u503c\u5411\u91cf\u5305\u542b\u6574\u6570\u503c\u6216\u4ee5.5\u7ed3\u5c3e\u7684\u6570\u5b57\u3002</p> \u793a\u4f8b\u4ee3\u7801 <p>\u4ee5\u4e0b\u4ee3\u7801\u5728\u89d2\u8272\u7684\u4f4d\u7f6e\u6e32\u67d3\u201cTest\u201d\uff0c\u4f1a\u8ddf\u968f\u89d2\u8272\u79fb\u52a8\u3002 <pre><code>local player = Isaac.GetPlayer()\nlocal screenpos = Isaac.WorldToScreen(player.Position)\nIsaac.RenderText(\"test\", screenpos.X, screenpos.Y, 1 ,1 ,1 ,1 )\n</code></pre></p>","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#worldtoscreendistance","title":"World\u00b7To\u00b7Screen\u00b7Distance ()","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"Isaac.html#vector-worldtoscreendistance-vector-pos","title":"Vector WorldToScreenDistance ( Vector pos )","text":"","tags":["\u5168\u5c40","\u7c7b","Isaac"]},{"location":"ItemConfig.html","title":"Class \"ItemConfig\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>Isaac:GetItemConfig()</li> </ul> Example Code <p><code>Isaac.GetItemConfig()</code></p> <p>ItemConfig does have a special Enum.  you can find it here ItemConfigEnums</p>","tags":["Class"]},{"location":"ItemConfig.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ItemConfig.html#getcard","title":"Get\u00b7Card ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#const-itemconfig-card-getcard-card-id","title":"const ItemConfig Card GetCard ( Card ID )","text":"<p>Returns <code>nil</code> if no itemconfig to the given ID can be found.</p>","tags":["Class"]},{"location":"ItemConfig.html#getcards","title":"Get\u00b7Cards ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#const-cardlist-getcards","title":"const CardList GetCards ( )","text":"Bugs <p>Calling Get() in this list does not return usable userdata, rendering it useless for that purpose.</p>","tags":["Class"]},{"location":"ItemConfig.html#getcollectible","title":"Get\u00b7Collectible ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#const-itemconfig-item-getcollectible-int-id","title":"const ItemConfig Item GetCollectible ( int ID )","text":"<p>Returns the Itemobject of a given CollectibleID. Returns nil of nothing was found.</p> Example Code <p>This function gets the item config of sad onion.</p> <pre><code>    Isaac.GetItemConfig():GetCollectible(1)\n</code></pre>","tags":["Class"]},{"location":"ItemConfig.html#getcollectibles","title":"Get\u00b7Collectibles ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#const-userdata-getcollectibles","title":"const userdata GetCollectibles ( )","text":"<p>Returns the List of all Collectibles.</p> Bug <p>This function is broken and returns userdata.</p> Example Code <p>This Code gets the highest possible collectible id including modded items.</p> <pre><code>function GetMaxCollectibleID()\n    return Isaac.GetItemConfig():GetCollectibles().Size -1\nend\n</code></pre> Bugs <p>Calling Get() in this list does not return usable userdata, rendering it useless for that purpose.</p>","tags":["Class"]},{"location":"ItemConfig.html#getnullitem","title":"Get\u00b7Null\u00b7Item ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#const-itemconfig-item-getnullitem-int-id","title":"const ItemConfig Item GetNullItem ( int ID )","text":"<p>Returns <code>nil</code> if no itemconfig to the given ID can be found.</p>","tags":["Class"]},{"location":"ItemConfig.html#getnullitems","title":"Get\u00b7Null\u00b7Items ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#const-itemlist-getnullitems","title":"const ItemList GetNullItems ( )","text":"Bugs <p>Calling Get() in this list does not return usable userdata, rendering it useless for that purpose.</p>","tags":["Class"]},{"location":"ItemConfig.html#getpilleffect","title":"Get\u00b7Pill\u00b7Effect ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#const-itemconfig-pilleffect-getpilleffect-pilleffect-id","title":"const ItemConfig PillEffect GetPillEffect ( PillEffect ID )","text":"<p>Returns <code>nil</code> if no itemconfig to the given ID can be found.</p>","tags":["Class"]},{"location":"ItemConfig.html#getpilleffects","title":"Get\u00b7Pill\u00b7Effects ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#const-pilllist-getpilleffects","title":"const PillList GetPillEffects ( )","text":"Bugs <p>Calling Get() in this list does not return usable userdata, rendering it useless for that purpose.</p>","tags":["Class"]},{"location":"ItemConfig.html#gettrinket","title":"Get\u00b7Trinket ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#const-itemconfig-item-gettrinket-int-id","title":"const ItemConfig Item GetTrinket ( int ID )","text":"<p>Returns <code>nil</code> if no itemconfig to the given ID can be found.</p>","tags":["Class"]},{"location":"ItemConfig.html#gettrinkets","title":"Get\u00b7Trinkets ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#const-itemlist-gettrinkets","title":"const ItemList GetTrinkets ( )","text":"Bugs <p>Calling Get() in this list does not return usable userdata, rendering it useless for that purpose.</p>","tags":["Class"]},{"location":"ItemConfig.html#isvalidcollectible","title":"Is\u00b7Valid\u00b7Collectible ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#static-boolean-isvalidcollectible-collectibletype-id","title":"static boolean IsValidCollectible ( CollectibleType ID )","text":"<p>Function to check if a given item id is a valid collectible id (aka. this item exists). Returns True when it exists and False when it doesn't.</p> <p>Since this function is a static function, the usage is a bit different. Take a look at the example code for the correct usage</p> Example Code <p>This Code checks, if the item \"Sad Onion\" (ID: 1) exists. <pre><code>ItemConfig.Config.IsValidCollectible(1)\n</code></pre></p>","tags":["Class"]},{"location":"ItemConfig.html#shouldaddcostumeonpickup","title":"Should\u00b7Add\u00b7Costume\u00b7On\u00b7Pickup ()","text":"","tags":["Class"]},{"location":"ItemConfig.html#static-boolean-shouldaddcostumeonpickup-itemconfig-item-config","title":"static boolean ShouldAddCostumeOnPickup ( ItemConfig Item Config )","text":"<p>Returns weather a given item config object should add a costume when picking up the associated item.</p> <p>Since this function is a static function, the usage is a bit different. Take a look at the example code for the correct usage</p> Example Code <p>This Code checks, if the item \"Sad Onion\" (ID: 1) should add a costume on Pickup. <pre><code>local sadOnionItemConfig = Isaac.GetItemConfig():GetCollectible(1)\nItemConfig.Config.ShouldAddCostumeOnPickup(sadOnionItemConfig) -- returns true\n</code></pre></p>","tags":["Class"]},{"location":"ItemConfig_Card.html","title":"Class \"ItemConfigCard\"","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#isavailable","title":"Is\u00b7Available ()","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#boolean-isavailable","title":"boolean IsAvailable ( )","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#iscard","title":"Is\u00b7Card ()","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#boolean-iscard","title":"boolean IsCard ( )","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#isrune","title":"Is\u00b7Rune ()","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#boolean-isrune","title":"boolean IsRune ( )","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#achievementid","title":"Achievement\u00b7ID","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#int-achievementid","title":"int AchievementID","text":"<p>Returns the ID of the achievement that unlocks the card. Returns <code>-1</code> if the card is unlocked by default.</p>","tags":["Class"]},{"location":"ItemConfig_Card.html#announcerdelay","title":"Announcer\u00b7Delay","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#int-announcerdelay","title":"int AnnouncerDelay","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#announcervoice","title":"Announcer\u00b7Voice","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#int-announcervoice","title":"int AnnouncerVoice","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#cardtype","title":"Card\u00b7Type","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#int-cardtype","title":"int CardType","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#description","title":"Description","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#string-description","title":"string Description","text":"<p>Returns the description of the card.</p> Warning <p>In Repentance, this function now returns <code>#[CARD_NAME]_DESCRIPTION</code></p>","tags":["Class"]},{"location":"ItemConfig_Card.html#greedmodeallowed","title":"Greed\u00b7Mode\u00b7Allowed","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#boolean-greedmodeallowed","title":"boolean GreedModeAllowed","text":"<p>Returns whether or not the item can appear in Greed or Greedier mode.</p>","tags":["Class"]},{"location":"ItemConfig_Card.html#hudanim","title":"Hud\u00b7Anim","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#string-hudanim","title":"string HudAnim","text":"<p>Returns the name of the animation in <code>ui_cardfronts.anm2</code>.</p> Bugs <p>This will return a blank string unless used on a modded card. Standard cards will return nothing.</p>","tags":["Class"]},{"location":"ItemConfig_Card.html#id","title":"ID","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#int-id","title":"int ID","text":"<p>Returns the ID of the given card.</p>","tags":["Class"]},{"location":"ItemConfig_Card.html#mimiccharge","title":"Mimic\u00b7Charge","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#int-mimiccharge","title":"int MimicCharge","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#name","title":"Name","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#string-name","title":"string Name","text":"<p>Returns the name of the given card.</p> Warning <p>In Repentance, this function now returns <code>#[CARD_NAME]_NAME</code></p>","tags":["Class"]},{"location":"ItemConfig_Card.html#pickupsubtype","title":"Pickup\u00b7Subtype","text":"","tags":["Class"]},{"location":"ItemConfig_Card.html#int-pickupsubtype","title":"int PickupSubtype","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html","title":"Class \"ItemConfigCostume\"","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#anm2path","title":"Anm2Path","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#string-anm2path","title":"string Anm2Path","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#hasoverlay","title":"Has\u00b7Overlay","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#boolean-hasoverlay","title":"boolean HasOverlay","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#hasskinalt","title":"Has\u00b7Skin\u00b7Alt","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#boolean-hasskinalt","title":"boolean HasSkinAlt","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#id","title":"ID","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#int-id","title":"int ID","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#isflying","title":"Is\u00b7Flying","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#boolean-isflying","title":"boolean IsFlying","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#overwritecolor","title":"Overwrite\u00b7Color","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#boolean-overwritecolor","title":"boolean OverwriteColor","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#priority","title":"Priority","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#int-priority","title":"int Priority","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#skincolor","title":"Skin\u00b7Color","text":"","tags":["Class"]},{"location":"ItemConfig_Costume.html#skincolor-skincolor","title":"SkinColor SkinColor","text":"Bug <p>Since it returns UserData, this function is unusable and therefore broken.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html","title":"Class \"ItemConfigItem\"","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#hastags","title":"Has\u00b7Tags ()","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-hastags-int-tags","title":"boolean HasTags ( int Tags )","text":"<p>Returns true or false, depending on whether or not the item has the given tag.</p> Example Code <p>Returns if The Sad Onion has the tag \"Bob\" (for the Bob transformation) <pre><code>Isaac.GetItemConfig():GetCollectible(1):HasTags(ItemConfig.TAG_BOB)\n</code></pre></p>","tags":["Class"]},{"location":"ItemConfig_Item.html#isavailable","title":"Is\u00b7Available ()","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-isavailable","title":"boolean IsAvailable ( )","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#iscollectible","title":"Is\u00b7Collectible ()","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-iscollectible","title":"boolean IsCollectible ( )","text":"<p>Returns if the item is a collectible.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#isnull","title":"Is\u00b7Null ()","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-isnull","title":"boolean IsNull ( )","text":"<p>Returns if the item is null.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#istrinket","title":"Is\u00b7Trinket ()","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-istrinket","title":"boolean IsTrinket ( )","text":"<p>Returns if the item is a trinket.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#achievementid","title":"Achievement\u00b7ID","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-achievementid","title":"int AchievementID","text":"<p>Returns the ID of the achievement that unlocks the item. Returns <code>-1</code> if the item is unlocked by default.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#addblackhearts","title":"Add\u00b7Black\u00b7Hearts","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-addblackhearts","title":"int AddBlackHearts","text":"<p>Returns the number of black hearts the item adds to the player. 1 unit is one half black heart.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#addbombs","title":"Add\u00b7Bombs","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-addbombs","title":"int AddBombs","text":"<p>Returns the number of bombs the item adds to the player.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#addcoins","title":"Add\u00b7Coins","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-addcoins","title":"int AddCoins","text":"<p>Returns the number of coins the item adds to the player.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#addcostumeonpickup","title":"Add\u00b7Costume\u00b7On\u00b7Pickup","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-addcostumeonpickup","title":"boolean AddCostumeOnPickup","text":"<p>Returns whether or not the item adds its costume on pickup.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#addhearts","title":"Add\u00b7Hearts","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-addhearts","title":"int AddHearts","text":"<p>Returns the number of red hearts the item heals the player by. 1 unit is one half red heart.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#addkeys","title":"Add\u00b7Keys","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-addkeys","title":"int AddKeys","text":"<p>Returns the number of keys the item adds to the player.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#addmaxhearts","title":"Add\u00b7Max\u00b7Hearts","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-addmaxhearts","title":"int AddMaxHearts","text":"<p>Returns the number of empty heart containters the item adds to the player. 1 unit is one half red heart.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#addsoulhearts","title":"Add\u00b7Soul\u00b7Hearts","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-addsoulhearts","title":"int AddSoulHearts","text":"<p>Returns the number of soul hearts the item adds to the player. 1 unit is one half soul heart.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#cacheflags","title":"Cache\u00b7Flags","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-cacheflags","title":"int CacheFlags","text":"<p>Returns the CacheFlags set by the item.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#chargetype","title":"Charge\u00b7Type","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-chargetype","title":"int ChargeType","text":"<p>The ChargeType of the item, shown in items.xml. If the item has no defined ChargeType, it will return <code>0</code></p> Charge Types <pre><code>0: Normal\n1: Timed\n2: Special\n</code></pre>","tags":["Class"]},{"location":"ItemConfig_Item.html#cleareffectsonremove","title":"Clear\u00b7Effects\u00b7On\u00b7Remove","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-cleareffectsonremove","title":"boolean ClearEffectsOnRemove","text":"<p>Returns whether or not the item's effects should be removed when the item is removed.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#costume","title":"Costume","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#const-costume-costume","title":"const Costume Costume","text":"<p>Returns the costume given to the player by the item.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#craftingquality","title":"CraftingQuality","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-craftingquality","title":"int CraftingQuality","text":"<p>The item's quality for the Bag of Crafting algorithm. Possible values are -1, 0, 1, 2, 3, and 4. A value of -1 indicates that the item is disabled from being craftable.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#description","title":"Description","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#string-description","title":"string Description","text":"<p>Returns the item's description.</p> Warning <p>In Repentance, returns \"#[ITEM_DESCRIPTION]\" rather than the item's ingame description. (i.e. The Sad Onion will return #THE_SAD_ONION_DESCRIPTION)</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#devilprice","title":"Devil\u00b7Price","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-devilprice","title":"int DevilPrice","text":"<p>Returns the amount of hearts an item would cost at a devil deal. 1 unit is a full red heart. Any item that is not marked with a devil price will return <code>1</code></p> Example Code <p>Returns the number of hearts brimstone would cost at a devil deal. <pre><code>Isaac.GetItemConfig():GetCollectible(118).DevilPrice\n</code></pre></p>","tags":["Class"]},{"location":"ItemConfig_Item.html#discharged","title":"Discharged","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-discharged","title":"boolean Discharged","text":"<p>This attribute got removed with Repentance.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#gfxfilename","title":"Gfx\u00b7File\u00b7Name","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#string-gfxfilename","title":"string GfxFileName","text":"<p>Returns the path to the item's GFX.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#hidden","title":"Hidden","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-hidden","title":"boolean Hidden","text":"<p>Returns if the item can appear in Death Certificate area. If <code>true</code> the item will not appear.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#id","title":"ID","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-id","title":"int ID","text":"<p>Returns the item's ID.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#initcharge","title":"Init\u00b7Charge","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-initcharge","title":"int InitCharge","text":"<p>Returns how much charge the item should have when picked up. <code>-1</code> indicates the item is fully charged when collected.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#maxcharges","title":"Max\u00b7Charges","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-maxcharges","title":"int MaxCharges","text":"<p>The maximum number of charges an active item could have.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#maxcooldown","title":"Max\u00b7Cooldown","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-maxcooldown","title":"int MaxCooldown","text":"<p>Returns how many frames an active item's CollectibleEffect should last.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#name","title":"Name","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#string-name","title":"string Name","text":"<p>Returns the item's name.</p> Warning <p>In Repentance, returns \"#[ITEM_NAME]\" rather than the item's ingame name. (i.e. The Sad Onion will return #THE_SAD_ONION_NAME)</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#passivecache","title":"Passive\u00b7Cache","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-passivecache","title":"boolean PassiveCache","text":"<p>Whether or not a cache evaluation is called when the item is picked up. (used in item's like \"Mom's Box\")</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#persistenteffect","title":"Persistent\u00b7Effect","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-persistenteffect","title":"boolean PersistentEffect","text":"<p>Returns whether or not an active item's CollectibleEffect should persist between rooms. Any item without this set will return <code>false</code>.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#quality","title":"Quality","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-quality","title":"int Quality","text":"<p>Returns the item's quality. Possible values are 0, 1, 2, 3, 4.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#shopprice","title":"Shop\u00b7Price","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-shopprice","title":"int ShopPrice","text":"<p>Returns the cost of the item at a shop. Returns <code>15</code> if the item has no defined price in items.xml.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#special","title":"Special","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#boolean-special","title":"boolean Special","text":"<p>For the special collectible reroll system. (not applicable in Repentance)</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#tags","title":"Tags","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#int-tags","title":"int Tags","text":"<p>Returns the tags of the item.</p>","tags":["Class"]},{"location":"ItemConfig_Item.html#type","title":"Type","text":"","tags":["Class"]},{"location":"ItemConfig_Item.html#itemtype-type","title":"ItemType Type","text":"<p>The item's ItemType.</p>","tags":["Class"]},{"location":"ItemConfig_PillEffect.html","title":"Class \"ItemConfigPillEffect\"","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#isavailable","title":"Is\u00b7Available ()","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#boolean-isavailable","title":"boolean IsAvailable ( )","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#achievementid","title":"Achievement\u00b7ID","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#int-achievementid","title":"int AchievementID","text":"<p>The ID of the achievement that unlocks the pill effect. Returns <code>-1</code> by default.</p>","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#announcerdelay","title":"Announcer\u00b7Delay","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#int-announcerdelay","title":"int AnnouncerDelay","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#announcervoice","title":"Announcer\u00b7Voice","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#int-announcervoice","title":"int AnnouncerVoice","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#announcervoicesuper","title":"Announcer\u00b7Voice\u00b7Super","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#int-announcervoicesuper","title":"int AnnouncerVoiceSuper","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#effectclass","title":"Effect\u00b7Class","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#int-effectclass","title":"int EffectClass","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#effectsubclass","title":"Effect\u00b7Sub\u00b7Class","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#int-effectsubclass","title":"int EffectSubClass","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#greedmodeallowed","title":"Greed\u00b7Mode\u00b7Allowed","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#boolean-greedmodeallowed","title":"boolean GreedModeAllowed","text":"<p>Returns if the pill effect is allowed in Greed mode. Returns <code>true</code> by default.</p>","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#id","title":"ID","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#int-id","title":"int ID","text":"<p>Returns the pill effect's ID.</p>","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#mimiccharge","title":"Mimic\u00b7Charge","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#int-mimiccharge","title":"int MimicCharge","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#name","title":"Name","text":"","tags":["Class"]},{"location":"ItemConfig_PillEffect.html#string-name","title":"string Name","text":"<p>Returns the name of the pill effect.</p> Warning <p>In Repentance, returns \"#[PILL_NAME]\" rather than the pill effect's ingame name. (i.e. Balls of Steel will return #BALLS_OF_STEEL_NAME)</p>","tags":["Class"]},{"location":"ItemPool.html","title":"Class \"ItemPool\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>Game:GetItemPool()</li> </ul> Example Code <p><code>Game():GetItemPool()</code></p>","tags":["Class"]},{"location":"ItemPool.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"ItemPool.html#addbibleupgrade","title":"Add\u00b7Bible\u00b7Upgrade ()","text":"","tags":["Class"]},{"location":"ItemPool.html#void-addbibleupgrade-int-add-itempooltype-pooltype","title":"void AddBibleUpgrade ( int Add, ItemPoolType PoolType )","text":"","tags":["Class"]},{"location":"ItemPool.html#addroomblacklist","title":"Add\u00b7Room\u00b7Blacklist ()","text":"","tags":["Class"]},{"location":"ItemPool.html#void-addroomblacklist-collectibletype-item","title":"void AddRoomBlacklist ( CollectibleType Item )","text":"<p>Adds a given item to the blacklist. This item can no longer be chosen from itempools while the player is inside the current room. This effectively prevents the item from appearing.</p> <p>When the player changes the room, the Blacklist gets reset.</p>","tags":["Class"]},{"location":"ItemPool.html#forceaddpilleffect","title":"Force\u00b7Add\u00b7Pill\u00b7Effect ()","text":"","tags":["Class"]},{"location":"ItemPool.html#pillcolor-forceaddpilleffect-pilleffect-id","title":"PillColor ForceAddPillEffect ( PillEffect ID )","text":"<p>Forces a pill effect to be in the pool, usually for challenges, returns PillColor for that effect.</p>","tags":["Class"]},{"location":"ItemPool.html#getcard","title":"Get\u00b7Card ()","text":"","tags":["Class"]},{"location":"ItemPool.html#card-getcard-int-seed-boolean-playing-boolean-rune-boolean-onlyrunes","title":"Card GetCard ( int Seed, boolean Playing, boolean Rune, boolean OnlyRunes )","text":"","tags":["Class"]},{"location":"ItemPool.html#getcollectible","title":"Get\u00b7Collectible ()","text":"","tags":["Class"]},{"location":"ItemPool.html#collectibletype-getcollectible-itempooltype-pooltype-boolean-decrease-false-int-seed-random-collectibletype-defaultitem-collectibletypecollectible_null","title":"CollectibleType GetCollectible ( ItemPoolType PoolType, boolean Decrease = false, int Seed = Random(), CollectibleType DefaultItem = CollectibleType.COLLECTIBLE_NULL )","text":"","tags":["Class"]},{"location":"ItemPool.html#getlastpool","title":"Get\u00b7Last\u00b7Pool ()","text":"","tags":["Class"]},{"location":"ItemPool.html#itempooltype-getlastpool","title":"ItemPoolType GetLastPool ( )","text":"","tags":["Class"]},{"location":"ItemPool.html#getpill","title":"Get\u00b7Pill ()","text":"","tags":["Class"]},{"location":"ItemPool.html#pillcolor-getpill-int-seed","title":"PillColor GetPill ( int Seed )","text":"","tags":["Class"]},{"location":"ItemPool.html#getpilleffect","title":"Get\u00b7Pill\u00b7Effect ()","text":"","tags":["Class"]},{"location":"ItemPool.html#pilleffect-getpilleffect-pillcolor-pillcolor-entityplayer-player-nil","title":"PillEffect GetPillEffect ( PillColor PillColor, EntityPlayer Player = nil )","text":"","tags":["Class"]},{"location":"ItemPool.html#getpoolforroom","title":"Get\u00b7Pool\u00b7For\u00b7Room ()","text":"","tags":["Class"]},{"location":"ItemPool.html#itempooltype-getpoolforroom-roomtype-roomtype-int-seed","title":"ItemPoolType GetPoolForRoom ( RoomType RoomType, int Seed )","text":"","tags":["Class"]},{"location":"ItemPool.html#gettrinket","title":"Get\u00b7Trinket ()","text":"","tags":["Class"]},{"location":"ItemPool.html#trinkettype-gettrinket-boolean-dontadvancerng-false","title":"TrinketType GetTrinket ( boolean DontAdvanceRNG = false )","text":"","tags":["Class"]},{"location":"ItemPool.html#identifypill","title":"Identify\u00b7Pill ()","text":"","tags":["Class"]},{"location":"ItemPool.html#void-identifypill-pillcolor-pillcolor","title":"void IdentifyPill ( PillColor PillColor )","text":"","tags":["Class"]},{"location":"ItemPool.html#ispillidentified","title":"Is\u00b7Pill\u00b7Identified ()","text":"","tags":["Class"]},{"location":"ItemPool.html#boolean-ispillidentified-pillcolor-pillcolor","title":"boolean IsPillIdentified ( PillColor PillColor )","text":"<p>Once the player takes PHD, Virgo, or False PHD, this method will always return true, even if the player has not already seen or used the pill on the run thus far. (This is because this method dictates when the \"???\" text should be shown as the pill description, and these collectibles will always show the \"revealed\" text.)</p>","tags":["Class"]},{"location":"ItemPool.html#removecollectible","title":"Remove\u00b7Collectible ()","text":"","tags":["Class"]},{"location":"ItemPool.html#boolean-removecollectible-collectibletype-collectible","title":"boolean RemoveCollectible ( CollectibleType Collectible )","text":"<p>Removes a collectible from the itempool. Returns true if given item did exist in the pool before.</p>","tags":["Class"]},{"location":"ItemPool.html#removetrinket","title":"Remove\u00b7Trinket ()","text":"","tags":["Class"]},{"location":"ItemPool.html#boolean-removetrinket-trinkettype-trinket","title":"boolean RemoveTrinket ( TrinketType Trinket )","text":"","tags":["Class"]},{"location":"ItemPool.html#resetroomblacklist","title":"Reset\u00b7Room\u00b7Blacklist ()","text":"","tags":["Class"]},{"location":"ItemPool.html#void-resetroomblacklist","title":"void ResetRoomBlacklist ( )","text":"<p>Clears the current item black list.</p> <p>When the player changes the room, this function gets called automatically.</p>","tags":["Class"]},{"location":"ItemPool.html#resettrinkets","title":"Reset\u00b7Trinkets ()","text":"","tags":["Class"]},{"location":"ItemPool.html#void-resettrinkets","title":"void ResetTrinkets ( )","text":"","tags":["Class"]},{"location":"KColor.html","title":"Class \"KColor\"","text":"","tags":["Globals","Class"]},{"location":"KColor.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"]},{"location":"KColor.html#kcolor","title":"KColor ()","text":"","tags":["Globals","Class"]},{"location":"KColor.html#kcolor-kcolor-float-red-float-green-float-blue-float-alpha","title":"KColor KColor ( float red, float green, float blue, float alpha )","text":"<p>Constructor for the \"KColor\" class.</p> Notes <p>\"KColor\" is only used in the Font class. For most other situations you will need to use the Color() constructor.</p>","tags":["Globals","Class"]},{"location":"KColor.html#variables","title":"Variables","text":"","tags":["Globals","Class"]},{"location":"KColor.html#alpha","title":"Alpha","text":"","tags":["Globals","Class"]},{"location":"KColor.html#float-alpha","title":"float Alpha","text":"","tags":["Globals","Class"]},{"location":"KColor.html#blue","title":"Blue","text":"","tags":["Globals","Class"]},{"location":"KColor.html#float-blue","title":"float Blue","text":"","tags":["Globals","Class"]},{"location":"KColor.html#green","title":"Green","text":"","tags":["Globals","Class"]},{"location":"KColor.html#float-green","title":"float Green","text":"","tags":["Globals","Class"]},{"location":"KColor.html#red","title":"Red","text":"","tags":["Globals","Class"]},{"location":"KColor.html#float-red","title":"float Red","text":"","tags":["Globals","Class"]},{"location":"Level.html","title":"Class \"Level\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Game:GetLevel()</li> </ul> Example Code <pre><code>local level = Game():GetLevel()\n</code></pre>","tags":["Class"]},{"location":"Level.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Level.html#addangelroomchance","title":"Add\u00b7Angel\u00b7Room\u00b7Chance ()","text":"","tags":["Class"]},{"location":"Level.html#void-addangelroomchance-float-chance","title":"void AddAngelRoomChance ( float Chance )","text":"<p>Adds <code>Chance</code> to the Angel deal modifier. See GetAngelRoomChance for more information.</p>","tags":["Class"]},{"location":"Level.html#addcurse","title":"Add\u00b7Curse ()","text":"","tags":["Class"]},{"location":"Level.html#void-addcurse-levelcurse-curse-boolean-showname","title":"void AddCurse ( LevelCurse Curse, boolean ShowName )","text":"Info <p>As entries in curses.xml enumerate from 1 instead of 0, the LevelCurse bitmask value for a new curse must be acquired by doing 1 &lt;&lt; (Isaac.GetCurseIdByName(\"...\") - 1). This bitmask value is what's accepted by Level:AddCurse and the return value of MC_POST_CURSE_EVAL.</p>","tags":["Class"]},{"location":"Level.html#applybluemapeffect","title":"Apply\u00b7Blue\u00b7Map\u00b7Effect ()","text":"","tags":["Class"]},{"location":"Level.html#void-applybluemapeffect","title":"void ApplyBlueMapEffect ( )","text":"","tags":["Class"]},{"location":"Level.html#applycompasseffect","title":"Apply\u00b7Compass\u00b7Effect ()","text":"","tags":["Class"]},{"location":"Level.html#void-applycompasseffect-boolean-persistent","title":"void ApplyCompassEffect ( boolean Persistent )","text":"","tags":["Class"]},{"location":"Level.html#applymapeffect","title":"Apply\u00b7Map\u00b7Effect ()","text":"","tags":["Class"]},{"location":"Level.html#void-applymapeffect","title":"void ApplyMapEffect ( )","text":"","tags":["Class"]},{"location":"Level.html#canopenchallengeroom","title":"Can\u00b7Open\u00b7Challenge\u00b7Room ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-canopenchallengeroom-int-roomindex","title":"boolean CanOpenChallengeRoom ( int RoomIndex )","text":"<p>Returns whether or not a Challenge Room door will be open. You must pass this method a valid grid index on the floor. It does not matter if the grid index is actually attached to the Challenge Room or not. This method will always return <code>false</code> if an invalid or a negative grid index is passed.</p>","tags":["Class"]},{"location":"Level.html#canspawndevilroom","title":"Can\u00b7Spawn\u00b7Devil\u00b7Room ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-canspawndevilroom","title":"boolean CanSpawnDevilRoom ( )","text":"","tags":["Class"]},{"location":"Level.html#canstagehavecurseoflabyrinth","title":"Can\u00b7Stage\u00b7Have\u00b7Curse\u00b7Of\u00b7Labyrinth ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-canstagehavecurseoflabyrinth-levelstage-stage","title":"boolean CanStageHaveCurseOfLabyrinth ( LevelStage Stage )","text":"","tags":["Class"]},{"location":"Level.html#changeroom","title":"Change\u00b7Room ()","text":"","tags":["Class"]},{"location":"Level.html#void-changeroom-int-roomindex-int-dimension-1","title":"void ChangeRoom ( int RoomIndex, int Dimension = -1 )","text":"Bugs <p>This method does not update the fxlayers properly. Do not use this method and use <code>Game.ChangeRoom</code> instead.</p>","tags":["Class"]},{"location":"Level.html#disabledevilroom","title":"Disable\u00b7Devil\u00b7Room ()","text":"","tags":["Class"]},{"location":"Level.html#void-disabledevilroom","title":"void DisableDevilRoom ( )","text":"","tags":["Class"]},{"location":"Level.html#forcehorsemanboss","title":"Force\u00b7Horseman\u00b7Boss ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-forcehorsemanboss-int-seed","title":"boolean ForceHorsemanBoss ( int Seed )","text":"<p>Returns <code>true</code> on success.</p>","tags":["Class"]},{"location":"Level.html#getabsolutestage","title":"Get\u00b7Absolute\u00b7Stage ()","text":"","tags":["Class"]},{"location":"Level.html#levelstage-getabsolutestage","title":"LevelStage GetAbsoluteStage ( )","text":"<p>In non-Greed Mode, returns the same thing as the <code>GetStage()</code> method. In Greed Mode, returns the adjusted stage similar to what it would be in non-Greed Mode.</p> <p>For example:</p> <ul> <li>On Greed Mode Basement, <code>GetStage()</code> returns 1, and <code>GetAbsoluteStage()</code> returns 1.</li> <li>On Greed Mode Caves, <code>GetStage()</code> returns 2, and <code>GetAbsoluteStage()</code> returns 3.</li> <li>On Greed mode Depths, <code>GetStage()</code> returns 3, and <code>GetAbsoluteStage()</code> returns 5.</li> </ul>","tags":["Class"]},{"location":"Level.html#getangelroomchance","title":"Get\u00b7Angel\u00b7Room\u00b7Chance ()","text":"","tags":["Class"]},{"location":"Level.html#float-getangelroomchance","title":"float GetAngelRoomChance ( )","text":"<p>Gets the modifier value of the chance for this floor's deal to be an Angel room. Specifically, the actual effective chance for a deal to be an Angel room is 50% plus this value.</p> Info <p>If this value is above <code>0.0</code>, deals can become Angel rooms even if a player has already taken a Devil deal item. If the chance is positive and a deal room has not spawned yet, the deal is guaranteed to be an Angel room.</p> <p>Under normal circumstances, setting this value to below <code>0.0</code> will not reduce the chance for an Angel room, as values below <code>0.0</code> are usually ignored. A negative value will only affect Angel room chance if the player has an item that enables visiting Angel rooms even if a Devil deal has already been taken, such as Book of Virtues or Act of Contrition.</p>","tags":["Class"]},{"location":"Level.html#getcanseeeverything","title":"Get\u00b7Can\u00b7See\u00b7Everything ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-getcanseeeverything","title":"boolean GetCanSeeEverything ( )","text":"","tags":["Class"]},{"location":"Level.html#getcurrentroom","title":"Get\u00b7Current\u00b7Room ()","text":"","tags":["Class"]},{"location":"Level.html#room-getcurrentroom","title":"Room GetCurrentRoom ( )","text":"","tags":["Class"]},{"location":"Level.html#getcurrentroomdesc","title":"Get\u00b7Current\u00b7Room\u00b7Desc ()","text":"","tags":["Class"]},{"location":"Level.html#const-roomdescriptor-getcurrentroomdesc","title":"const RoomDescriptor GetCurrentRoomDesc ( )","text":"<p>This functions returns a read only version of the RoomDescriptor of the current room. If you want to edit the RoomDescriptor, use <code>GetRoomByIdx()</code> with <code>GetCurrentRoomIndex()</code> instead.</p> Example Code <p>This gets the current rooms RoomDescriptor class in read only and writeable versions. <pre><code>local level = Game():GetLevel()\nlocal readOnlyRoomDesc = level:GetCurrentRoomDesc()\nlocal writeableRoomDesc = level:GetRoomByIdx(level:GetCurrentRoomIndex())\n</code></pre></p>","tags":["Class"]},{"location":"Level.html#getcurrentroomindex","title":"Get\u00b7Current\u00b7Room\u00b7Index ()","text":"","tags":["Class"]},{"location":"Level.html#int-getcurrentroomindex","title":"int GetCurrentRoomIndex ( )","text":"Notes <p>This will always return the roomindex on the levelgrid, on which you entered the current room from. (see black entries in graphic below)</p> <p></p>","tags":["Class"]},{"location":"Level.html#getcursename","title":"Get\u00b7Curse\u00b7Name ()","text":"","tags":["Class"]},{"location":"Level.html#string-getcursename","title":"string GetCurseName ( )","text":"","tags":["Class"]},{"location":"Level.html#getcurses","title":"Get\u00b7Curses ()","text":"","tags":["Class"]},{"location":"Level.html#int-getcurses","title":"int GetCurses ( )","text":"","tags":["Class"]},{"location":"Level.html#getdevilangelroomrng","title":"Get\u00b7Devil\u00b7Angel\u00b7Room\u00b7RNG ()","text":"","tags":["Class"]},{"location":"Level.html#rng-getdevilangelroomrng","title":"RNG GetDevilAngelRoomRNG ( )","text":"","tags":["Class"]},{"location":"Level.html#getdungeonplacementseed","title":"Get\u00b7Dungeon\u00b7Placement\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Level.html#int-getdungeonplacementseed","title":"int GetDungeonPlacementSeed ( )","text":"","tags":["Class"]},{"location":"Level.html#getenterposition","title":"Get\u00b7Enter\u00b7Position ()","text":"","tags":["Class"]},{"location":"Level.html#vector-getenterposition","title":"Vector GetEnterPosition ( )","text":"","tags":["Class"]},{"location":"Level.html#getheartpicked","title":"Get\u00b7Heart\u00b7Picked ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-getheartpicked","title":"boolean GetHeartPicked ( )","text":"","tags":["Class"]},{"location":"Level.html#getlastbossroomlistindex","title":"Get\u00b7Last\u00b7Boss\u00b7Room\u00b7List\u00b7Index ()","text":"","tags":["Class"]},{"location":"Level.html#int-getlastbossroomlistindex","title":"int GetLastBossRoomListIndex ( )","text":"","tags":["Class"]},{"location":"Level.html#getlastroomdesc","title":"Get\u00b7Last\u00b7Room\u00b7Desc ()","text":"","tags":["Class"]},{"location":"Level.html#const-roomdescriptor-getlastroomdesc","title":"const RoomDescriptor GetLastRoomDesc ( )","text":"","tags":["Class"]},{"location":"Level.html#getname","title":"Get\u00b7Name ()","text":"","tags":["Class"]},{"location":"Level.html#string-getname","title":"string GetName ( )","text":"","tags":["Class"]},{"location":"Level.html#getnoncompleteroomindex","title":"Get\u00b7Non\u00b7Complete\u00b7Room\u00b7Index ()","text":"","tags":["Class"]},{"location":"Level.html#int-getnoncompleteroomindex","title":"int GetNonCompleteRoomIndex ( )","text":"","tags":["Class"]},{"location":"Level.html#getplanetariumchance","title":"Get\u00b7Planetarium\u00b7Chance ()","text":"","tags":["Class"]},{"location":"Level.html#float-getplanetariumchance","title":"float GetPlanetariumChance ( )","text":"<p>Returns the probability of getting a Planetarium (in the 0-1 range)</p>","tags":["Class"]},{"location":"Level.html#getpreviousroomindex","title":"Get\u00b7Previous\u00b7Room\u00b7Index ()","text":"","tags":["Class"]},{"location":"Level.html#int-getpreviousroomindex","title":"int GetPreviousRoomIndex ( )","text":"","tags":["Class"]},{"location":"Level.html#getrandomroomindex","title":"Get\u00b7Random\u00b7Room\u00b7Index ()","text":"","tags":["Class"]},{"location":"Level.html#int-getrandomroomindex-boolean-iamerrorroom-int-seed","title":"int GetRandomRoomIndex ( boolean IAmErrorRoom, int Seed )","text":"","tags":["Class"]},{"location":"Level.html#getroombyidx","title":"Get\u00b7Room\u00b7By\u00b7Idx ()","text":"","tags":["Class"]},{"location":"Level.html#roomdescriptor-getroombyidx-int-roomidx-int-dimension-1","title":"RoomDescriptor GetRoomByIdx ( int RoomIdx, int Dimension = -1 )","text":"Example Code <p>This gets the current rooms RoomDescriptor class. <pre><code>local level = Game():GetLevel()\nlocal curRoomDesc = level:GetRoomByIdx(level:GetCurrentRoomIndex())\n</code></pre></p> Dimension Info <p>Dimension: ID of the dimension to get the room from</p> <pre><code>* -1: Current dimension\n* 0: Main dimension\n* 1: Secondary dimension, used by Downpour mirror dimension and Mines escape sequence\n* 2: Death Certificate dimension\n</code></pre> Warning <p>This function always returns a valid RoomDescriptor object, so error checking is recommended. The <code>Data</code> property of an invalid RoomDescriptor object is <code>nil</code>.</p>","tags":["Class"]},{"location":"Level.html#getroomcount","title":"Get\u00b7Room\u00b7Count ()","text":"","tags":["Class"]},{"location":"Level.html#int-getroomcount","title":"int GetRoomCount ( )","text":"","tags":["Class"]},{"location":"Level.html#getrooms","title":"Get\u00b7Rooms ()","text":"","tags":["Class"]},{"location":"Level.html#roomdescriptor-list-getrooms","title":"RoomDescriptor List GetRooms ( )","text":"","tags":["Class"]},{"location":"Level.html#getstage","title":"Get\u00b7Stage ()","text":"","tags":["Class"]},{"location":"Level.html#levelstage-getstage","title":"LevelStage GetStage ( )","text":"","tags":["Class"]},{"location":"Level.html#getstagetype","title":"Get\u00b7Stage\u00b7Type ()","text":"","tags":["Class"]},{"location":"Level.html#stagetype-getstagetype","title":"StageType GetStageType ( )","text":"","tags":["Class"]},{"location":"Level.html#getstartingroomindex","title":"Get\u00b7Starting\u00b7Room\u00b7Index ()","text":"","tags":["Class"]},{"location":"Level.html#int-getstartingroomindex","title":"int GetStartingRoomIndex ( )","text":"<p>Returns the gridindex of the starting room of the current level.</p>","tags":["Class"]},{"location":"Level.html#getstateflag","title":"Get\u00b7State\u00b7Flag ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-getstateflag-levelstateflag-levelstateflag","title":"boolean GetStateFlag ( LevelStateFlag LevelStateFlag)","text":"","tags":["Class"]},{"location":"Level.html#hasbosschallenge","title":"Has\u00b7Boss\u00b7Challenge ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-hasbosschallenge","title":"boolean HasBossChallenge ( )","text":"","tags":["Class"]},{"location":"Level.html#initializedevilangelroom","title":"Initialize\u00b7Devil\u00b7Angel\u00b7Room ()","text":"","tags":["Class"]},{"location":"Level.html#void-initializedevilangelroom-boolean-forceangel-boolean-forcedevil","title":"void InitializeDevilAngelRoom ( boolean ForceAngel, boolean ForceDevil )","text":"<p>By calling this function, it \"locks in\" the choice between a Devil Room and an Angel Room for the current floor.</p> <p>Once the room is initialized, the appropriate door will spawn after killing the boss.</p> <p>This function still works to grant a Devil Room even if the player has the Eucharist.</p> <p>Calling this function twice will have no effect, because the room will already have been initialized. For example, this means that if you force an Angel Room, you can't change it back to a Devil Room later on.</p> <p>However, you can get around this restriction by calling <code>level:GetRoomByIdx(GridRooms.ROOM_DEVIL_IDX).Data = nil</code>, which will uninitialize the room.</p>","tags":["Class"]},{"location":"Level.html#isaltstage","title":"Is\u00b7Alt\u00b7Stage ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-isaltstage","title":"boolean IsAltStage ( )","text":"<p>Returns <code>true</code> if the level's StageType is not <code>StageType.STAGE_ORIGINAL</code>.</p>","tags":["Class"]},{"location":"Level.html#isascent","title":"Is\u00b7Ascent ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-isascent","title":"boolean IsAscent ( )","text":"<p>Returns <code>true</code> if the player is in the Ascent.</p>","tags":["Class"]},{"location":"Level.html#isdevilroomdisabled","title":"Is\u00b7Devil\u00b7Room\u00b7Disabled ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-isdevilroomdisabled","title":"boolean IsDevilRoomDisabled ( )","text":"","tags":["Class"]},{"location":"Level.html#isnextstageavailable","title":"Is\u00b7Next\u00b7Stage\u00b7Available ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-isnextstageavailable","title":"boolean IsNextStageAvailable ( )","text":"<p>Returns <code>false</code> if on a final floor (Chest/Dark Room, The Void, Home). Returns <code>true</code> otherwise, including cases where the next stage is technically not available such as not having the Polaroid or Negative when entering its respective Big Chest or beating Hush for the first time.</p>","tags":["Class"]},{"location":"Level.html#ispreascent","title":"Is\u00b7Pre\u00b7Ascent ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-ispreascent","title":"boolean IsPreAscent ( )","text":"<p>Returns <code>true</code> if the player is in the version of Mausoleum/Gehenna II leading to the Ascent.</p>","tags":["Class"]},{"location":"Level.html#makeredroomdoor","title":"Make\u00b7Red\u00b7Room\u00b7Door ()","text":"","tags":["Class"]},{"location":"Level.html#boolean-makeredroomdoor-int-currentroomidx-doorslot-slot","title":"boolean MakeRedRoomDoor ( int CurrentRoomIdx, DoorSlot Slot )","text":"<p>Attempts to create a red room door in the given room at the given door slot. Returns <code>true</code> on success.</p> Notes <p>This function can be used to create rooms not connected to any other room. For example, calling <code>MakeRedRoomDoor(2, DoorSlot.DOOR_LEFT0)</code> will create a room where <code>Slot</code> of <code>CurrentRoomIdx</code> would connect to, in this case grid index 1.</p> <p>Rooms can also be forced to be created by setting Challenge to Red Redemption (<code>Challenge.CHALLENGE_RED_REDEMPTION</code>). Note that creating a room connected to an otherwise invalid slot will cause the door to lead to an Error room!</p>","tags":["Class"]},{"location":"Level.html#queryroomtypeindex","title":"Query\u00b7Room\u00b7Type\u00b7Index ()","text":"","tags":["Class"]},{"location":"Level.html#int-queryroomtypeindex-roomtype-roomtype-boolean-visited-rng-rng-boolean-ignoregroup-false","title":"int QueryRoomTypeIndex ( RoomType RoomType, boolean Visited, RNG rng, boolean IgnoreGroup = false )","text":"<p>IgnoreGroup: If set to <code>true</code>, includes rooms that do not have the same group ID as the current room (currently unused)</p>","tags":["Class"]},{"location":"Level.html#removecompasseffect","title":"Remove\u00b7Compass\u00b7Effect ()","text":"","tags":["Class"]},{"location":"Level.html#void-removecompasseffect","title":"void RemoveCompassEffect ( )","text":"","tags":["Class"]},{"location":"Level.html#removecurses","title":"Remove\u00b7Curses ()","text":"","tags":["Class"]},{"location":"Level.html#void-removecurses-levelcurse-curses","title":"void RemoveCurses ( LevelCurse Curses )","text":"<p>Curses: A bitmask of LevelCurse that indicates which curses will be removed</p> Example Code <p>This example removes curse of darkness and curse of the blind <pre><code>Game():GetLevel():RemoveCurses(LevelCurse.CURSE_OF_DARKNESS | LevelCurse.CURSE_OF_BLIND)\n</code></pre></p>","tags":["Class"]},{"location":"Level.html#setcanseeeverything","title":"Set\u00b7Can\u00b7See\u00b7Everything ()","text":"","tags":["Class"]},{"location":"Level.html#void-setcanseeeverything-boolean-value","title":"void SetCanSeeEverything ( boolean Value )","text":"","tags":["Class"]},{"location":"Level.html#setheartpicked","title":"Set\u00b7Heart\u00b7Picked ()","text":"","tags":["Class"]},{"location":"Level.html#void-setheartpicked","title":"void SetHeartPicked ( )","text":"","tags":["Class"]},{"location":"Level.html#setnextstage","title":"Set\u00b7Next\u00b7Stage ()","text":"","tags":["Class"]},{"location":"Level.html#void-setnextstage","title":"void SetNextStage ( )","text":"<p>This function puts you in the next stage without applying any of the floor changes. For the changes to fully apply, either use the <code>reseed</code> console command, or Game.StartStageTransition.</p>","tags":["Class"]},{"location":"Level.html#setredheartdamage","title":"Set\u00b7Red\u00b7Heart\u00b7Damage ()","text":"","tags":["Class"]},{"location":"Level.html#void-setredheartdamage","title":"void SetRedHeartDamage ( )","text":"","tags":["Class"]},{"location":"Level.html#setstage","title":"Set\u00b7Stage ()","text":"","tags":["Class"]},{"location":"Level.html#void-setstage-int-stageoffset-int-stagetypeoffset","title":"void SetStage ( int StageOffset, int StageTypeOffset )","text":"<p>This function changes the current floor, and it's stage. For the changes to fully apply, either use the <code>reseed</code> console command, or Game.StartStageTransition.</p> <p>StageOffset acts as the new \"floor\":</p> <ul> <li>1 would be equally difficult to Basement I, </li> <li>2 would be equally difficult to Basement II,</li> <li>3 would be equally difficult to Caves I</li> </ul> <p>StageTypeOffset tells the game what \"stage\" to use, based on the listed IDs in stages.xml, however, the default stage of the floor's ID will be added on top of this</p> <ul> <li>StageOffset = 1 uses the stage at ID: StageTypeOffset + 1(Basement's stage ID), </li> <li>StageOffset = 2 uses the stage at ID: StageTypeOffset + 1(Same as StageOffset 1),</li> <li>StageOffset = 3 uses the stage at ID: StageTypeOffset + 4(Caves' stage ID)</li> </ul> <p>If you wish to directly use a stage ID, you can subtract the default stage for any given floor using a function like: <pre><code>local function defaultStageOfFloor(StageOffset)\n    if (StageOffset == 0) then\n        print(\"Attempting to get default stage of floor 0. This is not recommended\")\n        Isaac.DebugString(\"Attempting to get default stage of floor 0. This is not recommended\")\n        return 0\n    elseif (StageOffset &lt;= 8) then\n        return math.ceil(StageOffset/2) * 3 -2\n    else\n        return 10 + (StageOffset-8) * 2\n    end\nend\n</code></pre></p> Notes <p>If you pass StageOffset = 0, the function acts (seemingly) arbitrarily, though it is still possible to use</p> <p>StageOffset = -1 has an unusually small floor</p> <p>StageOffsets 9, 12, and 13 are all seemingly hardcoded in some ways. Blue Womb seems to have it's backdrop and layout forced, while The Void and Home seems to force their name and backdrop</p>","tags":["Class"]},{"location":"Level.html#setstateflag","title":"Set\u00b7State\u00b7Flag ()","text":"","tags":["Class"]},{"location":"Level.html#void-setstateflag-levelstateflag-levelstateflag-boolean-val","title":"void SetStateFlag ( LevelStateFlag LevelStateFlag, boolean Val )","text":"","tags":["Class"]},{"location":"Level.html#showmap","title":"Show\u00b7Map ()","text":"","tags":["Class"]},{"location":"Level.html#void-showmap","title":"void ShowMap ( )","text":"<p>Show's all map (world/sun card effect) except the top secret room.</p>","tags":["Class"]},{"location":"Level.html#showname","title":"Show\u00b7Name ()","text":"","tags":["Class"]},{"location":"Level.html#void-showname-boolean-sticky","title":"void ShowName ( boolean Sticky )","text":"","tags":["Class"]},{"location":"Level.html#uncoverhiddendoor","title":"Uncover\u00b7Hidden\u00b7Door ()","text":"","tags":["Class"]},{"location":"Level.html#void-uncoverhiddendoor-int-currentroomidx-doorslot-slot","title":"void UncoverHiddenDoor ( int CurrentRoomIdx, DoorSlot Slot )","text":"<p>Uncovers the door on both sides by modifying the saved grid entities for neighboring room.</p>","tags":["Class"]},{"location":"Level.html#update","title":"Update ()","text":"","tags":["Class"]},{"location":"Level.html#void-update","title":"void Update ( )","text":"","tags":["Class"]},{"location":"Level.html#updatevisibility","title":"Update\u00b7Visibility ()","text":"","tags":["Class"]},{"location":"Level.html#void-updatevisibility","title":"void UpdateVisibility ( )","text":"Notes <p>Whenever you update the visibility of a room on the minimap, it won't update the map automatically, since it is cached. You have to explicitly call  UpdateVisibility() afterwards to apply any changes.</p> Example Code <p>This code <pre><code>-- Local variables\nlocal game = Game()\nlocal level = game:GetLevel()\n\n-- Give the player the Compass effect, which will display all of the floor's special rooms on the mini-map\nlevel:ApplyCompassEffect()\n\n-- Remove the icon for the Treasure Room specifically\nlocal treasureIndex = level:QueryRoomTypeIndex(RoomType.ROOM_TREASURE, false, RNG())\nlocal treasureRoom = level:GetRoomByIdx(treasureIndex)\ntreasureRoom.DisplayFlags = 0\n\n-- Since the mini-map is cached, changing display flags won't update it unless we explicitly call this function\nlevel:UpdateVisibility()\n</code></pre></p>","tags":["Class"]},{"location":"Level.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"Level.html#dungeonreturnposition","title":"Dungeon\u00b7Return\u00b7Position","text":"","tags":["Class"]},{"location":"Level.html#vector-dungeonreturnposition","title":"Vector DungeonReturnPosition","text":"","tags":["Class"]},{"location":"Level.html#dungeonreturnroomindex","title":"Dungeon\u00b7Return\u00b7Room\u00b7Index","text":"","tags":["Class"]},{"location":"Level.html#int-dungeonreturnroomindex","title":"int DungeonReturnRoomIndex","text":"","tags":["Class"]},{"location":"Level.html#enterdoor","title":"Enter\u00b7Door","text":"","tags":["Class"]},{"location":"Level.html#int-enterdoor","title":"int EnterDoor","text":"<p>This value defines on which doorslot you entered the room.</p> Bugs <p>Changing this value has no impact on anything. the EnterDoor value is always determined by the LeaveDoor Value and the game itself.</p>","tags":["Class"]},{"location":"Level.html#greedmodewave","title":"Greed\u00b7Mode\u00b7Wave","text":"","tags":["Class"]},{"location":"Level.html#int-greedmodewave","title":"int GreedModeWave","text":"","tags":["Class"]},{"location":"Level.html#leavedoor","title":"Leave\u00b7Door","text":"","tags":["Class"]},{"location":"Level.html#int-leavedoor","title":"int LeaveDoor","text":"<p>This value defines on which doorslot you are positioned after the transition. You will always end up at the oposite side of the door specified. Example: LeaveDoor=1 (Up0) will position you at Doorslot Down0 (Logic: Doorslot+2)</p> Notes <p>if level.LeaveDoor is set to anything other than -1, the function will transition based on the room you are currently in.</p>","tags":["Class"]},{"location":"ModReference.html","title":"Class \"Mod Reference\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>RegisterMod()</li> </ul>","tags":["Class"],"boost":0.5},{"location":"ModReference.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#addcallback","title":"Add\u00b7Callback ()","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#void-addcallback-modcallbacks-callbackid-function-callbackfn-int-entityid","title":"void AddCallback ( ModCallbacks callbackId, function callbackFn, int entityId )","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#addprioritycallback","title":"Add\u00b7Priority\u00b7Callback ()","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#void-addprioritycallback-modcallbacks-callbackid-callbackpriority-priority-function-callbackfn-int-entityid","title":"void AddPriorityCallback ( ModCallbacks callbackId, CallbackPriority priority, function callbackFn, int entityId )","text":"<p>Allows modders to specify that a callback function should run earlier or later than normal relative to other functions added to that callback.</p>","tags":["Class"],"boost":0.5},{"location":"ModReference.html#hasdata","title":"Has\u00b7Data ()","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#boolean-hasdata","title":"boolean HasData ( )","text":"<p>Returns \"true\" if your mod has Data stored using the \"SaveData()\" function. Aka. if there is a \"saveX.dat\" file in your mod folder. There are 3 \"saveX.dat\" files, one per Savegame. They are stored in the mod's folder next to the \"main.lua\" file. The number indicates the savegame it corresponds to. The number will be determined automatically by the game.</p>","tags":["Class"],"boost":0.5},{"location":"ModReference.html#loaddata","title":"Load\u00b7Data ()","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#string-loaddata","title":"string LoadData ( )","text":"<p>Returns a string that was stored in a \"saveX.dat\" file using the \"SaveData()\" function. If there is no \"saveX.dat\" file in your mod, this function will return an empty string. There are 3 \"saveX.dat\" files, one per Savegame. They are stored in the mod's folder next to the \"main.lua\" file. The number indicates the savegame it corresponds to. The number will be determined automatically by the game.</p> Example Code <p>This code loads a string that was stored in the \"saveX.dat\" file, if it exists, and converts it into a table using JSON.</p> <pre><code>local yourMod = RegisterMod(\"someMod\", 1)\nlocal json = require(\"json\")\n-- ...\nfunction yourMod:OnGameStart(isSave)\n    --Loading Moddata--\n    if yourMod:HasData() then\n        local myTable = json.decode(yourMod:LoadData())\n    end\nend\nyourMod:AddCallback(ModCallbacks.MC_POST_GAME_STARTED, yourMod.OnGameStart)\n</code></pre>","tags":["Class"],"boost":0.5},{"location":"ModReference.html#removecallback","title":"Remove\u00b7Callback ()","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#void-removecallback-int-callbackid-function-callbackfn","title":"void RemoveCallback ( int callbackId, function callbackFn )","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#removedata","title":"Remove\u00b7Data ()","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#void-removedata","title":"void RemoveData ( )","text":"<p>Deletes the stored \"saveX.dat\" file if it exists. There are 3 \"saveX.dat\" files, one per Savegame. They are stored in the mod's folder next to the \"main.lua\" file. The number indicates the savegame it corresponds to. The number will be determined automatically by the game.</p>","tags":["Class"],"boost":0.5},{"location":"ModReference.html#savedata","title":"Save\u00b7Data ()","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#void-savedata-string-data","title":"void SaveData ( string data )","text":"<ul> <li>Stores a string in a \"saveX.dat\" file. The stored data persists between runs and between game launches.</li> <li>The filename will be either \"save1.dat\", \"save2.dat\", or \"save3.dat\", depending on which save file slot the user is playing on.</li> <li>The file will be located in the \"data\" directory. For example: <code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\data\\foo\\save1.dat</code></li> <li>Since mods will often have to store more than a single variable, it is recommended to store all persistent variables for your mod in a Lua table, and then convert the table to a JSON string before using this function.</li> </ul> Example Code <p>This code uses JSON to convert a table into a string, and saves it in the \"saveX.dat\" file. <pre><code>local json = require(\"json\")\n\nlocal mod = RegisterMod(\"myMod\", 1)\n\nlocal persistentData = {\n  foo = 1,\n  bar = 2,\n}\n\nfunction mod:preGameExit()\n  local jsonString = json.encode(persistentData)\n  mod:SaveData(jsonString)\nend\n\nmod:AddCallback(ModCallbacks.MC_PRE_GAME_EXIT, yourMod.preGameExit)\n</code></pre></p> <ul> <li>Note that for security reasons, the game only allows you to write data to these three files. If you want to write data to arbitrary files, you have to use the <code>--luadebug</code> flag, which will enable the Lua standard library.</li> </ul>","tags":["Class"],"boost":0.5},{"location":"ModReference.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#name","title":"Name","text":"","tags":["Class"],"boost":0.5},{"location":"ModReference.html#string-name","title":"string Name","text":"","tags":["Class"],"boost":0.5},{"location":"MusicManager.html","title":"Class \"MusicManager\"","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#musicmanager","title":"Music\u00b7Manager ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#musicmanager-musicmanager","title":"MusicManager MusicManager ( )","text":"<p>Returns a MusicManager object.</p> Example Code <p>Example usage: <pre><code>MusicManager():Disable()\n</code></pre></p>","tags":["Globals","Class"]},{"location":"MusicManager.html#functions","title":"Functions","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#crossfade","title":"Crossfade ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-crossfade-music-id-float-faderate-008","title":"void Crossfade ( Music ID, float FadeRate = 0.08 )","text":"Bug <p>If the ID parameter is negative or falls out of the allowed range of music IDs, this function will crash the game.</p>","tags":["Globals","Class"]},{"location":"MusicManager.html#disable","title":"Disable ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-disable","title":"void Disable ( )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#disablelayer","title":"Disable\u00b7Layer ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-disablelayer-int-layerid-0","title":"void DisableLayer ( int LayerId = 0 )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#enable","title":"Enable ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-enable","title":"void Enable ( )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#enablelayer","title":"Enable\u00b7Layer ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-enablelayer-int-layerid-0-boolean-instant-false","title":"void EnableLayer ( int LayerId = 0, boolean Instant = false )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#fadein","title":"Fadein ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-fadein-musicmanager-id-float-volume-1-float-faderate-008","title":"void Fadein ( MusicManager ID, float Volume = 1, float FadeRate = 0.08 )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#fadeout","title":"Fadeout ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-fadeout-float-faderate-008","title":"void Fadeout ( float FadeRate = 0.08 )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#getcurrentmusicid","title":"Get\u00b7Current\u00b7Music\u00b7ID ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#music-getcurrentmusicid","title":"Music GetCurrentMusicID ( )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#getqueuedmusicid","title":"Get\u00b7Queued\u00b7Music\u00b7ID ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#music-getqueuedmusicid","title":"Music GetQueuedMusicID ( )","text":"<p>if nothing is queued, return the current music id</p>","tags":["Globals","Class"]},{"location":"MusicManager.html#isenabled","title":"Is\u00b7Enabled ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#boolean-isenabled","title":"boolean IsEnabled ( )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#islayerenabled","title":"Is\u00b7Layer\u00b7Enabled ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#boolean-islayerenabled-int-layerid-0","title":"boolean IsLayerEnabled ( int LayerId = 0 )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#pause","title":"Pause ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-pause","title":"void Pause ( )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#pitchslide","title":"Pitch\u00b7Slide ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-pitchslide-float-targetpitch","title":"void PitchSlide ( float TargetPitch )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#play","title":"Play ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-play-music-id-float-volume-1","title":"void Play ( Music ID, float Volume = 1 )","text":"Bug <p>If the ID parameter is negative or falls out of the allowed range of music IDs, this function will crash the game.</p>","tags":["Globals","Class"]},{"location":"MusicManager.html#queue","title":"Queue ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-queue-musicmanager-id","title":"void Queue ( MusicManager ID )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#resetpitch","title":"Reset\u00b7Pitch ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-resetpitch","title":"void ResetPitch ( )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#resume","title":"Resume ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-resume","title":"void Resume ( )","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#updatevolume","title":"Update\u00b7Volume ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-updatevolume","title":"void UpdateVolume ( )","text":"<p>This function sets the music volume to the volume defined in the options menu.</p>","tags":["Globals","Class"]},{"location":"MusicManager.html#volumeslide","title":"Volume\u00b7Slide ()","text":"","tags":["Globals","Class"]},{"location":"MusicManager.html#void-volumeslide-float-targetvolume-float-faderate-008","title":"void VolumeSlide ( float TargetVolume, float FadeRate = 0.08 )","text":"","tags":["Globals","Class"]},{"location":"Options.html","title":"Class \"Options\"","text":"<p>The <code>Options</code> class represents the values contained within the user's <code>options.ini</code> file. For example, this is useful so that mods that add things to the HUD can properly account for the <code>HUDOffset</code>.</p> <p>Note that mods have free reign to modify these values, so it is possible for a mod to e.g. change the volume to max and play sound effects. Please use this class responsibly.</p> <p>The <code>Options</code> class is a singleton that is exposed as a global variable. Thus, you can directly get and set values in the class without having to do anything first:</p> <pre><code>local bulletVisibility = Options.BulletVisibility -- \"bulletVisibility\" is now set to true or false\n\nOptions.ChargeBars = true -- Force charge bars to be on for the player\n</code></pre>","tags":["Globals","Class"]},{"location":"Options.html#variables","title":"Variables","text":"","tags":["Globals","Class"]},{"location":"Options.html#announcervoicemode","title":"Announcer\u00b7Voice\u00b7Mode","text":"","tags":["Globals","Class"]},{"location":"Options.html#int-announcervoicemode","title":"int AnnouncerVoiceMode","text":"<p>0: random, 1: off, 2: always on</p>","tags":["Globals","Class"]},{"location":"Options.html#bulletvisibility","title":"Bullet\u00b7Visibility","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-bulletvisibility","title":"boolean BulletVisibility","text":"","tags":["Globals","Class"]},{"location":"Options.html#camerastyle","title":"Camera\u00b7Style","text":"","tags":["Globals","Class"]},{"location":"Options.html#int-camerastyle","title":"int CameraStyle","text":"<p>active cam 1: on, 2: off</p>","tags":["Globals","Class"]},{"location":"Options.html#chargebars","title":"Charge\u00b7Bars","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-chargebars","title":"boolean ChargeBars","text":"","tags":["Globals","Class"]},{"location":"Options.html#consolefont","title":"Console\u00b7Font","text":"","tags":["Globals","Class"]},{"location":"Options.html#int-consolefont","title":"int ConsoleFont","text":"<p>0: default, 1: small, 2: tiny</p>","tags":["Globals","Class"]},{"location":"Options.html#debugconsoleenabled","title":"Debug\u00b7Console\u00b7Enabled","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-debugconsoleenabled","title":"boolean DebugConsoleEnabled","text":"","tags":["Globals","Class"]},{"location":"Options.html#displaypopups","title":"Display\u00b7Popups","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-displaypopups","title":"boolean DisplayPopups","text":"","tags":["Globals","Class"]},{"location":"Options.html#extrahudstyle","title":"Extra\u00b7HUD\u00b7Style","text":"","tags":["Globals","Class"]},{"location":"Options.html#int-extrahudstyle","title":"int ExtraHUDStyle","text":"<p>0: off, 1: on, 2: mini</p>","tags":["Globals","Class"]},{"location":"Options.html#fadedconsoledisplay","title":"Faded\u00b7Console\u00b7Display","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-fadedconsoledisplay","title":"boolean FadedConsoleDisplay","text":"","tags":["Globals","Class"]},{"location":"Options.html#filter","title":"Filter","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-filter","title":"boolean Filter","text":"","tags":["Globals","Class"]},{"location":"Options.html#foundhud","title":"Found\u00b7HUD","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-foundhud","title":"boolean FoundHUD","text":"","tags":["Globals","Class"]},{"location":"Options.html#fullscreen","title":"Fullscreen","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-fullscreen","title":"boolean Fullscreen","text":"","tags":["Globals","Class"]},{"location":"Options.html#gamma","title":"Gamma","text":"","tags":["Globals","Class"]},{"location":"Options.html#float-gamma","title":"float Gamma","text":"<p>0.5-1.5</p>","tags":["Globals","Class"]},{"location":"Options.html#hudoffset","title":"HUD\u00b7Offset","text":"","tags":["Globals","Class"]},{"location":"Options.html#float-hudoffset","title":"float HUDOffset","text":"<p>0-1</p> <p>Each notch in the options menu increments or decrements this by 0.1.</p>","tags":["Globals","Class"]},{"location":"Options.html#language","title":"Language","text":"","tags":["Globals","Class"]},{"location":"Options.html#string-language","title":"string Language","text":"<p>Read only</p>","tags":["Globals","Class"]},{"location":"Options.html#mapopacity","title":"Map\u00b7Opacity","text":"","tags":["Globals","Class"]},{"location":"Options.html#float-mapopacity","title":"float MapOpacity","text":"<p>0-1</p>","tags":["Globals","Class"]},{"location":"Options.html#maxrenderscale","title":"Max\u00b7Render\u00b7Scale","text":"","tags":["Globals","Class"]},{"location":"Options.html#int-maxrenderscale","title":"int MaxRenderScale","text":"<p>1-99</p>","tags":["Globals","Class"]},{"location":"Options.html#maxscale","title":"Max\u00b7Scale","text":"","tags":["Globals","Class"]},{"location":"Options.html#int-maxscale","title":"int MaxScale","text":"<p>1-99</p>","tags":["Globals","Class"]},{"location":"Options.html#mousecontrol","title":"Mouse\u00b7Control","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-mousecontrol","title":"boolean MouseControl","text":"","tags":["Globals","Class"]},{"location":"Options.html#musicvolume","title":"Music\u00b7Volume","text":"","tags":["Globals","Class"]},{"location":"Options.html#float-musicvolume","title":"float MusicVolume","text":"<p>0-1</p> <p>Attempting to set this to anything other than 0 or 1 will result in a bugged value. Thus, mods should never set this, lest they permanently blow away the end-user's previous setting.</p>","tags":["Globals","Class"]},{"location":"Options.html#pauseonfocuslost","title":"Pause\u00b7On\u00b7Focus\u00b7Lost","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-pauseonfocuslost","title":"boolean PauseOnFocusLost","text":"","tags":["Globals","Class"]},{"location":"Options.html#rumbleenabled","title":"Rumble\u00b7Enabled","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-rumbleenabled","title":"boolean RumbleEnabled","text":"","tags":["Globals","Class"]},{"location":"Options.html#savecommandhistory","title":"Save\u00b7Command\u00b7History","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-savecommandhistory","title":"boolean SaveCommandHistory","text":"","tags":["Globals","Class"]},{"location":"Options.html#sfxvolume","title":"SFX\u00b7Volume","text":"","tags":["Globals","Class"]},{"location":"Options.html#float-sfxvolume","title":"float SFXVolume","text":"<p>0-1</p> <p>Attempting to set this to anything other than 0 or 1 will result in a bugged value. Thus, mods should never set this, lest they permanently blow away the end-user's previous setting.</p>","tags":["Globals","Class"]},{"location":"Options.html#useborderlessfullscreen","title":"Use\u00b7Borderless\u00b7Fullscreen","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-useborderlessfullscreen","title":"boolean UseBorderlessFullscreen","text":"<p>Only takes effect if Fullscreen is also true.</p>","tags":["Globals","Class"]},{"location":"Options.html#vsync","title":"VSync","text":"","tags":["Globals","Class"]},{"location":"Options.html#boolean-vsync","title":"boolean VSync","text":"","tags":["Globals","Class"]},{"location":"PathFinder.html","title":"Class \"PathFinder\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>EntityNPC.Pathfinder</li> </ul>","tags":["Class"]},{"location":"PathFinder.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"PathFinder.html#evadetarget","title":"Evade\u00b7Target ()","text":"","tags":["Class"]},{"location":"PathFinder.html#void-evadetarget-vector-targetpos","title":"void EvadeTarget ( Vector TargetPos )","text":"","tags":["Class"]},{"location":"PathFinder.html#findgridpath","title":"Find\u00b7Grid\u00b7Path ()","text":"","tags":["Class"]},{"location":"PathFinder.html#void-findgridpath-vector-pos-float-speed-int-pathmarker-boolean-usedirectpath","title":"void FindGridPath ( Vector Pos, float Speed, int PathMarker, boolean UseDirectPath )","text":"","tags":["Class"]},{"location":"PathFinder.html#getevademovementcountdown","title":"Get\u00b7Evade\u00b7Movement\u00b7Countdown ()","text":"","tags":["Class"]},{"location":"PathFinder.html#int-getevademovementcountdown","title":"int GetEvadeMovementCountdown ( )","text":"","tags":["Class"]},{"location":"PathFinder.html#getgridindex","title":"Get\u00b7Grid\u00b7Index ()","text":"","tags":["Class"]},{"location":"PathFinder.html#int-getgridindex","title":"int GetGridIndex ( )","text":"","tags":["Class"]},{"location":"PathFinder.html#hasdirectpath","title":"Has\u00b7Direct\u00b7Path ()","text":"","tags":["Class"]},{"location":"PathFinder.html#boolean-hasdirectpath","title":"boolean HasDirectPath ( )","text":"","tags":["Class"]},{"location":"PathFinder.html#haspathtopos","title":"Has\u00b7Path\u00b7To\u00b7Pos ()","text":"","tags":["Class"]},{"location":"PathFinder.html#boolean-haspathtopos-vector-pos-boolean-ignorepoop","title":"boolean HasPathToPos ( Vector Pos, boolean IgnorePoop )","text":"<p>Used for safe check if any NPC is behind rocks/pits, doesn't disturb class members.</p>","tags":["Class"]},{"location":"PathFinder.html#moverandomly","title":"Move\u00b7Randomly ()","text":"","tags":["Class"]},{"location":"PathFinder.html#boolean-moverandomly-boolean-ignorestatuseffects","title":"boolean MoveRandomly ( boolean IgnoreStatusEffects )","text":"","tags":["Class"]},{"location":"PathFinder.html#moverandomlyaxisaligned","title":"Move\u00b7Randomly\u00b7Axis\u00b7Aligned ()","text":"","tags":["Class"]},{"location":"PathFinder.html#void-moverandomlyaxisaligned-float-speed-boolean-ignorestatuseffects","title":"void MoveRandomlyAxisAligned ( float Speed, boolean IgnoreStatusEffects )","text":"","tags":["Class"]},{"location":"PathFinder.html#moverandomlyboss","title":"Move\u00b7Randomly\u00b7Boss ()","text":"","tags":["Class"]},{"location":"PathFinder.html#void-moverandomlyboss-boolean-ignorestatuseffects","title":"void MoveRandomlyBoss ( boolean IgnoreStatusEffects )","text":"","tags":["Class"]},{"location":"PathFinder.html#reset","title":"Reset ()","text":"","tags":["Class"]},{"location":"PathFinder.html#void-reset","title":"void Reset ( )","text":"","tags":["Class"]},{"location":"PathFinder.html#resetmovementtarget","title":"Reset\u00b7Movement\u00b7Target ()","text":"","tags":["Class"]},{"location":"PathFinder.html#void-resetmovementtarget","title":"void ResetMovementTarget ( )","text":"","tags":["Class"]},{"location":"PathFinder.html#setcancrushrocks","title":"Set\u00b7Can\u00b7Crush\u00b7Rocks ()","text":"","tags":["Class"]},{"location":"PathFinder.html#void-setcancrushrocks-boolean-value","title":"void SetCanCrushRocks ( boolean value )","text":"","tags":["Class"]},{"location":"PathFinder.html#updategridindex","title":"Update\u00b7Grid\u00b7Index ()","text":"","tags":["Class"]},{"location":"PathFinder.html#void-updategridindex","title":"void UpdateGridIndex ( )","text":"","tags":["Class"]},{"location":"PlayerTypes_ActiveItemDesc.html","title":"Class \"PlayerTypesActiveItemDesc\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>EntityPlayer.SecondaryActiveItem</li> </ul> Example Code <pre><code>local player = Isaac.GetPlayer()\nlocal activeItemDesc = player.SecondaryActiveItem\n</code></pre>","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#batterycharge","title":"Battery\u00b7Charge","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#int-batterycharge","title":"int BatteryCharge","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#charge","title":"Charge","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#int-charge","title":"int Charge","text":"<p>For items like Jars this holds the number of flies/hearts.</p>","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#item","title":"Item","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#collectibletype-item","title":"CollectibleType Item","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#partialcharge","title":"PartialCharge","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#float-partialcharge","title":"float PartialCharge","text":"<p>How close the item is to gaining another charge (0-1 range, used by 4.5 Volt)</p>","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#subcharge","title":"SubCharge","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#int-subcharge","title":"int SubCharge","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#timedrechargecooldown","title":"TimedRechargeCooldown","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#int-timedrechargecooldown","title":"int TimedRechargeCooldown","text":"<p>Number of frames before an item with a timed cooldown can recharge again (used by Spin To Win to pause its recharge after fully discharging it)</p>","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#vardata","title":"VarData","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_ActiveItemDesc.html#int-vardata","title":"int VarData","text":"<p>Holds extra information for some active items (such as the number of uses for Jar of Wisps)</p>","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_PosVel.html","title":"Class \"PlayerTypesPosVel\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>EntityPlayer:GetMultiShotPositionVelocity()</li> </ul>","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_PosVel.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_PosVel.html#position","title":"Position","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_PosVel.html#vector-position","title":"Vector Position","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_PosVel.html#velocity","title":"Velocity","text":"","tags":["Class"],"boost":0.25},{"location":"PlayerTypes_PosVel.html#vector-velocity","title":"Vector Velocity","text":"","tags":["Class"],"boost":0.25},{"location":"ProjectileParams.html","title":"Class \"ProjectileParams\"","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#projectileparams","title":"Projectile\u00b7Params ()","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#projectileparams-projectileparams","title":"ProjectileParams ProjectileParams ( )","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#variables","title":"Variables","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#acceleration","title":"Acceleration","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-acceleration","title":"float Acceleration","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#bulletflags","title":"Bullet\u00b7Flags","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#int-bulletflags","title":"int BulletFlags","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#changeflags","title":"Change\u00b7Flags","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#int-changeflags","title":"int ChangeFlags","text":"<p>Uses ProjectileFlags to define the projectile attributes after the \"Changed\" state was activated. The ProjectileFlag.CHANGE_FLAGS_AFTER_TIMEOUT needs to be set to allow for this change to apply!</p> <p>Informations about \"Changed\" State:</p> <p>Projectiles can have two states: normal (default) and changed.</p> <p>Changed state activates when projectile's frame count reaches the value set in ChangeTimeout. After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity.</p> <p>Also used in: EntityProjectile</p>","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#changetimeout","title":"Change\u00b7Timeout","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#int-changetimeout","title":"int ChangeTimeout","text":"<p>Number of frames that need to elapse after spawn till the \"Changed\" state is activated. The ProjectileFlag.CHANGE_FLAGS_AFTER_TIMEOUT or CHANGE_VELOCITY_AFTER_TIMEOUT need to be set to allow for this change to apply!</p> <p>Informations about \"Changed\" State:</p> <p>Projectiles can have two states: normal (default) and changed.</p> <p>Changed state activates when projectile's frame count reaches the value set in ChangeTimeout. After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity.</p> <p>Also used in: EntityProjectile</p>","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#changevelocity","title":"Change\u00b7Velocity","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-changevelocity","title":"float ChangeVelocity","text":"<p>Velocity value that gets applied when the \"Changed\" state is activated. The ProjectileFlag.CHANGE_VELOCITY_AFTER_TIMEOUT need to be set to allow for this change to apply!</p> <p>Informations about \"Changed\" State:</p> <p>Projectiles can have two states: normal (default) and changed.</p> <p>Changed state activates when projectile's frame count reaches the value set in ChangeTimeout. After that its flags get changed to what was set in ChangeFlags and velocity will be resized to length set in ChangeVelocity.</p> <p>Also used in: EntityProjectile</p>","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#circleangle","title":"Circle\u00b7Angle","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-circleangle","title":"float CircleAngle","text":"<p>Angle offset used by fire_projectiles PROJECTILES_CIRCLE type emitter. Random by default.</p>","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#color","title":"Color","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#color-color","title":"Color Color","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#curvingstrength","title":"Curving\u00b7Strength","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-curvingstrength","title":"float CurvingStrength","text":"<p>Use very small values for curving like 0.005.</p>","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#depthoffset","title":"Depth\u00b7Offset","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-depthoffset","title":"float DepthOffset","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#dotproductlimit","title":"Dot\u00b7Product\u00b7Limit","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-dotproductlimit","title":"float DotProductLimit","text":"<p>Direction bullets are being fired in Dot product of FireDirectionLimit, bullet direction must be &gt;= this value</p>","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#fallingaccelmodifier","title":"Falling\u00b7Accel\u00b7Modifier","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-fallingaccelmodifier","title":"float FallingAccelModifier","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#fallingspeedmodifier","title":"Falling\u00b7Speed\u00b7Modifier","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-fallingspeedmodifier","title":"float FallingSpeedModifier","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#firedirectionlimit","title":"Fire\u00b7Direction\u00b7Limit","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#vector-firedirectionlimit","title":"Vector FireDirectionLimit","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#gridcollision","title":"Grid\u00b7Collision","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#boolean-gridcollision","title":"boolean GridCollision","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#heightmodifier","title":"Height\u00b7Modifier","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-heightmodifier","title":"float HeightModifier","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#homingstrength","title":"Homing\u00b7Strength","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-homingstrength","title":"float HomingStrength","text":"<p>Multiplier on normal homing strength. Unused if SMART bullet flag is not set.</p>","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#positionoffset","title":"Position\u00b7Offset","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#vector-positionoffset","title":"Vector PositionOffset","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#scale","title":"Scale","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-scale","title":"float Scale","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#spread","title":"Spread","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-spread","title":"float Spread","text":"<p>For quad/quint/etc spread shots.</p>","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#targetposition","title":"Target\u00b7Position","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#vector-targetposition","title":"Vector TargetPosition","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#variant","title":"Variant","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#int-variant","title":"int Variant","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#velocitymulti","title":"Velocity\u00b7Multi","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#float-velocitymulti","title":"float VelocityMulti","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#wiggleframeoffset","title":"Wiggle\u00b7Frame\u00b7Offset","text":"","tags":["Globals","Class"],"boost":0.25},{"location":"ProjectileParams.html#int-wiggleframeoffset","title":"int WiggleFrameOffset","text":"<p>Used to offset the wiggle wave.</p>","tags":["Globals","Class"],"boost":0.25},{"location":"QueueItemData.html","title":"Class \"QueueItemData\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>EntityPlayer.QueuedItem</li> </ul> Example Code <pre><code>local player = Isaac.GetPlayer()\nlocal queueItemData = player.QueuedItem\n</code></pre>","tags":["Class"],"boost":0.25},{"location":"QueueItemData.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"QueueItemData.html#charge","title":"Charge","text":"","tags":["Class"],"boost":0.25},{"location":"QueueItemData.html#int-charge","title":"int Charge","text":"","tags":["Class"],"boost":0.25},{"location":"QueueItemData.html#item","title":"Item","text":"","tags":["Class"],"boost":0.25},{"location":"QueueItemData.html#itemconfig-item-item","title":"ItemConfig Item Item","text":"","tags":["Class"],"boost":0.25},{"location":"QueueItemData.html#touched","title":"Touched","text":"","tags":["Class"],"boost":0.25},{"location":"QueueItemData.html#boolean-touched","title":"boolean Touched","text":"","tags":["Class"],"boost":0.25},{"location":"RNG.html","title":"Class \"RNG\"","text":"<p>The RNG class is provdes a mechanism to produce seeded random numbers. This is used heavily by both the game and mods.</p>","tags":["Globals","Class"]},{"location":"RNG.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"]},{"location":"RNG.html#rng","title":"RNG ()","text":"","tags":["Globals","Class"]},{"location":"RNG.html#rng-rng","title":"RNG RNG ( )","text":"<p>New RNG objects are always initialized with a seed of 2853650767. Thus, after invoking the constructor, you must set the seed of the new RNG object to the initial seed that you want. In some cases, this can just be a new random number between 1 and 4294967295. Use the <code>Random</code> global function to get a starting seed for these cases, (but check to make sure that values of 0 are not allowed, since that will crash the game). However, in most cases, seeding with a completely random number would be a bug in your mod, because all behavior in Isaac should be deterministic based on the starting seed of the run, or the seed of the level, or the seed of the room, and so on.</p> <p>When setting the seed, it is recommended to use a shift index of 35, which is what most of the game's internal functions use. Document this number as a constant using SHOUTING_SNAKE_CASE so that you avoid using magic numbers in your program.</p> Example code <pre><code>-- This is the ShiftIdx that Blade recommended after having reviewing the game's internal functions.\n-- Any value between 0 and 80 (inclusive) should work equally well.\n-- https://www.jstatsoft.org/article/view/v008i14/xorshift.pdf\nlocal RECOMMENDED_SHIFT_IDX = 35\n\nlocal game = Game()\nlocal seeds = game:GetSeeds()\nlocal startSeed = seeds:GetStartSeed()\nlocal rng = RNG()\nrng:SetSeed(startSeed, RECOMMENDED_SHIFT_IDX)\nlocal myRandomNumber = rng:RandomInt(4) -- Will be either 0, 1, 2, or 3.\n</code></pre>","tags":["Globals","Class"]},{"location":"RNG.html#functions","title":"Functions","text":"","tags":["Globals","Class"]},{"location":"RNG.html#getseed","title":"Get\u00b7Seed ()","text":"","tags":["Globals","Class"]},{"location":"RNG.html#int-getseed","title":"int GetSeed ( )","text":"<p>Returns the current seed of the RNG object.</p>","tags":["Globals","Class"]},{"location":"RNG.html#next","title":"Next ()","text":"","tags":["Globals","Class"]},{"location":"RNG.html#int-next","title":"int Next ( )","text":"<p>\"Iterates\" the RNG's seed to the next random number in the psuedo-random sequence. (The internal PRNG algorithm used is Xorshift.)</p>","tags":["Globals","Class"]},{"location":"RNG.html#randomfloat","title":"Random\u00b7Float ()","text":"","tags":["Globals","Class"]},{"location":"RNG.html#float-randomfloat","title":"float RandomFloat ( )","text":"<p>Returns a number between 0 and 1. This is inclusive on the lower end and exclusive on the higher end.</p> <p>Note that this will automatically call the <code>RNG.Next</code> method before retrieving the random number. Since this mutates the RNG object, you should use this method with care.</p> Example code <pre><code>-- This is the ShiftIdx that Blade recommended after having reviewing the game's internal functions.\n-- Any value between 0 and 80 (inclusive) should work equally well.\n-- https://www.jstatsoft.org/article/view/v008i14/xorshift.pdf\nlocal RECOMMENDED_SHIFT_IDX = 35\nlocal MY_ENTITY_CHANCE = 0.3 -- 30%\n\nfunction shouldEntityDoThing(entity)\n  local rng = RNG()\n  rng:SetSeed(entity.InitSeed, RECOMMENDED_SHIFT_IDX)\n  local randomChance = myRNG:RandomFloat()\n  return randomChance &lt; MY_ENTITY_CHANCE\nend\n</code></pre>","tags":["Globals","Class"]},{"location":"RNG.html#randomint","title":"Random\u00b7Int ()","text":"","tags":["Globals","Class"]},{"location":"RNG.html#int-randomint-int-max","title":"int RandomInt ( int Max )","text":"<p>Returns a number between 0 and the max value. It is inclusive on the lower end and exclusive on the higher end.</p> <p>Note that this will automatically call the <code>RNG.Next</code> method before retrieving the random number. Since this mutates the RNG object, you should use this method with care.</p> Example code <pre><code>local RECOMMENDED_SHIFT_IDX = 35\n\nfunction getZeroOneTwoOrThree(seed)\n  local rng = RNG()\n  rng:SetSeed(seed, RECOMMENDED_SHIFT_IDX)\n  return rng:RandomInt(4) -- Will generate 0, 1, 2, or 3.\nend\n</code></pre>","tags":["Globals","Class"]},{"location":"RNG.html#setseed","title":"Set\u00b7Seed ()","text":"","tags":["Globals","Class"]},{"location":"RNG.html#void-setseed-int-seed-int-shiftidx","title":"void SetSeed ( int Seed, int ShiftIdx )","text":"<p>Set the seed of a given RNG object. Seed needs to be a positive integer number that is not 0. Otherwise it can cause crashes. ShiftIdx must be between 0 and 80 (inclusive) or it can cause crashes.</p> <p>Shift index table can be found here: https://gist.github.com/bladecoding/17b341ed08ff94d2deb704ebda8ffc5f</p> Bug <p>If the seed of an RNG object is set to 0, the game will crash after invoking a method like <code>Next()</code>, <code>RandomInt()</code>, etc.</p> Example code <pre><code>local myRNG = RNG()\nmyRNG:SetSeed(Random(), 1)\n</code></pre>","tags":["Globals","Class"]},{"location":"Room.html","title":"Class \"Room\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Game:GetRoom()</li> <li>Level:GetCurrentRoom()</li> </ul> Example Code <pre><code>local room = Game():GetRoom()\n</code></pre>","tags":["Class"]},{"location":"Room.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Room.html#checkline","title":"Check\u00b7Line ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-checkline-vector-pos1-vector-pos2-linecheckmode-mode-int-gridpaththreshold-0-boolean-ignorewalls-false-boolean-ignorecrushable-false","title":"boolean CheckLine ( Vector Pos1, Vector Pos2, LinecheckMode Mode, int GridPathThreshold = 0, boolean IgnoreWalls = false, boolean IgnoreCrushable = false )","text":"<p>Returns 2 values:         * boolean: true if there are no obstructions between Pos1 and Pos2, false otherwise         * Vector: first hit position from Pos1 to Pos2 (returns Pos2 if the line didn't hit anything)</p> LinecheckMode notes <p>LinecheckMode pseudo-enumeration:</p> <p>0 : makes the line check collide with anything that impedes ground movement</p> <p>1 : is a cheaper version of 0, but is not as reliable (For example, can return true if line of sight can be gained between diagonally adjacent rocks)</p> <p>2 : is used for explosions, it only collides with walls and indestructible blocks</p> <p>3 : is a line check that only collides with obstacles that can block projectiles</p> GridPathThreshold notes <p>GridPath values pseudo-enumeration:</p> <p>900  : Set by some enemies when they pass through a tile. De-prioritises the tile for pathfinders. Degrades over time in steps of 100.</p> <p>950  : Set by fire places. De-prioritises the tile for pathfinders. Does not degrade.</p> <p>1000 : Set by grid entities. Invalidates the tile for pathfinders. Impedes grounded player movement. Does not degrade.</p> <p>3000 : Set by pits. Invalidates the tile for pathfinders. Impedes grounded player movement. Does not degrade.</p> <p>3999 : Set by grimaces. Invalidates the tile for pathfinders. Impedes grounded player movement. Drops to 900 and then degrades over time in steps of 100 (Grimaces reset value every frame).</p>","tags":["Class"]},{"location":"Room.html#damagegrid","title":"Damage\u00b7Grid ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-damagegrid-int-index-int-damage","title":"boolean DamageGrid ( int Index, int Damage )","text":"<p>Damage Grid Entities currently this concerns GridEntityPoop and GridEntity_Fire returns true if damageable entity was found (and possibly damaged) return false if not used by tears, bombs, some NPCs, etc</p>","tags":["Class"]},{"location":"Room.html#destroygrid","title":"Destroy\u00b7Grid ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-destroygrid-int-index-boolean-immediate","title":"boolean DestroyGrid ( int Index, boolean Immediate )","text":"<p>Calls DamageGrid internally to damage Poop/Fire removes rocks and opens secret doors. Returns <code>true</code> if something was destroyed.</p>","tags":["Class"]},{"location":"Room.html#emitbloodfromwalls","title":"Emit\u00b7Blood\u00b7From\u00b7Walls ()","text":"","tags":["Class"]},{"location":"Room.html#void-emitbloodfromwalls-int-duration-int-count","title":"void EmitBloodFromWalls ( int Duration, int Count )","text":"","tags":["Class"]},{"location":"Room.html#findfreepickupspawnposition","title":"Find\u00b7Free\u00b7Pickup\u00b7Spawn\u00b7Position ()","text":"","tags":["Class"]},{"location":"Room.html#vector-findfreepickupspawnposition-vector-pos-float-initialstep-0-boolean-avoidactiveentities-false-boolean-allowpits-false","title":"Vector FindFreePickupSpawnPosition ( Vector Pos, float InitialStep = 0, boolean AvoidActiveEntities = false, boolean AllowPits = false )","text":"<p>Starting from <code>Pos</code>, will try to find a free spawn position where a newly spawned pickup item will not collide with already spawned pickup items, or solid grid elements such as rocks, or pits The returned position will be aligned to the grid. If no free position is found, the original position (aligned to the grid) is returned.</p>","tags":["Class"]},{"location":"Room.html#findfreetileposition","title":"Find\u00b7Free\u00b7Tile\u00b7Position ()","text":"","tags":["Class"]},{"location":"Room.html#vector-findfreetileposition-vector-pos-float-distancethreshold","title":"Vector FindFreeTilePosition ( Vector Pos, float DistanceThreshold )","text":"<p>Finds the nearest free tile based on position Stops immediately if the tile sampled has a squared distance less than <code>DistanceThresholdSQ</code>.</p>","tags":["Class"]},{"location":"Room.html#getalivebossescount","title":"Get\u00b7Alive\u00b7Bosses\u00b7Count ()","text":"","tags":["Class"]},{"location":"Room.html#int-getalivebossescount","title":"int GetAliveBossesCount ( )","text":"","tags":["Class"]},{"location":"Room.html#getaliveenemiescount","title":"Get\u00b7Alive\u00b7Enemies\u00b7Count ()","text":"","tags":["Class"]},{"location":"Room.html#int-getaliveenemiescount","title":"int GetAliveEnemiesCount ( )","text":"","tags":["Class"]},{"location":"Room.html#getawardseed","title":"Get\u00b7Award\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Room.html#int-getawardseed","title":"int GetAwardSeed ( )","text":"","tags":["Class"]},{"location":"Room.html#getbackdroptype","title":"Get\u00b7Backdrop\u00b7Type ()","text":"","tags":["Class"]},{"location":"Room.html#backdroptype-getbackdroptype","title":"BackdropType GetBackdropType ( )","text":"<p>Returns the BackdropType of the current room.</p>","tags":["Class"]},{"location":"Room.html#getbossid","title":"Get\u00b7Boss\u00b7ID ()","text":"","tags":["Class"]},{"location":"Room.html#int-getbossid","title":"int GetBossID ( )","text":"<p>Returns the boss ID of the first boss in the room. Returns 0 otherwise.</p> <p>This will return the sub-type of the current room, since this value is used to determine the boss portrait to display when entering.</p> <p>A boss ID is not equal to the entity type of the boss; it is a separate value in the entities2.xml file inside the \"bossID\" attribute.</p>","tags":["Class"]},{"location":"Room.html#getbottomrightpos","title":"Get\u00b7Bottom\u00b7Right\u00b7Pos ()","text":"","tags":["Class"]},{"location":"Room.html#vector-getbottomrightpos","title":"Vector GetBottomRightPos ( )","text":"<p>Returns bottom right position of the room, inside of the wall border.</p>","tags":["Class"]},{"location":"Room.html#getbrokenwatchstate","title":"Get\u00b7Broken\u00b7Watch\u00b7State ()","text":"","tags":["Class"]},{"location":"Room.html#int-getbrokenwatchstate","title":"int GetBrokenWatchState ( )","text":"<p>Returns whether the room is slowed down, sped up or neither.</p> Note <p>Return values:</p> <p>0: Room is neither slowed down nor sped up</p> <p>1: Room is slowed down, either because of the Broken Watch or because of the I'm Drowsy pill</p> <p>2: Room is sped up, either because of the Broken Watch or because of the I'm Excited!!! pill</p>","tags":["Class"]},{"location":"Room.html#getcenterpos","title":"Get\u00b7Center\u00b7Pos ()","text":"","tags":["Class"]},{"location":"Room.html#vector-getcenterpos","title":"Vector GetCenterPos ( )","text":"<p>Returns the room center position.</p>","tags":["Class"]},{"location":"Room.html#getclampedgridindex","title":"Get\u00b7Clamped\u00b7Grid\u00b7Index ()","text":"","tags":["Class"]},{"location":"Room.html#int-getclampedgridindex-vector-position","title":"int GetClampedGridIndex ( Vector Position )","text":"<p>Returns the grid index located at <code>Position</code>. Clamps to the nearest grid index if <code>Position</code> is out of bounds.</p>","tags":["Class"]},{"location":"Room.html#getclampedposition","title":"Get\u00b7Clamped\u00b7Position ()","text":"","tags":["Class"]},{"location":"Room.html#vector-getclampedposition-vector-pos-float-margin","title":"Vector GetClampedPosition ( Vector Pos, float Margin )","text":"<p>Returns <code>Pos</code> clamped to within the room's walls with a radius of <code>Margin</code> units away from out of bounds.</p>","tags":["Class"]},{"location":"Room.html#getdecorationseed","title":"Get\u00b7Decoration\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Room.html#int-getdecorationseed","title":"int GetDecorationSeed ( )","text":"","tags":["Class"]},{"location":"Room.html#getdeliriumdistance","title":"Get\u00b7Delirium\u00b7Distance ()","text":"","tags":["Class"]},{"location":"Room.html#int-getdeliriumdistance","title":"int GetDeliriumDistance ( )","text":"","tags":["Class"]},{"location":"Room.html#getdevilroomchance","title":"Get\u00b7Devil\u00b7Room\u00b7Chance ()","text":"","tags":["Class"]},{"location":"Room.html#float-getdevilroomchance","title":"float GetDevilRoomChance ( )","text":"","tags":["Class"]},{"location":"Room.html#getdoor","title":"Get\u00b7Door ()","text":"","tags":["Class"]},{"location":"Room.html#gridentitydoor-getdoor-doorslot-slot","title":"GridEntityDoor GetDoor ( DoorSlot Slot )","text":"<p>Returns the GridEntityDoor at the given DoorSlot position. Returns <code>nil</code> if no Door is located there.</p>","tags":["Class"]},{"location":"Room.html#getdoorslotposition","title":"Get\u00b7Door\u00b7Slot\u00b7Position ()","text":"","tags":["Class"]},{"location":"Room.html#vector-getdoorslotposition-doorslot-slot","title":"Vector GetDoorSlotPosition ( DoorSlot Slot )","text":"","tags":["Class"]},{"location":"Room.html#getdungeonrockidx","title":"Get\u00b7Dungeon\u00b7Rock\u00b7Idx ()","text":"","tags":["Class"]},{"location":"Room.html#int-getdungeonrockidx","title":"int GetDungeonRockIdx ( )","text":"","tags":["Class"]},{"location":"Room.html#getenemydamageinflicted","title":"Get\u00b7Enemy\u00b7Damage\u00b7Inflicted ()","text":"","tags":["Class"]},{"location":"Room.html#float-getenemydamageinflicted","title":"float GetEnemyDamageInflicted ( )","text":"<p>Returns the total amount of HP lost by all enemies in the room within the current frame.</p> <p>This is used by items that charge on damage inflicted, such as Berserk.</p>","tags":["Class"]},{"location":"Room.html#getentities","title":"Get\u00b7Entities ()","text":"","tags":["Class"]},{"location":"Room.html#entitylist-getentities","title":"EntityList GetEntities ( )","text":"<p>Returns an raw pointer to the array that stores all entities in the current room. Therefore, iterating over the return value will always iterate over the entities present in the room during the current logic frame, regardless of then the initial instance of GetEntities was created.</p> <p>This behavior is different to <code>Isaac.GetRoomEntities()</code>, which returns an iterable table of the entities in the room at the time the function was called. For most usecases, its advised to use <code>Isaac.GetRoomEntities()</code>!</p> Example Code <p>This code prints the Type, Variant and SubType of each entity in the room.</p> <pre><code>local room = Game():GetRoom()\nlocal roomEntities = room:GetEntities()\nfor i = 0, #roomEntities - 1 do\n    local entity = roomEntities:Get(i)\n    print(entity.Type, entity.Variant, entity.SubType)\nend\n</code></pre>","tags":["Class"]},{"location":"Room.html#getframecount","title":"Get\u00b7Frame\u00b7Count ()","text":"","tags":["Class"]},{"location":"Room.html#int-getframecount","title":"int GetFrameCount ( )","text":"<p>Returns the amount of frames the room has been active for. Resets to <code>0</code> when the player leaves the room or the run is exited.</p>","tags":["Class"]},{"location":"Room.html#getgridcollision","title":"Get\u00b7Grid\u00b7Collision ()","text":"","tags":["Class"]},{"location":"Room.html#gridcollisionclass-getgridcollision-int-gridindex","title":"GridCollisionClass GetGridCollision ( int GridIndex )","text":"<p>Returns the GridCollisionClass of the grid entity at this grid index.</p>","tags":["Class"]},{"location":"Room.html#getgridcollisionatpos","title":"Get\u00b7Grid\u00b7Collision\u00b7At\u00b7Pos ()","text":"","tags":["Class"]},{"location":"Room.html#gridcollisionclass-getgridcollisionatpos-vector-pos","title":"GridCollisionClass GetGridCollisionAtPos ( Vector Pos )","text":"<p>Returns the GridCollisionClass of the grid entity at this position in the room.</p>","tags":["Class"]},{"location":"Room.html#getgridentity","title":"Get\u00b7Grid\u00b7Entity ()","text":"","tags":["Class"]},{"location":"Room.html#gridentity-getgridentity-int-index","title":"GridEntity GetGridEntity ( int Index )","text":"<p>Returns the GridEntity at this grid index. Returns <code>nil</code> when no GridEntity is found.</p>","tags":["Class"]},{"location":"Room.html#getgridentityfrompos","title":"Get\u00b7Grid\u00b7Entity\u00b7From\u00b7Pos ()","text":"","tags":["Class"]},{"location":"Room.html#gridentity-getgridentityfrompos-vector-position","title":"GridEntity GetGridEntityFromPos ( Vector Position )","text":"<p>Returns the GridEntity at this position in the room. Returns <code>nil</code> when no GridEntity is found.</p>","tags":["Class"]},{"location":"Room.html#getgridheight","title":"Get\u00b7Grid\u00b7Height ()","text":"","tags":["Class"]},{"location":"Room.html#int-getgridheight","title":"int GetGridHeight ( )","text":"","tags":["Class"]},{"location":"Room.html#getgridindex","title":"Get\u00b7Grid\u00b7Index ()","text":"","tags":["Class"]},{"location":"Room.html#int-getgridindex-vector-position","title":"int GetGridIndex ( Vector Position )","text":"<p>Returns the grid index located at <code>Position</code>. Returns <code>-1</code> for invalid index.</p>","tags":["Class"]},{"location":"Room.html#getgridpath","title":"Get\u00b7Grid\u00b7Path ()","text":"","tags":["Class"]},{"location":"Room.html#int-getgridpath-int-index","title":"int GetGridPath ( int Index )","text":"<p>Grid path is a property of a grid square that represents the \"cost\" of traveling over this grid cell. Its used for the path finding algorithms which search the cheapest path to a given location. If a grid cell has a value higher than 0, it can prevent grid entities from being spawned on that square. Thus, you can get around it by resetting the grid path to 0, and then spawning the grid entity.</p> notes <p>GridPath values pseudo-enumeration:</p> <p>900  : Set by some enemies when they pass through a tile. De-prioritises the tile for pathfinders. Degrades over time in steps of 100.</p> <p>950  : Set by fire places. De-prioritises the tile for pathfinders. Does not degrade.</p> <p>1000 : Set by grid entities. Invalidates the tile for pathfinders. Impedes grounded player movement. Does not degrade.</p> <p>3000 : Set by pits. Invalidates the tile for pathfinders. Impedes grounded player movement. Does not degrade.</p> <p>3999 : Set by grimaces. Invalidates the tile for pathfinders. Impedes grounded player movement. Drops to 900 and then degrades over time in steps of 100 (Grimaces reset value every frame).</p>","tags":["Class"]},{"location":"Room.html#getgridpathfrompos","title":"Get\u00b7Grid\u00b7Path\u00b7From\u00b7Pos ()","text":"","tags":["Class"]},{"location":"Room.html#int-getgridpathfrompos-vector-position","title":"int GetGridPathFromPos ( Vector Position )","text":"notes <p>GridPath values pseudo-enumeration:</p> <p>900  : Set by some enemies when they pass through a tile. De-prioritises the tile for pathfinders. Degrades over time in steps of 100.</p> <p>950  : Set by fire places. De-prioritises the tile for pathfinders. Does not degrade.</p> <p>1000 : Set by grid entities. Invalidates the tile for pathfinders. Impedes grounded player movement. Does not degrade.</p> <p>3000 : Set by pits. Invalidates the tile for pathfinders. Impedes grounded player movement. Does not degrade.</p> <p>3999 : Set by grimaces. Invalidates the tile for pathfinders. Impedes grounded player movement. Drops to 900 and then degrades over time in steps of 100 (Grimaces reset value every frame).</p>","tags":["Class"]},{"location":"Room.html#getgridposition","title":"Get\u00b7Grid\u00b7Position ()","text":"","tags":["Class"]},{"location":"Room.html#vector-getgridposition-int-gridindex","title":"Vector GetGridPosition ( int GridIndex )","text":"<p>Returns the world position of <code>GridIndex</code>, even if <code>GridIndex</code> is invalid.</p>","tags":["Class"]},{"location":"Room.html#getgridsize","title":"Get\u00b7Grid\u00b7Size ()","text":"","tags":["Class"]},{"location":"Room.html#int-getgridsize","title":"int GetGridSize ( )","text":"","tags":["Class"]},{"location":"Room.html#getgridwidth","title":"Get\u00b7Grid\u00b7Width ()","text":"","tags":["Class"]},{"location":"Room.html#int-getgridwidth","title":"int GetGridWidth ( )","text":"","tags":["Class"]},{"location":"Room.html#getlasertarget","title":"Get\u00b7Laser\u00b7Target ()","text":"","tags":["Class"]},{"location":"Room.html#vector-getlasertarget-vector-pos-vector-dir","title":"Vector GetLaserTarget ( Vector Pos, Vector Dir )","text":"<p>Returns the hit position for a laser beam (Technology, Robo-Baby). Usually this is the first poop, fire, rock, TNT, or wall encountered in a straight line.</p>","tags":["Class"]},{"location":"Room.html#getlavaintensity","title":"Get\u00b7Lava\u00b7Intensity ()","text":"","tags":["Class"]},{"location":"Room.html#float-getlavaintensity","title":"float GetLavaIntensity ( )","text":"<p>Usually returns 1, unless the lava is in the process of being cooled down by Flush! or other room flooding effects, in which case this will gradually decrease down to 0.</p>","tags":["Class"]},{"location":"Room.html#getlightingalpha","title":"Get\u00b7Lighting\u00b7Alpha ()","text":"","tags":["Class"]},{"location":"Room.html#float-getlightingalpha","title":"float GetLightingAlpha ( )","text":"","tags":["Class"]},{"location":"Room.html#getlroomareadesc","title":"Get\u00b7LRoom\u00b7Area\u00b7Desc ()","text":"","tags":["Class"]},{"location":"Room.html#lroomareadesc-getlroomareadesc","title":"LRoomAreaDesc GetLRoomAreaDesc ( )","text":"Bug <p>Since it returns UserData, this function is unusable and therefore broken.</p>","tags":["Class"]},{"location":"Room.html#getlroomtiledesc","title":"Get\u00b7LRoom\u00b7Tile\u00b7Desc ()","text":"","tags":["Class"]},{"location":"Room.html#lroomtiledesc-getlroomtiledesc","title":"LRoomTileDesc GetLRoomTileDesc ( )","text":"Bug <p>Since it returns UserData, this function is unusable and therefore broken.</p>","tags":["Class"]},{"location":"Room.html#getrandomposition","title":"Get\u00b7Random\u00b7Position ()","text":"","tags":["Class"]},{"location":"Room.html#vector-getrandomposition-float-margin","title":"Vector GetRandomPosition ( float Margin )","text":"<p>Returns a random position in the room with a radius of <code>Margin</code> units away from any obstacles. This position is not alligned with the grid.</p>","tags":["Class"]},{"location":"Room.html#getrandomtileindex","title":"Get\u00b7Random\u00b7Tile\u00b7Index ()","text":"","tags":["Class"]},{"location":"Room.html#int-getrandomtileindex-int-seed","title":"int GetRandomTileIndex ( int Seed )","text":"","tags":["Class"]},{"location":"Room.html#getredheartdamage","title":"Get\u00b7Red\u00b7Heart\u00b7Damage ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-getredheartdamage","title":"boolean GetRedHeartDamage ( )","text":"<p>Returns <code>true</code> if the player took non-self inflicted damage to a red heart container while in the room. Resets to <code>false</code> if the player leaves the room or exits the run.</p>","tags":["Class"]},{"location":"Room.html#getrendermode","title":"Get\u00b7Render\u00b7Mode ()","text":"","tags":["Class"]},{"location":"Room.html#rendermode-getrendermode","title":"RenderMode GetRenderMode ( )","text":"<p>Returns a RenderMode enum which can be used to render entities differently depending on context (i.e. custom water reflections).</p>","tags":["Class"]},{"location":"Room.html#getrenderscrolloffset","title":"Get\u00b7Render\u00b7Scroll\u00b7Offset ()","text":"","tags":["Class"]},{"location":"Room.html#const-vector-getrenderscrolloffset","title":"const Vector GetRenderScrollOffset ( )","text":"<p>The camera scroll offset and screen shake offsets are both represented here.</p>","tags":["Class"]},{"location":"Room.html#getrendersurfacetopleft","title":"Get\u00b7Render\u00b7Surface\u00b7Top\u00b7Left ()","text":"","tags":["Class"]},{"location":"Room.html#const-vector-getrendersurfacetopleft","title":"const Vector GetRenderSurfaceTopLeft ( )","text":"<p>The position the floor and wall textures will be rendered at.</p>","tags":["Class"]},{"location":"Room.html#getroomconfigstage","title":"Get\u00b7Room\u00b7Config\u00b7Stage ()","text":"","tags":["Class"]},{"location":"Room.html#int-getroomconfigstage","title":"int GetRoomConfigStage ( )","text":"<p>Returns the ID of the stage the room was designed for.</p> Stage IDs (corresponds to IDs in stages.xml) DLC ID Stage Comment 0 Special Rooms 1 Basement 2 Cellar 3 Burning Basement 4 Caves 5 Catacombs 6 Flooded Caves 7 Depths 8 Necropolis 9 Dank Depths 10 Womb 11 Utero 12 Scarred Womb 13 Blue Womb 14 Sheol 15 Cathedral 16 Dark Room 17 Chest 18 Greed Special Rooms 19 Greed Basement 20 Greed Caves 21 Greed Depths 22 Greed Womb 23 Greed Sheol 24 The Shop 25 Ultra Greed 26 The Void 27 Downpour 28 Dross 29 Mines 30 Ashpit 31 Mausoleum 32 Gehenna 33 Corpse 35 Home The Stage ID of 34 does not exist. 36 Backwards These rooms are used during the Ascent.","tags":["Class"]},{"location":"Room.html#getroomshape","title":"Get\u00b7Room\u00b7Shape ()","text":"","tags":["Class"]},{"location":"Room.html#roomshape-getroomshape","title":"RoomShape GetRoomShape ( )","text":"","tags":["Class"]},{"location":"Room.html#getsecondbossid","title":"Get\u00b7Second\u00b7Boss\u00b7ID ()","text":"","tags":["Class"]},{"location":"Room.html#int-getsecondbossid","title":"int GetSecondBossID ( )","text":"<p>Returns the boss ID of the second boss in a double trouble room. Returns 0 otherwise.</p> <p>A boss ID is not equal to the entity type of the boss; it is a separate value in the entities2.xml file inside the \"bossID\" attribute.</p> <p>Checking for this value is not sufficient to detect a Double Trouble room because a Double Trouble room can contain two of the same boss. If this is the case, then the value of the second boss ID will be equal to 0.</p>","tags":["Class"]},{"location":"Room.html#getseededcollectible","title":"Get\u00b7Seeded\u00b7Collectible ()","text":"","tags":["Class"]},{"location":"Room.html#collectibletype-getseededcollectible-int-seed-bool-nodecrease-false","title":"CollectibleType GetSeededCollectible ( int Seed, bool NoDecrease = false )","text":"<p>When <code>NoDecrease</code> is true, returned collectibles will not be removed from the pools they came from.</p>","tags":["Class"]},{"location":"Room.html#getshoplevel","title":"Get\u00b7Shop\u00b7Level ()","text":"","tags":["Class"]},{"location":"Room.html#int-getshoplevel","title":"int GetShopLevel ( )","text":"","tags":["Class"]},{"location":"Room.html#getspawnseed","title":"Get\u00b7Spawn\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Room.html#int-getspawnseed","title":"int GetSpawnSeed ( )","text":"","tags":["Class"]},{"location":"Room.html#gettintedrockidx","title":"Get\u00b7Tinted\u00b7Rock\u00b7Idx ()","text":"","tags":["Class"]},{"location":"Room.html#int-gettintedrockidx","title":"int GetTintedRockIdx ( )","text":"","tags":["Class"]},{"location":"Room.html#gettopleftpos","title":"Get\u00b7Top\u00b7Left\u00b7Pos ()","text":"","tags":["Class"]},{"location":"Room.html#vector-gettopleftpos","title":"Vector GetTopLeftPos ( )","text":"<p>Returns the top-left position inside of the walls.</p>","tags":["Class"]},{"location":"Room.html#gettype","title":"Get\u00b7Type ()","text":"","tags":["Class"]},{"location":"Room.html#roomtype-gettype","title":"RoomType GetType ( )","text":"","tags":["Class"]},{"location":"Room.html#getwatercurrent","title":"Get\u00b7Water\u00b7Current ()","text":"","tags":["Class"]},{"location":"Room.html#vector-getwatercurrent","title":"Vector GetWaterCurrent ( )","text":"<p>Returns a vector corresponding to any water current in the room.</p>","tags":["Class"]},{"location":"Room.html#hascursemist","title":"Has\u00b7Curse\u00b7Mist ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-hascursemist","title":"boolean HasCurseMist ( )","text":"<p>Returns <code>true</code> if the player is inside the abandoned mineshaft.</p>","tags":["Class"]},{"location":"Room.html#haslava","title":"Has\u00b7Lava ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-haslava","title":"boolean HasLava ( )","text":"<p>Returns <code>true</code> if the room contains lava.</p> Warning <p>This function will return <code>true</code> if the room contains lava even if there are no pits to make the lava visible.</p>","tags":["Class"]},{"location":"Room.html#hasslowdown","title":"Has\u00b7Slow\u00b7Down ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-hasslowdown","title":"boolean HasSlowDown ( )","text":"<p>Returns whether the room is currently under the effect of the I'm Drowsy pill or not. The function will also return <code>true</code> if a call to SetSlowDown was performed earlier and the specified <code>Duration</code> has not yet expired.</p> <p>Note that this function will return <code>false</code> if the effect of the I'm Drowsy pill was triggered through the Broken Watch. To check for that scenario, use the GetBrokenWatchState function.</p> <p>This function will also return <code>false</code> if the player is under the effect of the Stop Watch. To check for that scenario, check whether or not the player has the Stop Watch in their posession.</p>","tags":["Class"]},{"location":"Room.html#hastriggerpressureplates","title":"Has\u00b7Trigger\u00b7Pressure\u00b7Plates ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-hastriggerpressureplates","title":"boolean HasTriggerPressurePlates ( )","text":"<p>Returns <code>true</code> if there are one or more pressure plates in the room. </p> Warning <p>In order to see if the pressure plates are pressed or not, you will have to iterate over the grid entities in the room.</p>","tags":["Class"]},{"location":"Room.html#haswater","title":"Has\u00b7Water ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-haswater","title":"boolean HasWater ( )","text":"","tags":["Class"]},{"location":"Room.html#haswaterpits","title":"Has\u00b7Water\u00b7Pits ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-haswaterpits","title":"boolean HasWaterPits ( )","text":"<p>Returns <code>true</code> if the room contains pits that have liquid in them (e.g. lava in Mines, tar in Dank Depths, etc.).</p>","tags":["Class"]},{"location":"Room.html#invalidatepickupvision","title":"Invalidate\u00b7Pickup\u00b7Vision ()","text":"","tags":["Class"]},{"location":"Room.html#void-invalidatepickupvision","title":"void InvalidatePickupVision ( )","text":"<p>Causes chest previews from Guppy's Eye to be updated on the next frame.</p>","tags":["Class"]},{"location":"Room.html#isambushactive","title":"Is\u00b7Ambush\u00b7Active ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-isambushactive","title":"boolean IsAmbushActive ( )","text":"","tags":["Class"]},{"location":"Room.html#isambushdone","title":"Is\u00b7Ambush\u00b7Done ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-isambushdone","title":"boolean IsAmbushDone ( )","text":"","tags":["Class"]},{"location":"Room.html#isclear","title":"Is\u00b7Clear ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-isclear","title":"boolean IsClear ( )","text":"","tags":["Class"]},{"location":"Room.html#iscurrentroomlastboss","title":"Is\u00b7Current\u00b7Room\u00b7Last\u00b7Boss ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-iscurrentroomlastboss","title":"boolean IsCurrentRoomLastBoss ( )","text":"<p>Returns <code>true</code> if the current room is the second boss room when on an XL floor. Returns <code>false</code> otherwise.</p>","tags":["Class"]},{"location":"Room.html#isdoorslotallowed","title":"Is\u00b7Door\u00b7Slot\u00b7Allowed ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-isdoorslotallowed-doorslot-slot","title":"boolean IsDoorSlotAllowed ( DoorSlot Slot )","text":"<p>Returns whether or not the supplied door slot is valid for the current room. This is contingent on the room definition in the STB/XML file. (Basement Renovator displays valid doors as brown and invalid doors as white.) The value returned by this method is independent of whether or not a door currently exists at the given slot.</p> <p>For example, in the starting room of a floor, this method would return true for <code>DoorSlot.LEFT0</code>, <code>DoorSlot.UP0</code>, <code>Doorslot.RIGHT0</code>, and <code>DoorSlot.DOWN0</code>, and false for all other values (regardless of what doors happen to exist or not).</p> <p>For example, there is a relatively common 1x1 room in the Caves with 4 Boom Flies and a narrow bridge from the top door to the bottom door. In this room, the doors on the left side and the right side are disabled. In this room, this method would return true for <code>DoorSlot.UP0</code> and <code>DoorSlot.DOWN0</code>, and false for all other values (regardless of what doors happen to exist or not).</p>","tags":["Class"]},{"location":"Room.html#isfirstenemydead","title":"Is\u00b7First\u00b7Enemy\u00b7Dead ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-isfirstenemydead","title":"boolean IsFirstEnemyDead ( )","text":"","tags":["Class"]},{"location":"Room.html#isfirstvisit","title":"Is\u00b7First\u00b7Visit ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-isfirstvisit","title":"boolean IsFirstVisit ( )","text":"","tags":["Class"]},{"location":"Room.html#isinitialized","title":"Is\u00b7Initialized ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-isinitialized","title":"boolean IsInitialized ( )","text":"","tags":["Class"]},{"location":"Room.html#islshapedroom","title":"Is\u00b7LShaped\u00b7Room ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-islshapedroom","title":"boolean IsLShapedRoom ( )","text":"","tags":["Class"]},{"location":"Room.html#ismirrorworld","title":"Is\u00b7Mirror\u00b7World ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-ismirrorworld","title":"boolean IsMirrorWorld ( )","text":"<p>Returns true if the player is inside the mirror dimension.</p>","tags":["Class"]},{"location":"Room.html#ispositioninroom","title":"Is\u00b7Position\u00b7In\u00b7Room ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-ispositioninroom-vector-pos-float-margin","title":"boolean IsPositionInRoom ( Vector Pos, float Margin )","text":"<p>Returns <code>true</code> if the given position is inside the room. <code>Margin</code> is used as a radius around the position that also needs to be inside the room boundaries. The Room boundary is the position between the walkable area and the walls. Therefore, positions inside walls and the black void do count as \"outside\" the room.</p>","tags":["Class"]},{"location":"Room.html#issacrificedone","title":"Is\u00b7Sacrifice\u00b7Done ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-issacrificedone","title":"boolean IsSacrificeDone ( )","text":"","tags":["Class"]},{"location":"Room.html#keepdoorsclosed","title":"Keep\u00b7Doors\u00b7Closed ()","text":"","tags":["Class"]},{"location":"Room.html#void-keepdoorsclosed","title":"void KeepDoorsClosed ( )","text":"","tags":["Class"]},{"location":"Room.html#mamamegaexplosion","title":"Mama\u00b7Mega\u00b7Explosion ()","text":"","tags":["Class"]},{"location":"Room.html#void-mamamegaexplosion-vector-position","title":"void MamaMegaExplosion ( Vector Position )","text":"","tags":["Class"]},{"location":"Room.html#playmusic","title":"Play\u00b7Music ()","text":"","tags":["Class"]},{"location":"Room.html#void-playmusic","title":"void PlayMusic ( )","text":"<p>Plays the music track used by this room. Useful for resetting music after playing a different track.</p>","tags":["Class"]},{"location":"Room.html#removedoor","title":"Remove\u00b7Door ()","text":"","tags":["Class"]},{"location":"Room.html#void-removedoor-doorslot-slot","title":"void RemoveDoor ( DoorSlot Slot )","text":"","tags":["Class"]},{"location":"Room.html#removegridentity","title":"Remove\u00b7Grid\u00b7Entity ()","text":"","tags":["Class"]},{"location":"Room.html#void-removegridentity-int-gridindex-int-pathtrail-boolean-keepdecoration","title":"void RemoveGridEntity ( int GridIndex, int PathTrail, boolean KeepDecoration )","text":"<ul> <li><code>GridIndex</code> is the location of the grid as shown with the <code>debug 11</code> console command.</li> <li><code>PathTrail</code> is the \"cost\" to leave behind on the square. In most cases, you would want to pass 0 for this argument.</li> </ul> <p>Note that after removing a grid entity, you cannot spawn another grid entity on the same tile until a frame has passed. If doing this is absolutely required, you can get around the restriction in two different ways:</p> <ol> <li>By calling the <code>Room:Update()</code> method between removing the old grid entity and spawning the new one, you can simulate a frame passing. However, this can have other unwanted side effects, so it is only recommended to do this as a last resort. Specifically, <code>Room:Update</code> will update every entity in the room, including the player, causing them to continue to move in the direction that they are already moving. Furthermore, if <code>Room:Update</code> is called in the PostNewRoom callback, it will still cause the player to drift, even though they are standing still. (This is because their velocity has not been zeroed out at time that the callback fires.)</li> <li>By calling <code>GridEntity:Update()</code> on the removed grid entity after it is removed, you will be able to immediately spawn another grid entity on the same tile. However, the new grid entity will be automatically removed at the end of the frame, so you must spawn it again on the next frame. This method can also lead to unwanted side effects, such as an explosion not destroying a rock properly (because it would be erronenously respawned on the subsequent frame).</li> </ol>","tags":["Class"]},{"location":"Room.html#render","title":"Render ()","text":"","tags":["Class"]},{"location":"Room.html#void-render","title":"void Render ( )","text":"","tags":["Class"]},{"location":"Room.html#respawnenemies","title":"Respawn\u00b7Enemies ()","text":"","tags":["Class"]},{"location":"Room.html#void-respawnenemies","title":"void RespawnEnemies ( )","text":"<p>Used by the D7 collectible.</p>","tags":["Class"]},{"location":"Room.html#screenwrapposition","title":"Screen\u00b7Wrap\u00b7Position ()","text":"","tags":["Class"]},{"location":"Room.html#vector-screenwrapposition-vector-pos-float-margin","title":"Vector ScreenWrapPosition ( Vector Pos, float Margin )","text":"<p>Returns <code>Pos</code>, screen-wrapped (if it is just outside the room on the right it will be moved to the left side of the room, etc)</p> Notes <p>This only wraps the point once, so if it has crossed multiple wrapping planes it will only wrap on the one it's closest to. For wrapping a position that has crossed two planes (outside a room in the top left for instance) call this function iteratively.</p>","tags":["Class"]},{"location":"Room.html#setambushdone","title":"Set\u00b7Ambush\u00b7Done ()","text":"","tags":["Class"]},{"location":"Room.html#void-setambushdone-boolean-value","title":"void SetAmbushDone ( boolean Value )","text":"","tags":["Class"]},{"location":"Room.html#setbrokenwatchstate","title":"Set\u00b7Broken\u00b7Watch\u00b7State ()","text":"","tags":["Class"]},{"location":"Room.html#void-setbrokenwatchstate-int-state","title":"void SetBrokenWatchState ( int State )","text":"<p>Speed up, slow down or remove either of these states from the current room. See the notes section in GetBrokenWatchState for the different values of <code>State</code>.</p>","tags":["Class"]},{"location":"Room.html#setcardagainsthumanity","title":"Set\u00b7Card\u00b7Against\u00b7Humanity ()","text":"","tags":["Class"]},{"location":"Room.html#void-setcardagainsthumanity","title":"void SetCardAgainstHumanity ( )","text":"","tags":["Class"]},{"location":"Room.html#setclear","title":"Set\u00b7Clear ()","text":"","tags":["Class"]},{"location":"Room.html#void-setclear-boolean-clear","title":"void SetClear ( boolean Clear )","text":"<p>Needed for Angel rooms so that the clear flag can be set to false when an Angel spawns.</p>","tags":["Class"]},{"location":"Room.html#setfirstenemydead","title":"Set\u00b7First\u00b7Enemy\u00b7Dead ()","text":"","tags":["Class"]},{"location":"Room.html#void-setfirstenemydead-boolean-value","title":"void SetFirstEnemyDead ( boolean Value )","text":"","tags":["Class"]},{"location":"Room.html#setfloorcolor","title":"Set\u00b7Floor\u00b7Color ()","text":"","tags":["Class"]},{"location":"Room.html#void-setfloorcolor-color-floorcolor","title":"void SetFloorColor ( Color FloorColor )","text":"<p>Allows you to apply a color modifier to the floor texture of the current room.</p> Example Code <p>This code changes the floor color to red. <pre><code>Game():GetRoom():SetFloorColor(Color(1,1,1,1,255,0,0))\n</code></pre></p>","tags":["Class"]},{"location":"Room.html#setgridpath","title":"Set\u00b7Grid\u00b7Path ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-setgridpath-int-index-int-value","title":"boolean SetGridPath ( int Index, int Value )","text":"<p>Grid path is a property of a grid square that represents the \"cost\" of traveling over this grid cell. Its used for the path finding algorithms which search the cheapest path to a given location. If a grid cell has a value higher than <code>0</code>, it can prevent grid entities from being spawned on that square. Thus, you can get around it by resetting the grid path to 0, and then spawning the grid entity.</p> notes <p>GridPath values pseudo-enumeration:</p> <p>900  : Set by some enemies when they pass through a tile. De-prioritises the tile for pathfinders. Degrades over time in steps of 100.</p> <p>950  : Set by fire places. De-prioritises the tile for pathfinders. Does not degrade.</p> <p>1000 : Set by grid entities. Invalidates the tile for pathfinders. Impedes grounded player movement. Does not degrade.</p> <p>3000 : Set by pits. Invalidates the tile for pathfinders. Impedes grounded player movement. Does not degrade.</p> <p>3999 : Set by grimaces. Invalidates the tile for pathfinders. Impedes grounded player movement. Drops to 900 and then degrades over time in steps of 100 (Grimaces reset value every frame).</p>","tags":["Class"]},{"location":"Room.html#setredheartdamage","title":"Set\u00b7Red\u00b7Heart\u00b7Damage ()","text":"","tags":["Class"]},{"location":"Room.html#void-setredheartdamage","title":"void SetRedHeartDamage ( )","text":"","tags":["Class"]},{"location":"Room.html#setsacrificedone","title":"Set\u00b7Sacrifice\u00b7Done ()","text":"","tags":["Class"]},{"location":"Room.html#void-setsacrificedone-boolean-done","title":"void SetSacrificeDone ( boolean Done )","text":"","tags":["Class"]},{"location":"Room.html#setslowdown","title":"Set\u00b7Slow\u00b7Down ()","text":"","tags":["Class"]},{"location":"Room.html#void-setslowdown-int-duration","title":"void SetSlowDown ( int Duration )","text":"<p>Apply a slow down effect for <code>Duration</code> logic frames (there are 30 logic frames per second).</p> <p>Using a negative <code>Duration</code> will not do anything at all, instead of making the slow down permanent as one might expect.</p> Bug <p>This function will only apply a slow down effect on the player and not on all entities of the room. If you want to apply a slow down effect on all entities in the room, consider using SetBrokenWatchState with a <code>State</code> of <code>1</code> and add a timer to your script in order to count the elapsed frames.</p>","tags":["Class"]},{"location":"Room.html#setwallcolor","title":"Set\u00b7Wall\u00b7Color ()","text":"","tags":["Class"]},{"location":"Room.html#void-setwallcolor-color-wallcolor","title":"void SetWallColor ( Color WallColor )","text":"<p>Allows you to apply a color modifier to the wall texture of the current room.</p> Example Code <p>This code changes the wall color to red. <pre><code>Game():GetRoom():SetWallColor(Color(1,1,1,1,255,0,0))\n</code></pre></p>","tags":["Class"]},{"location":"Room.html#shopreshuffle","title":"Shop\u00b7Reshuffle ()","text":"","tags":["Class"]},{"location":"Room.html#void-shopreshuffle-boolean-keepcollectibleidx-boolean-reselectsaleitem","title":"void ShopReshuffle ( boolean KeepCollectibleIdx, boolean ReselectSaleItem )","text":"","tags":["Class"]},{"location":"Room.html#shoprestockfull","title":"Shop\u00b7Restock\u00b7Full ()","text":"","tags":["Class"]},{"location":"Room.html#void-shoprestockfull","title":"void ShopRestockFull ( )","text":"<p>Effectively acts like a use of a Reroll Machine, restocking shops and rerolling items.</p>","tags":["Class"]},{"location":"Room.html#shoprestockpartial","title":"Shop\u00b7Restock\u00b7Partial ()","text":"","tags":["Class"]},{"location":"Room.html#void-shoprestockpartial","title":"void ShopRestockPartial ( )","text":"","tags":["Class"]},{"location":"Room.html#spawnclearaward","title":"Spawn\u00b7Clear\u00b7Award ()","text":"","tags":["Class"]},{"location":"Room.html#void-spawnclearaward","title":"void SpawnClearAward ( )","text":"","tags":["Class"]},{"location":"Room.html#spawngridentity","title":"Spawn\u00b7Grid\u00b7Entity ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-spawngridentity-int-gridindex-gridentitytype-type-int-variant-int-seed-int-vardata","title":"boolean SpawnGridEntity ( int GridIndex, GridEntityType Type, int Variant, int Seed, int VarData )","text":"","tags":["Class"]},{"location":"Room.html#stoprain","title":"Stop\u00b7Rain ()","text":"","tags":["Class"]},{"location":"Room.html#void-stoprain","title":"void StopRain ( )","text":"<p>Stops any rain effects in the room.</p>","tags":["Class"]},{"location":"Room.html#triggerclear","title":"Trigger\u00b7Clear ()","text":"","tags":["Class"]},{"location":"Room.html#void-triggerclear-boolean-silent-false","title":"void TriggerClear ( boolean Silent = false )","text":"<p>Triggers all room clear effects (does not actually clear the room). Door opening sounds can be muted by setting Silent to <code>true</code>.</p>","tags":["Class"]},{"location":"Room.html#trymakebridge","title":"Try\u00b7Make\u00b7Bridge ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-trymakebridge-gridentity-pit-gridentity-rock","title":"boolean TryMakeBridge ( GridEntity pit, GridEntity rock )","text":"<p>Tries to create a bridge over a given pit. Returns <code>true</code> if the creation was successful. Returns <code>false</code> otherwise.</p>","tags":["Class"]},{"location":"Room.html#tryplaceladder","title":"Try\u00b7Place\u00b7Ladder ()","text":"","tags":["Class"]},{"location":"Room.html#void-tryplaceladder-vector-playerpos-vector-playervelocity-entity-ladder","title":"void TryPlaceLadder ( Vector PlayerPos, Vector PlayerVelocity, Entity Ladder )","text":"<p>This function was removed with Repentance.</p>","tags":["Class"]},{"location":"Room.html#tryspawnbluewombdoor","title":"Try\u00b7Spawn\u00b7Blue\u00b7Womb\u00b7Door ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-tryspawnbluewombdoor-boolean-firsttime-true-boolean-ignoretime-false-boolean-force-false","title":"boolean TrySpawnBlueWombDoor ( boolean FirstTime = true, boolean IgnoreTime = false, boolean Force = false )","text":"<p>Attempts to spawn a door to the Blue Womb. This usually does nothing outside of Mom's Heart's boss room unless <code>Force</code> is set to <code>true</code>.</p>","tags":["Class"]},{"location":"Room.html#tryspawnbossrushdoor","title":"Try\u00b7Spawn\u00b7Boss\u00b7Rush\u00b7Door ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-tryspawnbossrushdoor-boolean-ignoretime-false-boolean-force-false","title":"boolean TrySpawnBossRushDoor ( boolean IgnoreTime = false, boolean Force = false )","text":"<p>Attempts to spawn a door to the Boss Rush. This usually does nothing outside of Mom's boss room unless <code>Force</code> is set to <code>true</code>.</p>","tags":["Class"]},{"location":"Room.html#tryspawndevilroomdoor","title":"Try\u00b7Spawn\u00b7Devil\u00b7Room\u00b7Door ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-tryspawndevilroomdoor-boolean-animate-false-boolean-force-false","title":"boolean TrySpawnDevilRoomDoor ( boolean Animate = false, boolean Force = false )","text":"<p>Attempts to spawn a door to the Devil or Angel room. This usually does nothing inside of non-boss rooms unless <code>Force</code> is set to <code>true</code>.</p>","tags":["Class"]},{"location":"Room.html#tryspawnmegasatanroomdoor","title":"Try\u00b7Spawn\u00b7Mega\u00b7Satan\u00b7Room\u00b7Door ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-tryspawnmegasatanroomdoor-boolean-force-false","title":"boolean TrySpawnMegaSatanRoomDoor ( boolean Force = false )","text":"<p>Attempts to spawn a door to Mega Satan. This usually does nothing outside of the starting room of the Chest/Dark Room unless <code>Force</code> is set to <code>true</code></p>","tags":["Class"]},{"location":"Room.html#tryspawnsecretexit","title":"Try\u00b7Spawn\u00b7Secret\u00b7Exit ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-tryspawnsecretexit-boolean-animate-false-boolean-force-false","title":"boolean TrySpawnSecretExit ( boolean Animate = false, boolean Force = false )","text":"<p>Attempts to spawn a door to the Downpour, Mines or Mausoleum depending on the current floor. This usually does nothing outside of boss rooms unless <code>Force</code> is set to <code>true</code>.</p>","tags":["Class"]},{"location":"Room.html#tryspawnsecretshop","title":"Try\u00b7Spawn\u00b7Secret\u00b7Shop ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-tryspawnsecretshop-boolean-force-false","title":"boolean TrySpawnSecretShop ( boolean Force = false )","text":"<p>Attempts to spawn a trapdoor to the Member Card shop within the current room. This usually does nothing outside of shops or if the player doesn't hold a Member Card unless <code>Force</code> is set to <code>true</code>.</p>","tags":["Class"]},{"location":"Room.html#tryspawnspecialquestdoor","title":"Try\u00b7Spawn\u00b7Special\u00b7Quest\u00b7Door ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-tryspawnspecialquestdoor","title":"boolean TrySpawnSpecialQuestDoor ( )","text":"<p>Attempts to spawn either a door to the Mirror Dimension in Downpour, or the abandoned mineshaft in the Mines.</p>","tags":["Class"]},{"location":"Room.html#tryspawnthevoiddoor","title":"Try\u00b7Spawn\u00b7The\u00b7Void\u00b7Door ()","text":"","tags":["Class"]},{"location":"Room.html#boolean-tryspawnthevoiddoor-boolean-force-false","title":"boolean TrySpawnTheVoidDoor ( boolean Force = false )","text":"<p>Attempts to spawn a door to a room containing a Void portal This usually does nothing outside of Hush's boss room unless <code>Force</code> is set to <code>true</code>.</p>","tags":["Class"]},{"location":"Room.html#turngold","title":"Turn\u00b7Gold ()","text":"","tags":["Class"]},{"location":"Room.html#void-turngold","title":"void TurnGold ( )","text":"<p>Applies a gold tint to all grid entities in the room. This is the same effect that the game does after defeating Ultra Greedier.</p>","tags":["Class"]},{"location":"Room.html#update","title":"Update ()","text":"","tags":["Class"]},{"location":"Room.html#void-update","title":"void Update ( )","text":"<p>Updates the current room.</p> <p>It is recommended to call this function after calling Room:RemoveGridEntity() in order to correctly apply the changes.</p> Notes <p>Calling this function is needed to apply some changes like spawning a trapdoor where a pit already exists.</p> <p>To do this, remove the pit, call the Update() function and then spawn the trapdoor.</p> Bug <p>As mentioned in the Repentance API Issue Tracker, calling room:Update() as a part of card functionality forces an instant use of pocket active items.</p>","tags":["Class"]},{"location":"Room.html#worldtoscreenposition","title":"World\u00b7To\u00b7Screen\u00b7Position ()","text":"","tags":["Class"]},{"location":"Room.html#vector-worldtoscreenposition-vector-worldpos","title":"Vector WorldToScreenPosition ( Vector WorldPos )","text":"<p>Converts an entity position to one that can be used to render to the screen.</p>","tags":["Class"]},{"location":"RoomConfig_Entry.html","title":"Class \"RoomConfigEntry\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>RoomConfig_Spawn.PickEntry</li> </ul> Example Code <pre><code>local level = Game():GetLevel()\nlocal roomDescriptor = level:GetCurrentRoomDesc()\nlocal roomConfigRoom = roomDescriptor.Data\nlocal spawnList = roomConfigRoom.Spawns\nlocal roomConfigSpawn = spawnList:Get(0)\nlocal roomConfigEntry = roomConfigSpawn:PickEntry(0)\n</code></pre>","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Entry.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Entry.html#subtype","title":"Subtype","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Entry.html#int-subtype","title":"int Subtype","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Entry.html#type","title":"Type","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Entry.html#entitytype-type","title":"EntityType Type","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Entry.html#variant","title":"Variant","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Entry.html#int-variant","title":"int Variant","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Entry.html#weight","title":"Weight","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Entry.html#float-weight","title":"float Weight","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html","title":"Class \"RoomConfigRoom\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>RoomDescriptor.Data</li> <li>RoomDescriptor.OverrideData</li> </ul> Example Code <pre><code>local game = Game()\nlocal level = game:GetLevel()\nlocal roomDescriptor = level:GetCurrentRoomDesc()\nlocal roomConfigRoom = roomDescriptor.Data\n</code></pre>","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#difficulty","title":"Difficulty","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-difficulty-difficulty","title":"const Difficulty Difficulty","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#doors","title":"Doors","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-int-doors","title":"const int Doors","text":"<p>Returns a bit mask of the positions of valid door positions in this room. It is  a combination of bit flags of the DoorSlotFlag enum, which is defined as follows:</p> <pre><code>enum DoorSlotFlag {\n  LEFT0 = 1 &lt;&lt; DoorSlot.LEFT0,\n  UP0 = 1 &lt;&lt; DoorSlot.UP0,\n  RIGHT0 = 1 &lt;&lt; DoorSlot.RIGHT0,\n  DOWN0 = 1 &lt;&lt; DoorSlot.DOWN0,\n  LEFT1 = 1 &lt;&lt; DoorSlot.LEFT1,\n  UP1 = 1 &lt;&lt; DoorSlot.UP1,\n  RIGHT1 = 1 &lt;&lt; DoorSlot.RIGHT1,\n  DOWN1 = 1 &lt;&lt; DoorSlot.DOWN1,\n}\n</code></pre>","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#height","title":"Height","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-int-height","title":"const int Height","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#initialweight","title":"Initial\u00b7Weight","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-float-initialweight","title":"const float InitialWeight","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#mode","title":"Mode","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-userdata-mode","title":"const userdata Mode","text":"Bug <p>This variable is broken and returns userdata.</p>","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#name","title":"Name","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-string-name","title":"const string Name","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#originalvariant","title":"Original\u00b7Variant","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#int-originalvariant","title":"int OriginalVariant","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#shape","title":"Shape","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-roomshape-shape","title":"const RoomShape Shape","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#spawncount","title":"Spawn\u00b7Count","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-int-spawncount","title":"const int SpawnCount","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#spawns","title":"Spawns","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-roomconfigspawns-spawns","title":"const RoomConfigSpawns Spawns","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#stageid","title":"Stage\u00b7ID","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-int-stageid","title":"const int StageID","text":"<p>The ID of the stage the room was designed for.</p> Stage IDs (corresponds to IDs in stages.xml) DLC ID Stage Comment 0 Special Rooms 1 Basement 2 Cellar 3 Burning Basement 4 Caves 5 Catacombs 6 Flooded Caves 7 Depths 8 Necropolis 9 Dank Depths 10 Womb 11 Utero 12 Scarred Womb 13 Blue Womb 14 Sheol 15 Cathedral 16 Dark Room 17 Chest 18 Greed Special Rooms 19 Greed Basement 20 Greed Caves 21 Greed Depths 22 Greed Womb 23 Greed Sheol 24 The Shop 25 Ultra Greed 26 The Void 27 Downpour 28 Dross 29 Mines 30 Ashpit 31 Mausoleum 32 Gehenna 33 Corpse 35 Home The Stage ID of 34 does not exist. 36 Backwards These rooms are used during the Ascent.","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#subtype","title":"Subtype","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-int-subtype","title":"const int Subtype","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#type","title":"Type","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-roomtype-type","title":"const RoomType Type","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#variant","title":"Variant","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-int-variant","title":"const int Variant","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#weight","title":"Weight","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-float-weight","title":"const float Weight","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#width","title":"Width","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Room.html#const-int-width","title":"const int Width","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html","title":"Class \"RoomConfigSpawn\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>RoomConfigSpawns.Get</li> </ul> Example Code <pre><code>local level = Game():GetLevel()\nlocal roomDescriptor = level:GetCurrentRoomDesc()\nlocal roomConfigRoom = roomDescriptor.Data\nlocal spawnList = roomConfigRoom.Spawns\nlocal roomConfigSpawn = spawnList:Get(0)\n</code></pre>","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#pickentry","title":"Pick\u00b7Entry ()","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#const-roomconfig-entry-pickentry-float-r","title":"const RoomConfig Entry PickEntry ( float r )","text":"<p>r is a value between 0 and 1</p>","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#entries","title":"Entries","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#roomconfigentries-entries","title":"RoomConfigEntries Entries","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#entrycount","title":"Entry\u00b7Count","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#int-entrycount","title":"int EntryCount","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#sumweights","title":"Sum\u00b7Weights","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#float-sumweights","title":"float SumWeights","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#x","title":"X","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#int-x","title":"int X","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#y","title":"Y","text":"","tags":["Class"],"boost":0.25},{"location":"RoomConfig_Spawn.html#int-y","title":"int Y","text":"","tags":["Class"],"boost":0.25},{"location":"RoomDescriptor.html","title":"Class \"RoomDescriptor\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>Level:GetCurrentRoomDesc()</li> <li>Level:GetLastRoomDesc()</li> <li>Level:GetRoomByIdx()</li> </ul> Example Code <pre><code>local level = Game():GetLevel()\nlocal roomDescriptor = level:GetCurrentRoomDesc()\n</code></pre>","tags":["Class"]},{"location":"RoomDescriptor.html#variables","title":"Variables","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#alloweddoors","title":"Allowed\u00b7Doors","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#doorset-alloweddoors","title":"DoorSet AllowedDoors","text":"<p>Contains data swapped just on load (in cases like minibosses, or other such events)</p> Bug <p>This variable contains userdata and is therefore not useable.</p>","tags":["Class"]},{"location":"RoomDescriptor.html#awardseed","title":"Award\u00b7Seed","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-awardseed","title":"int AwardSeed","text":"<p>used to spawn clear awards (normal, miniboss, boss rooms) and initialize shop items (shop, devil rooms)</p>","tags":["Class"]},{"location":"RoomDescriptor.html#challengedone","title":"Challenge\u00b7Done","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#boolean-challengedone","title":"boolean ChallengeDone","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#clear","title":"Clear","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#boolean-clear","title":"boolean Clear","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#clearcount","title":"Clear\u00b7Count","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-clearcount","title":"int ClearCount","text":"<p>room is clear, don't spawn enemies when visiting</p>","tags":["Class"]},{"location":"RoomDescriptor.html#data","title":"Data","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#roomconfigroom-data","title":"RoomConfigRoom Data","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#decorationseed","title":"Decoration\u00b7Seed","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-decorationseed","title":"int DecorationSeed","text":"<p>used for cosmetic stuff like backdrops, room decorations, shopkeeper skins</p>","tags":["Class"]},{"location":"RoomDescriptor.html#deliriumdistance","title":"Delirium\u00b7Distance","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-deliriumdistance","title":"int DeliriumDistance","text":"<p>Helper for The Void stage, holds the distance to the Delirium boss in room nr.</p>","tags":["Class"]},{"location":"RoomDescriptor.html#displayflags","title":"Display\u00b7Flags","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-displayflags","title":"int DisplayFlags","text":"<p>Indicates what is visible on the minimap. Display Flags (bitwise): <pre><code>1 &lt;&lt; -1 -- Invisible\n1 &lt;&lt; 0 -- Visible\n1 &lt;&lt; 1 -- Room Shadow\n1 &lt;&lt; 2 -- Show Icon\n</code></pre></p> Examples <p>The flags are hard to interpret, but here are some examples:</p> <p>000 = invisible, this is how most rooms start</p> <p>101 = standard room visibility, this includes rooms that are adjacent and you haven't actively visited. This will usually show icons.</p> <p>011 = secret room, locked rooms, sac rooms pre-entry*</p> <p>111 = 011 rooms after entry, but also the rooms directly adjacent to them* (applied after entry)</p> <p>* If you have Spelunker Hat, bit 1 is completely unused. All special rooms will have the normal behavior of either 000 or 101. This is unique to Spelunker Hat; mapping items follow the normal rules.</p> Quote from User 'Budj' <p>From this my best guess is that bits 1 and 2 are special rendering (display) flags that may have more meaning down below.</p> <p>The important bit for using them is minding that they're used differently mostly for special rooms.</p> <p>As far as I've seen, 001 is completely unused. 010, 100, and 110 may be used for compass or blue map, I don't remember. I think they use 100.</p>","tags":["Class"]},{"location":"RoomDescriptor.html#flags","title":"Flags","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-flags","title":"int Flags","text":"<p>The RoomDescriptor flags for the room.</p>","tags":["Class"]},{"location":"RoomDescriptor.html#gridindex","title":"Grid\u00b7Index","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-gridindex","title":"int GridIndex","text":"<ul> <li>For a 1x1 room, this is equal to the 1x1 grid index of the room.</li> <li>For a room bigger than a 1x1 room, this is equal to the top left 1x1 quadrant.</li> <li>For <code>RoomType.ROOMSHAPE_LTL</code> rooms (i.e. rooms that look like a \"J\"), this is equal to the 1x1 quadrant where the gap in the room is. In other words, it is a 1x1 quadrant that is not actually contained within the room.</li> <li>Note that this value is different than the value returned by <code>Level:GetCurrentRoomIndex()</code>. (That function returns the 1x1 quadrant that the room was entered in.)</li> <li>Data structures that store data per room should use <code>ListIndex</code> as a key instead of <code>GridIndex</code>, since the former is unique across different dimensions.</li> </ul> Notes","tags":["Class"]},{"location":"RoomDescriptor.html#haswater","title":"Has\u00b7Water","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#boolean-haswater","title":"boolean HasWater","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#listindex","title":"List\u00b7Index","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-listindex","title":"int ListIndex","text":"<p>The index for this room corresponding to the <code>Level.GetRooms().Get()</code> method. In other words, this is equal to the order that the room was created by the floor generation algorithm.</p> <p>Use this as an index for data structures that store data per room, since it is unique across different dimensions.</p>","tags":["Class"]},{"location":"RoomDescriptor.html#noreward","title":"No\u00b7Reward","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#boolean-noreward","title":"boolean NoReward","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#overridedata","title":"Override\u00b7Data","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#roomconfigroom-overridedata","title":"RoomConfigRoom OverrideData","text":"<p>The room variant is in Data. Because Room::Init uses a mix of data, one from level layout and one from replacement data like minibosses, we need to hold the new room data somewhere.</p>","tags":["Class"]},{"location":"RoomDescriptor.html#pitscount","title":"Pits\u00b7Count","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-pitscount","title":"int PitsCount","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#poopcount","title":"Poop\u00b7Count","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-poopcount","title":"int PoopCount","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#pressureplatestriggered","title":"Pressure\u00b7Plates\u00b7Triggered","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#boolean-pressureplatestriggered","title":"boolean PressurePlatesTriggered","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#sacrificedone","title":"Sacrifice\u00b7Done","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#boolean-sacrificedone","title":"boolean SacrificeDone","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#safegridindex","title":"Safe\u00b7Grid\u00b7Index","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-safegridindex","title":"int SafeGridIndex","text":"<ul> <li>For a 1x1 room, this is equal to the 1x1 grid index of the room.</li> <li>For a room bigger than a 1x1 room, this is equal to the top left 1x1 quadrant.</li> <li>For <code>RoomType.ROOMSHAPE_LTL</code> rooms (i.e. rooms that look like a \"J\"), this is equal to the top right 1x1 quadrant.</li> <li>Note that this value is different than the value returned by <code>Level:GetCurrentRoomIndex()</code>. (That function returns the 1x1 quadrant that the room was entered in.)</li> <li>Data structures that store data per room should use <code>ListIndex</code> as a key instead of <code>SafeGridIndex</code>, since the former is unique across different dimensions.</li> </ul> Notes","tags":["Class"]},{"location":"RoomDescriptor.html#shopitemdiscountidx","title":"Shop\u00b7Item\u00b7Discount\u00b7Idx","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-shopitemdiscountidx","title":"int ShopItemDiscountIdx","text":"<ul> <li>The index that denotes which shop item(s) will be discounted.</li> <li>Can be a value from -1 to 7.</li> <li>All items in the room with this ShopItemId will be affected by the discount.<ul> <li>This is noticeable when there are more than 8 shop items in a room.</li> </ul> </li> <li>A value of -1 means there is no discounted item.</li> <li>This value is unaffected by Steam Sale.</li> <li>Defaults to -1 in non-shop rooms.</li> <li>Can be modified by accessing the writable version of the RoomDescriptor like this:</li> </ul> <pre><code>local level = Game():GetLevel()\nlocal room = level:GetCurrentRoom()\n\n-- this returns a writable RoomDescriptor for the current Room.\nlocal writableRoomDesc = level:GetRoomByIdx(level:GetCurrentRoomIndex())\n\n-- Sets the current Room's ShopItemDiscountIdx to 0.\n-- All items with ShopItemId 0 will be discounted.\nwritableRoomDesc.ShopItemDiscountIdx = 0\n\n-- update the Room using Update() to have the change take effect.\nroom:Update()\n</code></pre>","tags":["Class"]},{"location":"RoomDescriptor.html#shopitemidx","title":"Shop\u00b7Item\u00b7Idx","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-shopitemidx","title":"int ShopItemIdx","text":"<ul> <li>The ShopItemId value of the next shop item to add to the room.<ul> <li>If this is set to 1 in a Room and another shop item is created, the new item will have a ShopItemId of 1, and the Room's ShopItemIdx will then be 2.</li> </ul> </li> <li>Can be used as the total number of items in the shop, up to 7 items.</li> <li>Can be a value between 0 and 7.</li> <li>For every 8 items in a shop, this value resets itself to 0.<ul> <li>For example, if a custom shop has 9 items, the 1st and 9th items will share the same ShopItemId of 0, and the RoomDescriptor ShopItemIdx value will be 1.</li> </ul> </li> <li>Defaults to -1 in non-shop rooms.</li> <li>Can be modified by accessing the writable version of the RoomDescriptor like this:</li> </ul> <pre><code>local level = Game():GetLevel()\nlocal room = level:GetCurrentRoom()\n\n-- this returns a writable RoomDescriptor for the current Room.\nlocal writableRoomDesc = level:GetRoomByIdx(level:GetCurrentRoomIndex())\n\n-- Sets the current Room's ShopItemIdx to 0.\nwritableRoomDesc.ShopItemIdx = 0\n\n-- update the Room using Update() to have the change take effect.\nroom:Update()\n</code></pre> Notes <ul> <li>In the image below, each item's ShopItemId is written underneath it.</li> <li>Notice how all items that share a ShopItemId have the same PickupVariant, but aren't identical.</li> <li>ShopItemDiscountIdx is 2, so all shop items with a ShopItemId of 2 are on sale.</li> <li>After all items are created, the ShopItemIdx for this room is 0. </li> </ul>","tags":["Class"]},{"location":"RoomDescriptor.html#spawnseed","title":"Spawn\u00b7Seed","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-spawnseed","title":"int SpawnSeed","text":"<p>used to spawn entities at room load and initialize enemy drop seeds</p>","tags":["Class"]},{"location":"RoomDescriptor.html#surpriseminiboss","title":"Surprise\u00b7Miniboss","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#boolean-surpriseminiboss","title":"boolean SurpriseMiniboss","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#visitedcount","title":"Visited\u00b7Count","text":"","tags":["Class"]},{"location":"RoomDescriptor.html#int-visitedcount","title":"int VisitedCount","text":"<p>how often the room has been visited</p>","tags":["Class"]},{"location":"SFXManager.html","title":"Class \"SFXManager\"","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#sfxmanager","title":"SFXManager ()","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#sfxmanager-sfxmanager","title":"SFXManager SFXManager ( )","text":"<p>Returns a SFXManager object.</p> Example Code <p>Example usage: <pre><code>SFXManager():Stop(SoundEffect.SOUND_1UP)\n</code></pre></p>","tags":["Globals","Class"]},{"location":"SFXManager.html#functions","title":"Functions","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#adjustpitch","title":"Adjust\u00b7Pitch ()","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#void-adjustpitch-soundeffect-id-float-pitch","title":"void AdjustPitch ( SoundEffect ID, float Pitch )","text":"<p>mostly useful for repeating sounds</p>","tags":["Globals","Class"]},{"location":"SFXManager.html#adjustvolume","title":"Adjust\u00b7Volume ()","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#void-adjustvolume-soundeffect-id-float-volume","title":"void AdjustVolume ( SoundEffect ID, float Volume )","text":"<p>mostly useful for repeating sounds</p>","tags":["Globals","Class"]},{"location":"SFXManager.html#getambientsoundvolume","title":"Get\u00b7Ambient\u00b7Sound\u00b7Volume ()","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#float-getambientsoundvolume-soundeffect-id","title":"float GetAmbientSoundVolume ( SoundEffect ID )","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#isplaying","title":"Is\u00b7Playing ()","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#boolean-isplaying-soundeffect-id","title":"boolean IsPlaying ( SoundEffect ID )","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#play","title":"Play ()","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#void-play-soundeffect-id-float-volume-1-int-framedelay-2-boolean-loop-false-float-pitch-1-float-pan-0","title":"void Play ( SoundEffect ID, float Volume = 1, int FrameDelay = 2, boolean Loop = false, float Pitch = 1, float Pan = 0 )","text":"<p>Despite its name, FrameDelay does NOT add a delay before the sound plays. Rather, it determines how many frames must pass before the sound can be played again.</p>","tags":["Globals","Class"]},{"location":"SFXManager.html#preload","title":"Preload ()","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#void-preload-soundeffect-id","title":"void Preload ( SoundEffect ID )","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#setambientsound","title":"Set\u00b7Ambient\u00b7Sound ()","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#void-setambientsound-soundeffect-id-float-volume-float-pitch","title":"void SetAmbientSound ( SoundEffect ID, float Volume, float Pitch )","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#stop","title":"Stop ()","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#void-stop-soundeffect-id","title":"void Stop ( SoundEffect ID )","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#stoploopingsounds","title":"Stop\u00b7Looping\u00b7Sounds ()","text":"","tags":["Globals","Class"]},{"location":"SFXManager.html#void-stoploopingsounds","title":"void StopLoopingSounds ( )","text":"","tags":["Globals","Class"]},{"location":"Seeds.html","title":"Class \"Seeds\"","text":"","tags":["Class"]},{"location":"Seeds.html#functions","title":"Functions","text":"","tags":["Class"]},{"location":"Seeds.html#addseedeffect","title":"Add\u00b7Seed\u00b7Effect ()","text":"","tags":["Class"]},{"location":"Seeds.html#void-addseedeffect-seedeffect-value","title":"void AddSeedEffect ( SeedEffect Value )","text":"<p>A \"seed effect\" is equivalent to an easter egg.</p>","tags":["Class"]},{"location":"Seeds.html#canaddseedeffect","title":"Can\u00b7Add\u00b7Seed\u00b7Effect ()","text":"","tags":["Class"]},{"location":"Seeds.html#boolean-canaddseedeffect-seedeffect-value","title":"boolean CanAddSeedEffect ( SeedEffect Value )","text":"","tags":["Class"]},{"location":"Seeds.html#clearseedeffects","title":"Clear\u00b7Seed\u00b7Effects ()","text":"","tags":["Class"]},{"location":"Seeds.html#void-clearseedeffects","title":"void ClearSeedEffects ( )","text":"","tags":["Class"]},{"location":"Seeds.html#clearstartseed","title":"Clear\u00b7Start\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Seeds.html#void-clearstartseed","title":"void ClearStartSeed ( )","text":"","tags":["Class"]},{"location":"Seeds.html#countseedeffects","title":"Count\u00b7Seed\u00b7Effects ()","text":"","tags":["Class"]},{"location":"Seeds.html#int-countseedeffects","title":"int CountSeedEffects ( )","text":"","tags":["Class"]},{"location":"Seeds.html#countunlockedseedeffects","title":"Count\u00b7Unlocked\u00b7Seed\u00b7Effects ()","text":"","tags":["Class"]},{"location":"Seeds.html#static-int-countunlockedseedeffects","title":"static int CountUnlockedSeedEffects ( )","text":"","tags":["Class"]},{"location":"Seeds.html#forgetstageseed","title":"Forget\u00b7Stage\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Seeds.html#void-forgetstageseed-levelstage-stage","title":"void ForgetStageSeed ( LevelStage Stage )","text":"","tags":["Class"]},{"location":"Seeds.html#getnextseed","title":"Get\u00b7Next\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Seeds.html#int-getnextseed","title":"int GetNextSeed ( )","text":"","tags":["Class"]},{"location":"Seeds.html#getplayerinitseed","title":"Get\u00b7Player\u00b7Init\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Seeds.html#int-getplayerinitseed","title":"int GetPlayerInitSeed ( )","text":"","tags":["Class"]},{"location":"Seeds.html#getseedeffect","title":"Get\u00b7Seed\u00b7Effect ()","text":"","tags":["Class"]},{"location":"Seeds.html#static-seedeffect-getseedeffect-string-str","title":"static SeedEffect GetSeedEffect ( string str )","text":"","tags":["Class"]},{"location":"Seeds.html#getstageseed","title":"Get\u00b7Stage\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Seeds.html#int-getstageseed-levelstage-stage","title":"int GetStageSeed ( LevelStage Stage )","text":"","tags":["Class"]},{"location":"Seeds.html#getstartseed","title":"Get\u00b7Start\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Seeds.html#int-getstartseed","title":"int GetStartSeed ( )","text":"<p>The \"start seed\" is a number between 1 and (2^32 - 1) that is used to generate the random elements for the current run. The seed displayed in the pause menu is this number represented in string form.</p> <p>This method will return 0 if it is invoked in the main menu.</p> Example Code <p>This code turns the current run seed into its string representation.   <pre><code>local seed = Game():GetSeeds():GetStartSeed()\nlocal seedString = Seeds.Seed2String(seed) -- Returns a string in the form of \"ABCD DEFG\"\n</code></pre></p>","tags":["Class"]},{"location":"Seeds.html#getstartseedstring","title":"Get\u00b7Start\u00b7Seed\u00b7String ()","text":"","tags":["Class"]},{"location":"Seeds.html#string-getstartseedstring","title":"string GetStartSeedString ( )","text":"<p>The \"start seed\" is a number between 1 and (2^32 - 1) that is used to generate the random elements for the current run. When converted to a string, it looks like \"ABCD EFGH\". (This is the form that is displayed on the pause menu.)</p> <p>This method will return \"B911 99JA\" if it is invoked in the main menu.</p>","tags":["Class"]},{"location":"Seeds.html#hasseedeffect","title":"Has\u00b7Seed\u00b7Effect ()","text":"","tags":["Class"]},{"location":"Seeds.html#boolean-hasseedeffect-seedeffect-value","title":"boolean HasSeedEffect ( SeedEffect Value )","text":"","tags":["Class"]},{"location":"Seeds.html#initseedinfo","title":"Init\u00b7Seed\u00b7Info ()","text":"","tags":["Class"]},{"location":"Seeds.html#static-void-initseedinfo","title":"static void InitSeedInfo ( )","text":"","tags":["Class"]},{"location":"Seeds.html#iscustomrun","title":"Is\u00b7Custom\u00b7Run ()","text":"","tags":["Class"]},{"location":"Seeds.html#boolean-iscustomrun","title":"boolean IsCustomRun ( )","text":"<p>Returns true if the player is in a challenge run or a seeded run.</p>","tags":["Class"]},{"location":"Seeds.html#isinitialized","title":"Is\u00b7Initialized ()","text":"","tags":["Class"]},{"location":"Seeds.html#boolean-isinitialized","title":"boolean IsInitialized ( )","text":"","tags":["Class"]},{"location":"Seeds.html#isseedcombobanned","title":"Is\u00b7Seed\u00b7Combo\u00b7Banned ()","text":"","tags":["Class"]},{"location":"Seeds.html#boolean-isseedcombobanned-seedeffect-seed1-seedeffect-seed2","title":"boolean IsSeedComboBanned ( SeedEffect Seed1, SeedEffect Seed2 )","text":"","tags":["Class"]},{"location":"Seeds.html#isspecialseed","title":"Is\u00b7Special\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Seeds.html#static-boolean-isspecialseed-string-str","title":"static boolean IsSpecialSeed ( string str )","text":"","tags":["Class"]},{"location":"Seeds.html#isstringvalidseed","title":"Is\u00b7String\u00b7Valid\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Seeds.html#static-boolean-isstringvalidseed-string-str","title":"static boolean IsStringValidSeed ( string str )","text":"","tags":["Class"]},{"location":"Seeds.html#removeblockingseedeffects","title":"Remove\u00b7Blocking\u00b7Seed\u00b7Effects ()","text":"","tags":["Class"]},{"location":"Seeds.html#void-removeblockingseedeffects-seedeffect-value","title":"void RemoveBlockingSeedEffects ( SeedEffect Value )","text":"<p>Removes seeds that are banned in conjunction with the given seed.</p>","tags":["Class"]},{"location":"Seeds.html#removeseedeffect","title":"Remove\u00b7Seed\u00b7Effect ()","text":"","tags":["Class"]},{"location":"Seeds.html#void-removeseedeffect-seedeffect-value","title":"void RemoveSeedEffect ( SeedEffect Value )","text":"","tags":["Class"]},{"location":"Seeds.html#reset","title":"Reset ()","text":"","tags":["Class"]},{"location":"Seeds.html#void-reset","title":"void Reset ( )","text":"<p>Removes all seed effects. Only takes effect when the run is restarted.</p>","tags":["Class"]},{"location":"Seeds.html#restart","title":"Restart ()","text":"","tags":["Class"]},{"location":"Seeds.html#void-restart-challenge-currentchallenge","title":"void Restart ( Challenge CurrentChallenge )","text":"<p>Re-selects a random start seed, but only if the start seed was not custom.</p>","tags":["Class"]},{"location":"Seeds.html#seed2string","title":"Seed\u00b72\u00b7String ()","text":"","tags":["Class"]},{"location":"Seeds.html#static-string-seed2string-int-seed","title":"static string Seed2String ( int seed )","text":"<p>Turns a seed into its String representation as used for any in-game seed display.</p> Example Code <p>This code turns the current run seed into its string representation.   <pre><code>local seed = Game():GetSeeds():GetStartSeed()\nlocal seedString = Seeds.Seed2String(seed) -- Returns a string in the form of \"ABCD DEFG\"\n</code></pre></p>","tags":["Class"]},{"location":"Seeds.html#setstartseed","title":"Set\u00b7Start\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Seeds.html#void-setstartseed-string-startseed","title":"void SetStartSeed ( string StartSeed )","text":"<p>Empty string means we will pick a new random seed.</p>","tags":["Class"]},{"location":"Seeds.html#string2seed","title":"String\u00b72\u00b7Seed ()","text":"","tags":["Class"]},{"location":"Seeds.html#static-int-string2seed-string-str","title":"static int String2Seed ( string str )","text":"","tags":["Class"]},{"location":"Sprite.html","title":"Class \"Sprite\"","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#sprite","title":"Sprite ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#sprite-sprite","title":"Sprite Sprite ( )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#functions","title":"Functions","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#getanimation","title":"Get\u00b7Animation ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#string-getanimation","title":"string GetAnimation ( )","text":"<p>Return the name of the currently playing animation.</p>","tags":["Globals","Class"]},{"location":"Sprite.html#getdefaultanimation","title":"Get\u00b7Default\u00b7Animation ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#string-getdefaultanimation","title":"string GetDefaultAnimation ( )","text":"<p>Returns the <code>DefaultAnimation</code> value from the currently loaded anm2 file.</p> <p>This function seems to be the same as <code>GetDefaultAnimationName()</code>.</p> Example Code <p>This code print the default animation name \"WalkDown\" of the player sprite.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal sprite = player:GetSprite()\nprint(sprite:GetDefaultAnimation()) -- this prints \"WalkDown\"\n</code></pre>","tags":["Globals","Class"]},{"location":"Sprite.html#getdefaultanimationname","title":"Get\u00b7Default\u00b7Animation\u00b7Name ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#string-getdefaultanimationname","title":"string GetDefaultAnimationName ( )","text":"<p>Returns the <code>DefaultAnimation</code> value from the currently loaded anm2 file.</p> <p>This function seems to be the same as <code>GetDefaultAnimation()</code>.</p> Example Code <p>This code print the default animation name \"WalkDown\" of the player sprite.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal sprite = player:GetSprite()\nprint(sprite:GetDefaultAnimationName()) -- this prints \"WalkDown\"\n</code></pre>","tags":["Globals","Class"]},{"location":"Sprite.html#getfilename","title":"Get\u00b7Filename ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#string-getfilename","title":"string GetFilename ( )","text":"<p>Returns the path to the anm2 file that is loaded on the sprite.</p> Example Code <p>This code print the .anm2 path of the player sprite.</p> <pre><code>local player = Isaac.GetPlayer()\nlocal sprite = player:GetSprite()\nprint(sprite:GetFilename()) -- this prints \"gfx/001.000_Player.anm2\"\n</code></pre>","tags":["Globals","Class"]},{"location":"Sprite.html#getframe","title":"Get\u00b7Frame ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#int-getframe","title":"int GetFrame ( )","text":"<p>Returns the frame number of the animation that is currently being rendered.</p>","tags":["Globals","Class"]},{"location":"Sprite.html#getlayercount","title":"Get\u00b7Layer\u00b7Count ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#int-getlayercount","title":"int GetLayerCount ( )","text":"<p>Returns the number of layers in the anm2 file that is loaded on the sprite. All animations use the same amount of layers.</p>","tags":["Globals","Class"]},{"location":"Sprite.html#getoverlayanimation","title":"Get\u00b7Overlay\u00b7Animation ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#string-getoverlayanimation","title":"string GetOverlayAnimation ( )","text":"<p>Returns the name of the currently playing overlay animation. (The overlay animation is an independent secondary animation that can be played at the same time as the normal animation.)</p>","tags":["Globals","Class"]},{"location":"Sprite.html#getoverlayframe","title":"Get\u00b7Overlay\u00b7Frame ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#int-getoverlayframe","title":"int GetOverlayFrame ( )","text":"<p>Returns the frame number of the overlay animation that is currently being rendered. (The overlay animation is an independent secondary animation that can be played at the same time as the normal animation.)</p>","tags":["Globals","Class"]},{"location":"Sprite.html#gettexel","title":"Get\u00b7Texel ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#kcolor-gettexel-vector-samplepos-vector-renderpos-float-alphathreshold-int-layerid-0","title":"KColor GetTexel ( Vector SamplePos, Vector RenderPos, float AlphaThreshold, int LayerID = 0 )","text":"<p>Returns the color of the pixel of the sprite at the given sample position. RenderPos can be neglected and set to a null vector</p>","tags":["Globals","Class"]},{"location":"Sprite.html#iseventtriggered","title":"Is\u00b7Event\u00b7Triggered ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#boolean-iseventtriggered-string-eventname","title":"boolean IsEventTriggered ( string EventName )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#isfinished","title":"Is\u00b7Finished ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#boolean-isfinished-string-animationname","title":"boolean IsFinished ( string AnimationName )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#isloaded","title":"Is\u00b7Loaded ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#boolean-isloaded","title":"boolean IsLoaded ( )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#isoverlayfinished","title":"Is\u00b7Overlay\u00b7Finished ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#boolean-isoverlayfinished-string-animationname","title":"boolean IsOverlayFinished ( string AnimationName )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#isoverlayplaying","title":"Is\u00b7Overlay\u00b7Playing ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#boolean-isoverlayplaying-string-animationname","title":"boolean IsOverlayPlaying ( string AnimationName )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#isplaying","title":"Is\u00b7Playing ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#boolean-isplaying-string-animationname","title":"boolean IsPlaying ( string AnimationName )","text":"<p>Returns true/false depending on if the sprite is playing the provided animation name. Names are set in a given sprite's anm2 file.</p> Example Code <p>This code checks the name of the current animation (\"Appear\" and \"Idle\" are used by cards), then replaces its animations with ones loaded from a custom anm2 file called \"Custom_Animations.anm2\", which has the same animation names.</p> <pre><code>if mySprite:IsPlaying(\"Appear\") then\n    mySprite:Load(\"gfx/Custom_Animations.anm2\", true)\n    mySprite:LoadGraphics()\n    mySprite:Play(\"Appear\",true)\n    mySprite:Update()\nelseif mySprite:IsPlaying(\"Idle\") then\n    mySprite:Load(\"gfx/Custom_Animations.anm2\", true)\n    mySprite:LoadGraphics()\n    mySprite:Play(\"Idle\",true)\n    mySprite:Update()\nend\n</code></pre>","tags":["Globals","Class"]},{"location":"Sprite.html#load","title":"Load ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-load-string-anm2path-boolean-loadgraphics","title":"void Load ( string ANM2Path, boolean LoadGraphics )","text":"<p>Loads a given anm2 file. Each sprite must have an anm2 file loaded in order for it to display anything.</p> <ul> <li>ANM2Path - The path to the anm2 file that contains all of the animations for this sprite. This should be relative to the \"resources\" folder.</li> <li>LoadGraphics - Whether or not the <code>Sprite.LoadGraphics</code> method is automatically called after the anm2 file is loaded.</li> </ul> Example Code <p>This code creates a new sprite object, loads an .anm2 file and renders it on the screen.</p> <pre><code>local mySprite = Sprite()\nmySprite:Load(\"gfx/myCoolAnimation.anm2\", true)\nmySprite:Render(Vector(75,75), Vector(0,0), Vector(0,0))\n</code></pre>","tags":["Globals","Class"]},{"location":"Sprite.html#loadgraphics","title":"Load\u00b7Graphics ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-loadgraphics","title":"void LoadGraphics ( )","text":"<p>Used to load the PNG files that are specified in the sprite's anm2. Typically, you would only call this method if you have previously passed false to the <code>loadGraphics</code> argument of the <code>Sprite.Load</code> method or you have called the <code>Sprite.ReplaceSpritesheet</code> method.</p> Example Code <p>This code creates a new sprite object and replaces the spritesheet of layer 0 of a sprite object with a different spritesheet.</p> <pre><code>local mySprite = Sprite()\nmySprite:Load(\"gfx/myCoolAnimation.anm2\", true)\nmySprite:ReplaceSpritesheet(0, \"gfx/my_new_spritesheet.png\")\nmySprite:LoadGraphics()\n</code></pre>","tags":["Globals","Class"]},{"location":"Sprite.html#play","title":"Play ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-play-string-animationname-boolean-force","title":"void Play ( string AnimationName, boolean Force )","text":"<p>Starts executing the given animation, starting at frame 0. After calling this method, you must call the <code>Sprite.Update</code> method on every render frame in order to advance the animation to the next frame. (Typically, you would also check to see if the animation is finished by using the <code>Sprite.IsFinished</code> method.)</p> <p>Calling this method again will reset the current frame back to 0.</p> <ul> <li>Force - If true, the currently playing animation will be stopped, if any. If false, and there is already a currently playing animation, this method will do nothing and the current animation will continue to play.</li> </ul> Example Code <p>This code plays and renders a sprite.</p> <pre><code>    -- Sprite objects only need to be created and loaded once.\nlocal mySprite = Sprite()\nmySprite:Load(\"gfx/myCoolAnimation.anm2\", true)\n\n-- Execute this function only once! for example when an event is triggered\nfunction myPlaySpriteFunction()\n    mySprite:Play(\"MyAnimation\", true)\nend\n\n-- Execute this function every POST_RENDER. For example in the MC_POST_RENDER callback.\nfunction myRenderSpriteFunction()\n    mySprite:Update()\n    mySprite:Render(Vector(50,50), Vector(0,0), Vector(0,0))\nend\n</code></pre>","tags":["Globals","Class"]},{"location":"Sprite.html#playoverlay","title":"Play\u00b7Overlay ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-playoverlay-string-animationname-boolean-force","title":"void PlayOverlay ( string AnimationName, boolean Force )","text":"<p>Starts executing the given overlay animation, starting at frame 0. (The overlay animation is an independent secondary animation that can be played at the same time as the normal animation.) After calling this method, you must call the <code>Sprite.Update</code> method on every render frame in order to advance the animation to the next frame. (Typically, you would also check to see if the animation is finished by using the <code>Sprite.IsOverlayFinished</code> method.)</p> <p>Calling this function again will always reset the current overlay frame back to 0.</p> <ul> <li>Force - If true, the currently playing animation will be stopped, if any. If false, and there is already a currently playing animation, this method will do nothing and the current animation will continue to play.</li> </ul> Example Code <p>This code plays and renders an overlay sprite.</p> <pre><code>    -- Sprite objects only need to be created and loaded once.\nlocal mySprite = Sprite()\nmySprite:Load(\"gfx/myCoolAnimation.anm2\", true)\n\n-- Execute this function only once! for example when an event is triggered\nfunction myPlaySpriteFunction()\n    mySprite:PlayOverlay(\"MyOverlayAnimation\", true)\nend\n\n-- Execute this function every POST_RENDER. For example in the MC_POST_RENDER callback.\nfunction myRenderSpriteFunction()\n    mySprite:Render(Vector(50,50), Vector(0,0), Vector(0,0))\nend\n</code></pre>","tags":["Globals","Class"]},{"location":"Sprite.html#playrandom","title":"Play\u00b7Random ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-playrandom-int-seed","title":"void PlayRandom ( int Seed )","text":"<p>Plays a random animation from the currently loaded anm2 file.</p>","tags":["Globals","Class"]},{"location":"Sprite.html#reload","title":"Reload ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-reload","title":"void Reload ( )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#removeoverlay","title":"Remove\u00b7Overlay ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-removeoverlay","title":"void RemoveOverlay ( )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#render","title":"Render ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-render-vector-position-vector-vector-topleftclamp-vectorzero-vector-bottomrightclamp-vectorzero","title":"void Render ( Vector Position, Vector Vector TopLeftClamp = Vector.Zero, Vector BottomRightClamp = Vector.Zero )","text":"<p>Renders the sprite object at a given screen position, where (0, 0) is the top left corner of the screen.</p> <p>In order for the sprite to be drawn, this function needs to be called on every render frame. (For example in the <code>MC_POST_RENDER</code> callback.)</p> <p>TopLeftClamp and BottomRightClamp can be used to crop the sprite.</p> Example Code <p>This code renders a sprite.</p> <pre><code>    -- Sprite objects only need to be created and loaded once.\nlocal mySprite = Sprite()\nmySprite:Load(\"gfx/myCoolAnimation.anm2\", true)\n\n-- Execute this function every POST_RENDER. For example in the MC_POST_RENDER callback.\nfunction myRenderSpriteFunction()\n    mySprite:Render(Vector(50,50))\nend\n</code></pre>","tags":["Globals","Class"]},{"location":"Sprite.html#renderlayer","title":"Render\u00b7Layer ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-renderlayer-int-layerid-vector-position-vector-topleftclamp-vectorzero-vector-bottomrightclamp-vectorzero","title":"void RenderLayer ( int LayerId, Vector Position, Vector TopLeftClamp = Vector.Zero, Vector BottomRightClamp = Vector.Zero )","text":"<p>Renders a specific layer of the sprite at a given screen position, where (0,0) is the top left corner of the screen.</p> <p>This is similar to the <code>Sprite.Render</code> method, but it will only render a specific layer of the sprite instead of all of the layers at once.</p> <p>TopLeftClamp and BottomRightClamp can be used to crop the sprite.</p> Example Code <p>This code renders layer 3 of a sprite. Layer IDs in most cases start at index 0!</p> <pre><code>    -- Sprite objects only need to be created and loaded once.\nlocal mySprite = Sprite()\nmySprite:Load(\"gfx/myCoolAnimation.anm2\", true)\n\n-- Execute this function every POST_RENDER. For example in the MC_POST_RENDER callback.\nfunction myRenderSpriteFunction()\n    mySprite:RenderLayer(2, Vector(50,50))\nend\n</code></pre>","tags":["Globals","Class"]},{"location":"Sprite.html#replacespritesheet","title":"Replace\u00b7Spritesheet ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-replacespritesheet-int-layerid-string-pngfilename","title":"void ReplaceSpritesheet ( int LayerId, string PngFilename )","text":"<p>Changes the \".png\" file associated with a specific layer of a sprite.</p> <p>After replacing a spritesheet, you must call the <code>Sprite.LoadGraphics</code> method afterwards.</p> Example Code <p>This code creates a new sprite object and replaces the spritesheet of layer 0 of a sprite object with a different spritesheet.</p> <pre><code>local mySprite = Sprite()\nmySprite:Load(\"gfx/myCoolAnimation.anm2\", true)\nmySprite:ReplaceSpritesheet(0, \"gfx/my_new_spritesheet.png\")\nmySprite:LoadGraphics()\n</code></pre>","tags":["Globals","Class"]},{"location":"Sprite.html#reset","title":"Reset ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-reset","title":"void Reset ( )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#setanimation","title":"Set\u00b7Animation ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#boolean-setanimation-string-animationname-boolean-reset-true","title":"boolean SetAnimation ( string AnimationName, boolean Reset = true )","text":"<p>Similar to the <code>Sprite.Play</code> method, but does not start the animation.</p> <ul> <li>Reset - as false will continue the animation from the current frame. This is a really good tool for familiars that alternate between different FloatDirection animations dynamically and other entities that follow similar behaviors.</li> </ul>","tags":["Globals","Class"]},{"location":"Sprite.html#setframe","title":"Set\u00b7Frame ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-setframe-int-framenum","title":"void SetFrame ( int FrameNum )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-setframe-string-animationname-int-framenum","title":"void SetFrame ( string AnimationName, int FrameNum )","text":"<p>Changes the current animation to a specific frame.</p> <p>Note that normally, you would use the <code>Sprite.Update</code> method to automatically iterate the sprite's animation frame. Thus, this method is typically used for sprites that don't play animations.</p> <p>The <code>Sprite.SetFrame</code> method has two overloads: one which supports setting an animation at the same time, and one that uses the currently playing animation.</p>","tags":["Globals","Class"]},{"location":"Sprite.html#setlastframe","title":"Set\u00b7Last\u00b7Frame ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-setlastframe","title":"void SetLastFrame ( )","text":"<p>Sets the currently playing animation to be on its last frame.</p>","tags":["Globals","Class"]},{"location":"Sprite.html#setlayerframe","title":"Set\u00b7Layer\u00b7Frame ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-setlayerframe-int-layerid-int-framenum","title":"void SetLayerFrame ( int LayerId, int FrameNum )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#setoverlayanimation","title":"Set\u00b7Overlay\u00b7Animation ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#boolean-setoverlayanimation-string-animationname","title":"boolean SetOverlayAnimation ( string AnimationName )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#setoverlayframe","title":"Set\u00b7Overlay\u00b7Frame ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-setoverlayframe-string-animationname-int-framenum","title":"void SetOverlayFrame ( string AnimationName, int FrameNum )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#setoverlayrenderpriority","title":"Set\u00b7Overlay\u00b7Render\u00b7Priority ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-setoverlayrenderpriority-boolean-renderfirst","title":"void SetOverlayRenderPriority ( boolean RenderFirst )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#stop","title":"Stop ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-stop","title":"void Stop ( )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#update","title":"Update ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#void-update","title":"void Update ( )","text":"<p>Advances the currently playing animation by one frame.</p>","tags":["Globals","Class"]},{"location":"Sprite.html#waseventtriggered","title":"Was\u00b7Event\u00b7Triggered ()","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#boolean-waseventtriggered-string-eventname","title":"boolean WasEventTriggered ( string EventName )","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#variables","title":"Variables","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#color","title":"Color","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#color-color","title":"Color Color","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#flipx","title":"FlipX","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#boolean-flipx","title":"boolean FlipX","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#flipy","title":"FlipY","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#boolean-flipy","title":"boolean FlipY","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#offset","title":"Offset","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#vector-offset","title":"Vector Offset","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#playbackspeed","title":"Playback\u00b7Speed","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#float-playbackspeed","title":"float PlaybackSpeed","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#rotation","title":"Rotation","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#float-rotation","title":"float Rotation","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#scale","title":"Scale","text":"","tags":["Globals","Class"]},{"location":"Sprite.html#vector-scale","title":"Vector Scale","text":"","tags":["Globals","Class"]},{"location":"TearParams.html","title":"Class \"TearParams\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>EntityPlayer:GetTearHitParams()</li> </ul> Example Code <pre><code>local player = Isaac.GetPlayer()\nlocal tempEffects = player:GetTearHitParams(WeaponType.WEAPON_TEARS, 1, 1, nil)\n</code></pre>","tags":["Class"],"boost":0.25},{"location":"TearParams.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#bombvariant","title":"Bomb\u00b7Variant","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#int-bombvariant","title":"int BombVariant","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#tearcolor","title":"Tear\u00b7Color","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#color-tearcolor","title":"Color TearColor","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#teardamage","title":"Tear\u00b7Damage","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#float-teardamage","title":"float TearDamage","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#tearflags","title":"Tear\u00b7Flags","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#tearflags-tearflags","title":"TearFlags TearFlags","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#tearheight","title":"Tear\u00b7Height","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#float-tearheight","title":"float TearHeight","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#tearscale","title":"Tear\u00b7Scale","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#float-tearscale","title":"float TearScale","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#tearvariant","title":"Tear\u00b7Variant","text":"","tags":["Class"],"boost":0.25},{"location":"TearParams.html#int-tearvariant","title":"int TearVariant","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffect.html","title":"Class \"TemporaryEffect\"","text":"Info <p>You can get this class by using the following functions:</p> <ul> <li>TemporaryEffects:GetCollectibleEffect()</li> <li>TemporaryEffects:GetNullEffect()</li> <li>TemporaryEffects:GetTrinketEffect()</li> </ul> Example Code <pre><code>local player = Isaac.GetPlayer()\nlocal tempEffects = player:GetEffects()\nlocal tempEffect = tempEffects:GetCollectibleEffect(CollectibleType.COLLECTIBLE_SAD_ONION)\n</code></pre>","tags":["Class"],"boost":0.25},{"location":"TemporaryEffect.html#variables","title":"Variables","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffect.html#cooldown","title":"Cooldown","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffect.html#int-cooldown","title":"int Cooldown","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffect.html#count","title":"Count","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffect.html#int-count","title":"int Count","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffect.html#item","title":"Item","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffect.html#itemconfig-item-item","title":"ItemConfig Item Item","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html","title":"Class \"TemporaryEffects\"","text":"Info <p>You can get this class by using the following function:</p> <ul> <li>EntityPlayer:GetEffects()</li> </ul> Example Code <pre><code>local player = Isaac.GetPlayer()\nlocal tempEffects = player:GetEffects()\n</code></pre>","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#functions","title":"Functions","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#addcollectibleeffect","title":"Add\u00b7Collectible\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#void-addcollectibleeffect-collectibletype-collectibletype-boolean-addcostume-true-int-count-1","title":"void AddCollectibleEffect ( CollectibleType CollectibleType, boolean AddCostume = true, int Count = 1 )","text":"<p>Adds the CollectibleEffect associated with a given item. If the passed item's CollectibleEffect is marked to have a cooldown or be persistent in items.xml, this will be respected.</p> Misinformation <p>TemporaryEffects, despite their names, are not and were never intended to be fake or temporary copies of items. Notably every single active item automatically grants its CollectibleEffect on use, and this is often closely tied to its effect; CollectibleEffects can therefore be visuallised more as an item's state. For example in passive items:</p> <ul> <li>Holy Mantle utilises its CollectibleEffect to track how many shield charges the player currently has.</li> <li>Most familiar items can have their familiar granted via their CollectibleEffect.</li> <li>Whore of Babylon and Crown of Light grant their CollectibleEffects while activated.</li> </ul> <p>Some items can have their effects granted invisibly through the use of their CollectibleEffect, oftentimes this is because another item pre-repentance wished to invoke its effect (such as Monster Manual). Many post-repentance items use real fake copies of items for this purpose, but adding these is not supported by the API and some such as Hemoptysis and Berserk! still use CollectibleEffects for their cooldowns. You should not assume that any given item will work as a TemporaryEffect the same as it does when actually obtained.</p> Supported Items <p>Passive items with notable CollectibleEffects (excluding quest items).</p> <ul> <li>Sad Onion</li> <li>Inner Eye</li> <li>Spoon Bender</li> <li>My Reflection</li> <li>Number One</li> <li>Brother Bobby</li> <li>Magic Mushroom</li> <li>The Virus</li> <li>Roid Rage</li> <li>Transcendence</li> <li>Mom's Underwear</li> <li>Mom's Heels</li> <li>Mom's Lipstick</li> <li>Mom's Eye</li> <li>Distant Admiration</li> <li>Sister Maggy</li> <li>Growth Hormones</li> <li>Mini Mush</li> <li>Cube of Meat (all levels)</li> <li>Little Chubby</li> <li>Sack of Pennies</li> <li>Robo-Baby</li> <li>Little Chad</li> <li>The Relic</li> <li>Little Gish</li> <li>Little Steven</li> <li>The Wafer</li> <li>Mom's Contacts</li> <li>Guardian Angel</li> <li>Demon Baby</li> <li>Mom's Knife</li> <li>Ouija Board</li> <li>Dead Bird (spawns the bird without having to get hit)</li> <li>Brimstone</li> <li>Odd Mushroom (Thin)</li> <li>Odd Mushroom (Large)</li> <li>Whore of Babylon (grants the effect without having to be at half a heart or less)</li> <li>Forever Alone</li> <li>Bomb Bag</li> <li>Speed Ball</li> <li>Bum Friend</li> <li>Tough Love</li> <li>Peeper (only gives the familiar)</li> <li>Ghost Baby</li> <li>Harlequin Baby</li> <li>Daddy Longlegs</li> <li>Sacrificial Dagger</li> <li>Rainbow Baby</li> <li>Holy Water</li> <li>Guppy's Hairball</li> <li>Abel</li> <li>Mom's Key</li> <li>Mom's Eyeshadow</li> <li>Iron Bar</li> <li>The Guillotine</li> <li>Ball of Bandages (all levels)</li> <li>Anemic (grants the creep trail without having to get hit)</li> <li>Mom's Wig</li> <li>Mom's Perfume</li> <li>Death's Touch</li> <li>Experimental Treatment (stat changes are seeded per room)</li> <li>20/20 (no damage down)</li> <li>Hive Mind</li> <li>Fire Mind</li> <li>Dark Matter</li> <li>Proptosis</li> <li>Smart Fly</li> <li>Dry Baby</li> <li>Juciy Sack</li> <li>Robo-Baby 2.0</li> <li>Rotten Baby</li> <li>Headless Baby</li> <li>Leech</li> <li>Mystery Sack</li> <li>BBF</li> <li>Bob's Brain</li> <li>Best Bud (grants the familiar witout having to get hit)</li> <li>Lil Brimstone</li> <li>Lil Haunt</li> <li>Dark Bum</li> <li>Big Fan</li> <li>Sissy Longlegs</li> <li>Punching Bag</li> <li>Leo</li> <li>Holy Mantle</li> <li>Mysterious Liquid</li> <li>Gemini</li> <li>Cain's Other Eye</li> <li>???'s Only Friend</li> <li>Samson's Chains</li> <li>Mongo Baby</li> <li>Blue Cap</li> <li>Synthoil</li> <li>Mom's Pearls</li> <li>The Wiz</li> <li>Incubus</li> <li>Fate's Reward</li> <li>Lil Chest</li> <li>Sworn Protector</li> <li>Friend Zone</li> <li>Lost Fly</li> <li>Charged Baby</li> <li>Holy Light</li> <li>Lil Gurdy</li> <li>Bumbo</li> <li>Censer</li> <li>Key Bum</li> <li>Rune Bag</li> <li>Seraphim</li> <li>Tractor Beam (only grants a tears up)</li> <li>God's Flesh</li> <li>Spider Mod</li> <li>Farting Baby</li> <li>Empty Vessel (grants flight even with red hearts; shield doesn't trigger)</li> <li>Lusty Blood (each count of the effect increases damage; doesn't increase with kills)</li> <li>Crown of Light (only gives range up and shot speed down, doesn't go away when hit)</li> <li>Succubus</li> <li>Fruit Cake</li> <li>Obsessed Fan</li> <li>Head of the Keeper</li> <li>Papa Fly</li> <li>Multidimensional Baby</li> <li>Lil Loki</li> <li>Milk! (grants a tears up instead of the familiar)</li> <li>Dark Prince's Crown (grants its effect as if it was active no matter your health)</li> <li>Finger!</li> <li>Shade</li> <li>Depression</li> <li>Hushy</li> <li>Lil Monstro</li> <li>King Baby</li> <li>Big Chubby</li> <li>Acid Baby</li> <li>Yo Listen!</li> <li>Adrenaline</li> <li>Euthanasia</li> <li>Camo Undies</li> <li>Sack of Sacks</li> <li>Mom's Razor</li> <li>Bloodshot Eye</li> <li>Angry Fly</li> <li>Buddy in a Box</li> <li>Lil Delirium</li> <li>7 Seals</li> <li>Angelic Prism</li> <li>Lil Spewer</li> <li>Mystery Egg</li> <li>Slipped Rib</li> <li>Hallowed Ground</li> <li>Pointy Rib</li> <li>Jaw Bone</li> <li>Blood Puppy</li> <li>Paschal Candle (each count of the effect increases tears; doesn't give the familiar)</li> <li>Eye of the Occult (doesn't change any stats)</li> <li>Intruder (doesn't release the spider on hit)</li> <li>Psy Fly</li> <li>Mars (immediately causes the dash effect)</li> <li>Uranus</li> <li>Boiled Baby</li> <li>Freezer Baby</li> <li>Bird Cage (spawns the bird without having to get hit)</li> <li>Lil Dumpy</li> <li>Bot Fly</li> <li>Tinytoma</li> <li>Fruity Plum</li> <li>Cube Baby</li> <li>Astral Projection (turns you into the ghost that gets a free hit + flight)</li> <li>Lil Abaddon</li> <li>Lil Portal</li> <li>Worm Friend</li> <li>Innner Child (permanently grants speed and size down as if you just revived)</li> <li>Twisted Pair</li> <li>Mom's Ring</li> </ul> Example Code <p>This code applies the effect and costume of the item \"Sad Onion\" to the player.</p> <pre><code>local player = Isaac.GetPlayer()\nplayer:GetEffects():AddCollectibleEffect(CollectibleType.COLLECTIBLE_SAD_ONION, true)\n</code></pre>","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#addnulleffect","title":"Add\u00b7Null\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#void-addnulleffect-itemconfignullitemid-nullid-boolean-addcostume-true-int-count-1","title":"void AddNullEffect ( ItemConfigNullItemID NullId, boolean AddCostume = true, int Count = 1 )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#addtrinketeffect","title":"Add\u00b7Trinket\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#void-addtrinketeffect-trinkettype-trinkettype-boolean-addcostume-true-int-count-1","title":"void AddTrinketEffect ( TrinketType TrinketType, boolean AddCostume = true, int Count = 1 )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#cleareffects","title":"Clear\u00b7Effects ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#void-cleareffects","title":"void ClearEffects ( )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#getcollectibleeffect","title":"Get\u00b7Collectible\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#const-temporaryeffect-getcollectibleeffect-collectibletype-collectibletype","title":"const TemporaryEffect GetCollectibleEffect ( CollectibleType CollectibleType )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#getcollectibleeffectnum","title":"Get\u00b7Collectible\u00b7Effect\u00b7Num ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#int-getcollectibleeffectnum-collectibletype-collectibletype","title":"int GetCollectibleEffectNum ( CollectibleType CollectibleType )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#geteffectslist","title":"Get\u00b7Effects\u00b7List ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#const-effectlist-geteffectslist","title":"const EffectList GetEffectsList ( )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#getnulleffect","title":"Get\u00b7Null\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#const-temporaryeffect-getnulleffect-itemconfignullitemid-nullid","title":"const TemporaryEffect GetNullEffect ( ItemConfigNullItemID NullId )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#getnulleffectnum","title":"Get\u00b7Null\u00b7Effect\u00b7Num ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#int-getnulleffectnum-itemconfignullitemid-nullid","title":"int GetNullEffectNum ( ItemConfigNullItemID NullId )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#gettrinketeffect","title":"Get\u00b7Trinket\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#const-temporaryeffect-gettrinketeffect-trinkettype-trinkettype","title":"const TemporaryEffect GetTrinketEffect ( TrinketType TrinketType )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#gettrinketeffectnum","title":"Get\u00b7Trinket\u00b7Effect\u00b7Num ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#int-gettrinketeffectnum-trinkettype-trinkettype","title":"int GetTrinketEffectNum ( TrinketType TrinketType )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#hascollectibleeffect","title":"Has\u00b7Collectible\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#boolean-hascollectibleeffect-collectibletype-collectibletype","title":"boolean HasCollectibleEffect ( CollectibleType CollectibleType )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#hasnulleffect","title":"Has\u00b7Null\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#boolean-hasnulleffect-itemconfignullitemid-nullid","title":"boolean HasNullEffect ( ItemConfigNullItemID NullId )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#hastrinketeffect","title":"Has\u00b7Trinket\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#boolean-hastrinketeffect-trinkettype-trinkettype","title":"boolean HasTrinketEffect ( TrinketType TrinketType )","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#removecollectibleeffect","title":"Remove\u00b7Collectible\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#void-removecollectibleeffect-collectibletype-collectibletype-int-count-1","title":"void RemoveCollectibleEffect ( CollectibleType CollectibleType, int Count = 1 )","text":"<p>Count = -1 removes all instances of the effect</p>","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#removenulleffect","title":"Remove\u00b7Null\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#void-removenulleffect-itemconfignullitemid-nullid-int-count-1","title":"void RemoveNullEffect ( ItemConfigNullItemID NullId, int Count = 1 )","text":"<p>Count = -1 removes all instances of the effect</p>","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#removetrinketeffect","title":"Remove\u00b7Trinket\u00b7Effect ()","text":"","tags":["Class"],"boost":0.25},{"location":"TemporaryEffects.html#void-removetrinketeffect-trinkettype-trinkettype-int-count-1","title":"void RemoveTrinketEffect ( TrinketType TrinketType, int Count = 1 )","text":"<p>Count = -1 removes all instances of the effect</p>","tags":["Class"],"boost":0.25},{"location":"Vector.html","title":"Class \"Vector\"","text":"","tags":["Globals","Class"]},{"location":"Vector.html#constructors","title":"Constructors","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector","title":"Vector ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector-vector-float-float","title":"Vector Vector ( float , float )","text":"","tags":["Globals","Class"]},{"location":"Vector.html#constants","title":"Constants","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vectorzero","title":"Vector.Zero","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vectorone","title":"Vector.One","text":"","tags":["Globals","Class"]},{"location":"Vector.html#operators","title":"Operators","text":"","tags":["Globals","Class"]},{"location":"Vector.html#__add","title":"__add ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector-__add-vector-right","title":"Vector __add ( Vector Right )","text":"<p>Defines the Addition of two Vector objects using the <code>+</code> operator.</p> Example Code <pre><code>local vec1 = Vector(2,1)\nlocal vec2 = Vector(5,3)\nlocal result = vec1+vec2 -- result equals Vector(7,4) now\n</code></pre>","tags":["Globals","Class"]},{"location":"Vector.html#__div","title":"__div ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector-__div-float-modifier","title":"Vector __div ( float Modifier )","text":"<p>Defines the Division of two Vector objects using the <code>/</code> operator.</p> Example Code <pre><code>local vec1 = Vector(6,4)\nlocal vec2 = Vector(2,4)\nlocal result = vec1/vec2 -- result equals Vector(3,1) now\n</code></pre>","tags":["Globals","Class"]},{"location":"Vector.html#__mul","title":"__mul ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector-__mul-float-modifier","title":"Vector __mul ( float Modifier )","text":"<p>Defines the Multiplication of two Vector objects using the <code>*</code> operator.</p> Example Code <pre><code>local vec1 = Vector(2,3)\nlocal vec2 = Vector(5,3)\nlocal result = vec1*vec2 -- result equals Vector(10,9) now\n</code></pre>","tags":["Globals","Class"]},{"location":"Vector.html#__sub","title":"__sub ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector-__sub-vector-right","title":"Vector __sub ( Vector Right )","text":"<p>Defines the Subtraction of two Vector objects using the <code>-</code> operator.</p> Example Code <pre><code>local vec1 = Vector(2,1)\nlocal vec2 = Vector(5,3)\nlocal result = vec1-vec2 -- result equals Vector(-3,-2) now\n</code></pre>","tags":["Globals","Class"]},{"location":"Vector.html#__unm","title":"__unm ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector-__unm-vector-right","title":"Vector __unm ( Vector Right )","text":"<p>Defines the inversion of a Vector object using the <code>-</code> operator.</p> Example Code <pre><code>local vec1 = Vector(2,1)\nlocal result = -vec1 -- result equals Vector(-2,-1) now\n</code></pre>","tags":["Globals","Class"]},{"location":"Vector.html#functions","title":"Functions","text":"","tags":["Globals","Class"]},{"location":"Vector.html#clamp","title":"Clamp ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#void-clamp-float-minx-float-miny-float-maxx-float-maxy","title":"void Clamp ( float MinX, float MinY, float MaxX, float MaxY )","text":"<p>Clamps the vector based on left, top, right, bottom boundings. Doesn't keep direction</p>","tags":["Globals","Class"]},{"location":"Vector.html#clamped","title":"Clamped ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector-clamped-float-minx-float-miny-float-maxx-float-maxy","title":"Vector Clamped ( float MinX, float MinY, float MaxX, float MaxY )","text":"<p>Returns a clamped version of the vector.</p>","tags":["Globals","Class"]},{"location":"Vector.html#cross","title":"Cross ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#float-cross-vector-second","title":"float Cross ( Vector second )","text":"<p>Cross product this is the 2x2 matrix determinant or the resulting z value for their 3D versions with z=0</p>","tags":["Globals","Class"]},{"location":"Vector.html#distance","title":"Distance ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#float-distance-vector-first-vector-second","title":"float Distance ( Vector first, Vector second )","text":"<p>Returns distance between two vectors</p> Example Code <pre><code>local sqtDist = Vector(2,0):Distance(Vector(4,0)) --sqtDist = 2\n</code></pre>","tags":["Globals","Class"]},{"location":"Vector.html#distancesquared","title":"Distance\u00b7Squared ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#float-distancesquared-vector-first-vector-second","title":"float DistanceSquared ( Vector first, Vector second )","text":"<p>Returns squared distance between two vectors</p> Example Code <pre><code>local sqtDist = Vector(2,0):DistanceSquared(Vector(4,0)) --sqtDist = 4\n</code></pre>","tags":["Globals","Class"]},{"location":"Vector.html#dot","title":"Dot ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#float-dot-vector-second","title":"float Dot ( Vector second )","text":"<p>Dot product</p>","tags":["Globals","Class"]},{"location":"Vector.html#fromangle","title":"From\u00b7Angle ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#static-vector-fromangle-float-angledegrees","title":"static Vector FromAngle ( float AngleDegrees )","text":"<p>Build a Vector from an angle, returns a normalized vector. Angle 0 will result in (1, 0). Angle 90 will result in (0, 1).</p> Example Code <p>This code returns a vector that has a 45 degree angle <pre><code>local vec = Vector.FromAngle(45) --vec is now Vector(0.70711,0.70711)\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Vector.html#getangledegrees","title":"Get\u00b7Angle\u00b7Degrees ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#float-getangledegrees","title":"float GetAngleDegrees ( )","text":"<p>Returns the angle the vector is facing. The vector (1, 0) will be at 0 degrees. The vector (0, 1) will be at 90 degrees.</p> <p>Practically, this means:</p> <ul> <li>Right: 0</li> <li>Up: -90</li> <li>Left: 180</li> <li>Down: 90</li> </ul> Example Code <p>This code returns the angle between two positions. <pre><code>local v1 = Vector(1,0) -- has angle 0.0\nlocal v2 = Vector(0,1) -- has angle 90.0\nlocal v3 = v2-v1 -- subtraction of 2 points is a vector connecting the two points\nprint(v3:GetAngleDegrees()) -- prints 45.0\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Vector.html#length","title":"Length ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#float-length","title":"float Length ( )","text":"<p>Returns the length of the vector</p>","tags":["Globals","Class"]},{"location":"Vector.html#lengthsquared","title":"Length\u00b7Squared ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#float-lengthsquared","title":"float LengthSquared ( )","text":"<p>Returns the length squared of the vector</p>","tags":["Globals","Class"]},{"location":"Vector.html#lerp","title":"Lerp ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector-lerp-vector-first-vector-second-float-t","title":"Vector Lerp ( Vector first, Vector second, float t )","text":"<p>Linear interpolation between two vectors. For t = 0 it returns the first Vector, for t = 1 it returns the second.</p> Alternate Function example <p>This function does the same as Lerp, but will not alter the input vectors. <pre><code>function Lerp(vec1, vec2, percent)\n    return vec1 * (1 - percent) + vec2 * percent\nend\n</code></pre></p> Example Code <p>This code will make v1 the vector 50% in between v1 and v2 <pre><code>local v1 = Vector(0,0)\nlocal v2 = Vector(1,1)\nv1:Lerp(v2,0.5) -- v1 equals  Vector(0.5,0.5)  now\n</code></pre></p>","tags":["Globals","Class"]},{"location":"Vector.html#normalize","title":"Normalize ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#void-normalize","title":"void Normalize ( )","text":"<p>Normalizes this vector, effectively making its length equal 1.</p>","tags":["Globals","Class"]},{"location":"Vector.html#normalized","title":"Normalized ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector-normalized","title":"Vector Normalized ( )","text":"<p>Returns a normalized version of this vector, effectively making its length equal 1.</p>","tags":["Globals","Class"]},{"location":"Vector.html#resize","title":"Resize ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#void-resize-float-newlength","title":"void Resize ( float NewLength )","text":"<p>Resizes the vector length.</p>","tags":["Globals","Class"]},{"location":"Vector.html#resized","title":"Resized ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector-resized-float-newlength","title":"Vector Resized ( float NewLength )","text":"<p>Returns a resized version of the vector.</p>","tags":["Globals","Class"]},{"location":"Vector.html#rotated","title":"Rotated ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#vector-rotated-float-angledegrees","title":"Vector Rotated ( float AngleDegrees )","text":"<p>Returns a rotated version of the vector by AngleDegrees</p>","tags":["Globals","Class"]},{"location":"Vector.html#__tostring","title":"__tostring ()","text":"","tags":["Globals","Class"]},{"location":"Vector.html#void-__tostring","title":"void __tostring ( )","text":"<p>Vector objects can be cast to a string object, which returns information about this object in the following format:</p> <pre><code>Vector(X,Y)\n</code></pre>","tags":["Globals","Class"]},{"location":"Vector.html#variables","title":"Variables","text":"","tags":["Globals","Class"]},{"location":"Vector.html#x","title":"X","text":"","tags":["Globals","Class"]},{"location":"Vector.html#float-x","title":"float X","text":"<p>Components of vector.</p>","tags":["Globals","Class"]},{"location":"Vector.html#y","title":"Y","text":"","tags":["Globals","Class"]},{"location":"Vector.html#float-y","title":"float Y","text":"","tags":["Globals","Class"]},{"location":"tags.html","title":"Tags","text":"","boost":-999},{"location":"tags.html#class","title":"Class","text":"<ul> <li>BitSet128</li> <li>Color</li> <li>RoomConfigEntries</li> <li>RoomConfigSpawns</li> <li>RoomDescriptor</li> <li>intValues</li> <li>EntityList</li> <li>CardConfigList</li> <li>CostumeConfigList</li> <li>EffectList</li> <li>ItemConfigList</li> <li>PillConfigList</li> <li>VectorList</li> <li>Entity</li> <li>EntityBomb</li> <li>EntityEffect</li> <li>EntityFamiliar</li> <li>EntityKnife</li> <li>EntityLaser</li> <li>EntityNPC</li> <li>EntityPickup</li> <li>EntityPlayer</li> <li>EntityProjectile</li> <li>EntityPtr</li> <li>EntityRef</li> <li>EntityTear</li> <li>Font</li> <li>Game</li> <li>GridEntity</li> <li>GridEntityDesc</li> <li>GridEntityDoor</li> <li>GridEntityPit</li> <li>GridEntityPoop</li> <li>GridEntityPressurePlate</li> <li>GridEntityRock</li> <li>GridEntitySpikes</li> <li>GridEntityTNT</li> <li>HUD</li> <li>Input</li> <li>ItemConfig Functions</li> <li>ItemConfig - Card</li> <li>ItemConfig - Costume</li> <li>ItemConfig - Item</li> <li>ItemConfig - PillEffect</li> <li>ItemPool</li> <li>KColor</li> <li>Level</li> <li>Mod Reference</li> <li>MusicManager</li> <li>Options</li> <li>PathFinder</li> <li>PlayerTypesActiveItemDesc</li> <li>PlayerTypesPosVel</li> <li>ProjectileParams</li> <li>QueueItemData</li> <li>RNG</li> <li>Room</li> <li>Entry</li> <li>Room</li> <li>Spawn</li> <li>RoomDescriptor</li> <li>SFXManager</li> <li>Seeds</li> <li>Sprite</li> <li>TearParams</li> <li>TemporaryEffect</li> <li>TemporaryEffects</li> <li>Vector</li> </ul>","boost":-999},{"location":"tags.html#enum","title":"Enum","text":"<ul> <li>ActionTriggers</li> <li>ActiveSlot</li> <li>BabySubType</li> <li>BackdropType</li> <li>BatterySubType</li> <li>BedSubType</li> <li>BombSubType</li> <li>BombVariant</li> <li>ButtonAction</li> <li>CacheFlag</li> <li>CallbackPriority</li> <li>Card</li> <li>Challenge</li> <li>ChampionColor</li> <li>ChestSubType</li> <li>CoinSubType</li> <li>CollectibleType</li> <li>DamageFlag</li> <li>Difficulty</li> <li>Direction</li> <li>DoorSlot</li> <li>DoorState</li> <li>DoorVariant</li> <li>EffectVariant</li> <li>EntityCollisionClass</li> <li>EntityFlag</li> <li>EntityGridCollisionClass</li> <li>EntityPartition</li> <li>EntityType</li> <li>FamiliarVariant</li> <li>GameStateFlag</li> <li>GridCollisionClass</li> <li>GridEntityType</li> <li>GridRooms</li> <li>HeartSubType</li> <li>InputHook</li> <li>ItemConfig</li> <li>ItemPoolType</li> <li>ItemType</li> <li>KeySubType</li> <li>Keyboard</li> <li>LaserOffset</li> <li>LaserSubType</li> <li>LaserVariant</li> <li>LevelCurse</li> <li>LevelStage</li> <li>LevelStateFlag</li> <li>LocustSubtypes</li> <li>ModCallbacks</li> <li>Mouse</li> <li>Music</li> <li>NpcState</li> <li>NullItemID</li> <li>PickupPrice</li> <li>PickupVariant</li> <li>PillColor</li> <li>PillEffect</li> <li>PlayerForm</li> <li>PlayerSpriteLayer</li> <li>PlayerType</li> <li>PoopPickupSubType</li> <li>PoopSpellType</li> <li>ProjectileFlags</li> <li>ProjectileVariant</li> <li>RenderMode</li> <li>RoomDescriptor</li> <li>RoomShape</li> <li>RoomTransitionAnim</li> <li>RoomType</li> <li>SackSubType</li> <li>SeedEffect</li> <li>SkinColor</li> <li>SortingLayer</li> <li>SoundEffect</li> <li>StageType</li> <li>TearFlags</li> <li>TearVariant</li> <li>TrinketType</li> <li>UseFlag</li> <li>WeaponType</li> </ul>","boost":-999},{"location":"tags.html#faq","title":"FAQ","text":"<ul> <li>\u5e38\u89c1\u95ee\u9898</li> <li>\u4ea4\u4e92\u5f0f\u95ee\u7b54</li> </ul>","boost":-999},{"location":"tags.html#file","title":"File","text":"<ul> <li>achievements.xml</li> <li>ambush.xml</li> <li>babies.xml</li> <li>backdrops.xml</li> <li>bombcostumes.xml</li> <li>bosscolors.xml</li> <li>bossoverlays.xml</li> <li>bosspools.xml</li> <li>bossportraits.xml</li> <li>challenges.xml</li> <li>costumes2.xml</li> <li>curses.xml</li> <li>cutscenes.xml</li> <li>entities2.xml</li> <li>fortunes.txt</li> <li>fxlayers.xml</li> <li>giantbook.xml</li> <li>itempools.xml</li> <li>items.xml</li> <li>items_metadata.xml</li> <li>locusts.xml</li> <li>minibosses.xml</li> <li>music.xml</li> <li>nightmares.xml</li> <li>playerforms.xml</li> <li>players.xml</li> <li>pocketitems.xml</li> <li>preload.xml</li> <li>recipes.xml</li> <li>rules.txt</li> <li>seedmenu.xml</li> <li>seeds.txt</li> <li>sounds.xml</li> <li>stages.xml</li> <li>translations.xml</li> <li>wisps.xml</li> </ul>","boost":-999},{"location":"tags.html#globals","title":"Globals","text":"<ul> <li>BitSet128</li> <li>Color</li> <li>EntityPtr</li> <li>EntityRef</li> <li>Font</li> <li>Game</li> <li>\u5168\u5c40\u51fd\u6570</li> <li>\u5168\u5c40\u53d8\u91cf</li> <li>KColor</li> <li>MusicManager</li> <li>Options</li> <li>ProjectileParams</li> <li>RNG</li> <li>SFXManager</li> <li>Sprite</li> <li>Vector</li> </ul>","boost":-999},{"location":"tags.html#isaac","title":"Isaac","text":"<ul> <li>Isaac</li> </ul>","boost":-999},{"location":"tags.html#player","title":"Player","text":"<ul> <li>EntityPlayer</li> </ul>","boost":-999},{"location":"tags.html#tools","title":"Tools","text":"<ul> <li>\u52a8\u753b\u7f16\u8f91\u5668</li> <li>\u9053\u5177\u6c60\u7f16\u8f91\u5668</li> <li>XML\u9a8c\u8bc1\u5668</li> <li>\u5de5\u5177\u6982\u89c8</li> </ul>","boost":-999},{"location":"tags.html#tutorial","title":"Tutorial","text":"<ul> <li>\u4f7f\u7528\u6807\u51c6\u5e93</li> <li>\u52a8\u753b\u7f16\u8f91\u5668</li> <li>\u9053\u5177\u6c60\u7f16\u8f91\u5668</li> <li>\u6e32\u67d3\u6587\u672c</li> <li>\u4f7f\u7528\u989d\u5916\u7684.lua\u6587\u4ef6</li> <li>\u76ee\u5f55\u548c\u5b58\u6863\u6587\u4ef6</li> <li>\u7ec4\u7ec7Mod</li> <li>\u50a8\u5b58\u6570\u636e</li> </ul>","boost":-999},{"location":"tags.html#_1","title":"\u5168\u5c40","text":"<ul> <li>Isaac</li> </ul>","boost":-999},{"location":"tags.html#_2","title":"\u6559\u7a0b","text":"<ul> <li>\u4e0d\u4f7f\u7528Lua\u6dfb\u52a0\u9053\u5177\u5916\u89c2</li> <li>\u81ea\u5b9a\u4e49\u56de\u8c03</li> <li>\u63a7\u5236\u53f0</li> <li>\u793a\u4f8b\u9879\u76ee</li> <li>Lua\u4e2d\u7684\u51fd\u6570</li> <li>\u6570\u5b66\u548cLua\u6280\u5de7</li> <li>\u7f16\u5199\u5c4f\u5e55\u7740\u8272\u5668</li> <li>\u4f7f\u7528ZeroBrane Studio\u8fdb\u884c\u8c03\u8bd5</li> </ul>","boost":-999},{"location":"tags.html#_3","title":"\u7c7b","text":"<ul> <li>Isaac</li> </ul>","boost":-999},{"location":"entities/EntityData.html","title":"Entity data documentation","text":""},{"location":"entities/EntityData.html#about","title":"About","text":"<p>This chart documents the effects of the <code>V1</code>, <code>V2</code>, <code>I1</code>, <code>I2</code>, and <code>State</code> fields for many NPCs. This is useful for creating variants of existing entities or changing their behavior.</p> <p>This page is currently a work in progress; Ethereal plans to add more NPCs to the list soon.</p>"},{"location":"entities/EntityData.html#enemy-list","title":"Enemy List","text":"Id Entity States I1 I2 V1 V2 10 ENTITY_GAPER MOVE - Used while the Gaper is moving Unused Unused Unused Unused 11 ENTITY_GUSHER MOVE - Used while the Gusher is moving Unused Unused Unused Unused 12 ENTITY_HORF Unused Unused Unused Unused Unused 13 ENTITY_FLY IDLE - Used while the Fly is moving Unused Unused The fly's velocity Unused 14 ENTITY_POOTER IDLE - Used while the Pooter is moving Unused Unused The Pooter's velocity Unused 15 ENTITY_CLOTTY MOVE - Used while the Clotty is movingATTACK - Used while the Clotty is shooting Increments by 1 every time the Clotty attacks. Exact purpose is unknown Unused Unused Unused 16 ENTITY_MULLIGAN MOVE - Used while the Mulligan is movingSUICIDE - Used when the Mulligan explodes itself Unused Unused Unused Unused 18 ENTITY_ATTACKFLY IDLE - Used while the Fly is moving Unused Unused The fly's velocity Unused 19 ENTITY_LARRYJR MOVE - Used while Larry is moving Unused Unused Only used by the Hollow. Represents its speed. The X value of the vector is Hollow's horizontal speed and the Y value of the vector is the Hollows vertical speed Unused 20 ENTITY_MONSTRO MOVE - Used while Monstro is movingATTACK - Used when Monstro shoots tearsJUMP - Used when Monstro begins to jumpSTOMP - Used while Monstro is moving midair from his leap attack.DEATH - Used while Monstro's death animation is playing Unused I1 is set to 1 while Monstro's state is ATTACK, 2 if it's JUMP or STOMP, otherwise it's 0. Exact purpose of this is unknown. Unused Unused 21 ENTITY_MAGGOT MOVE - Used while the Maggot is moving Unused Unused Unused Unused 22 ENTITY_HIVE MOVE - Used while Hive is movingATTACK - Used when Hive spawns a fly. Unused Unused The X value decreases when the Hive runs away from the player. If it's less than or equal to 0 while the Hive is running away, its state will switch to ATTACK and the x value is set to 70. Unused 23 ENTITY_CHARGER MOVE - Used while the Charger is movingATTACK - Used while the Charger is charging Unused Unused Used while the maggot's state is ATTACK. The X value is the Maggot's horizontal charging speed while the Y value is the Maggot's vertical charging speed. Keep in mind that you can only change one of the two coordinates. Otherwise, only the coordinate with the greatest value takes effect. Unused 24 ENTITY_GLOBIN MOVE - Used while the Globin is movingIDLE - Used while the Globin is a pile of goo Unused Unused Unknown Unused 25 ENTITY_BOOMFLY MOVE - Used while the Boom Fly is moving Unused Unused Unused Unused 26 ENTITY_MAW MOVE - Used while Maw is movingATTACK - Used while Maw is shooting a projectile Unused Unused Unused Unused 27 ENTITY_HOST IDLE - Used while the Host is hidingATTACK - Used when the Host attacks Unused Unused Unused Unused 28 ENTITY_CHUB MOVE - Used while Chub is movingATTACK - Used while Chub is chargingSUMMON - Used while Chub summons a Charger.DEATH - Used while Chub's death animation is playing Unused Unused Used while Chub's state is ATTACK. The X value is Chub's horizontal charging speed while the Y value is Chub's vertical charging speed. Keep in mind that you can only change the X or Y value. Otherwise, only the direction with the greatest value takes effect. Unused 29 ENTITY_HOPPER IDLE - Used while the Hopper is holding stillMOVE - Used while the Hopper is jumping Unused Unused Unused Unused 30 ENTITY_BOIL IDLE - Used while the Boil is holding not attackingMOVE - Used while the boil attacks Unused Unused Exact purpose unknown. The X value seems to dictate how fast the boil grows. Unused"},{"location":"entities/FissureSpawner.html","title":"Information for \"Fissure Spawner\"","text":"<p>A Fissure Spawner (1000.192) is an entity included in the Repentance DLC. It spawns Fissure enemies over and over until the room is cleared.</p> <p>These entities are special in that their behavior is contingent upon their sub-type. The sub-type is the composition of three separate properties. To get the individual values, the sub-type needs to be split into 3 blocks with 4 bits.</p> <ul> <li>The first block (blue) is used to define the spawning delay (in game frames).</li> <li>The second block (red) is used to define the speed. The value is measured in tiles and a +0.5 modifier is applied. In other words, a value of 0 will result in the fissure moving 0.5 tiles per jump.</li> <li>The third block (green) is used to define the angle at which the fissures will launch.</li> </ul> <p></p>"},{"location":"entities/Overview.html","title":"Entity Overview","text":""},{"location":"entities/Overview.html#introduction","title":"Introduction","text":"<p>Almost everything in the Binding of Isaac is considered to be an entity.</p> <p>Mods for the game typically add new custom entities, arbitrarily spawn entities at special times, or modify existing entities.</p> <p></p>"},{"location":"entities/Overview.html#entities-and-grid-entities","title":"Entities and Grid Entities","text":"<p>There are two different forms of entities:</p>"},{"location":"entities/Overview.html#1-entities","title":"1) Entities","text":"<p>Most things in the game are \"normal\" entities. This includes players, enemies, tears, projectiles, and more.</p> <p>Normal entities are represented by the <code>Entity</code> API class.</p> <p>Vanilla entities are defined in the \"resources/entities2.xml\" file. Mods can create custom entities by creating the \"content/entities2.xml\" file and adding entries to it.</p> <p>Mods can spawn entities with the <code>Isaac.Spawn</code> or <code>Game.Spawn</code> methods. The former should be used when the seed of the entity does not matter. Otherwise, use the latter and specify the seed.</p> <p>Hint: Nearly everything that you spawn should use have a specified seed, so that the rerolls and other random effects are consistent when replaying through the same seed. (This is how the vanilla game works.)</p>"},{"location":"entities/Overview.html#2-grid-entities","title":"2) Grid Entities","text":"<p>Grid entities are special entities that are aligned with a grid tile. This includes rocks, pots, and so on.</p> <p>Grid entities are represented by the <code>GridEntity</code> API class.</p> <p>Vanilla grid entities are not defined in an XML file. Mods cannot create custom grid entities.</p> <p>Mods can spawn grid entities with the <code>Isaac.GridSpawn</code> method. (It is not possible to spawn grid entities with a specific seed.)</p> <p></p>"},{"location":"entities/Overview.html#type-variant-and-subtype","title":"Type, Variant, and SubType","text":"<p>Three integers make up the identity of an entity: <code>EntityType</code>, <code>Variant</code>, and <code>SubType</code>. These three values are often represented as a string with a period as a separator.</p> <ul> <li><code>EntityType</code> corresponds to the major entity type. For example, a Frowning Gaper (10.0.0) is different from a Pooter (14.0.0).</li> <li><code>Variant</code> corresponds to different kinds of the same <code>EntityType</code>. For example, a Frowning Gaper (10.0.0) is different from a Flaming Gaper (10.2.0).</li> <li><code>SubType</code> corresponds to different kinds of the same <code>EntityType</code> and <code>Variant</code> combination. For example, a Sad Onion (5.100.1) is different from an Inner Eye (5.100.2).</li> </ul> <p>The <code>Entity</code> API class contains all three of these values as properties. The <code>GridEntity</code> API class offers a <code>GetType</code> and <code>GetVariant</code> method. (Grid entities do not use sub-types.)</p> <p>You can make a helper function for getting the ID of an entity:</p> <pre><code>-- Helper function to get a string containing an entity's type, variant, and sub-type.\nlocal function getEntityID(entity)\n  return tostring(entity.Type) .. \".\" .. tostring(entity.Variant) .. \".\" .. tostring(entity.SubType)\nend\n</code></pre> <pre><code>-- Helper function to get a string containing a grid entity's type and variant.\nlocal function getGridEntityID(gridEntity)\n  local gridEntityType = gridEntity:GetType()\n  local gridEntityVariant = gridEntity:GetVariant()\n  return tostring(gridEntityType) .. \".\" .. tostring(gridEntityVariant)\nend\n</code></pre> <p>If you are using IsaacScript, these two functions are already included in the standard library, so don't bother making them yourself.</p> <p></p>"},{"location":"entities/SpikeBallChain.html","title":"Informations for \"Spike Ball and Chain\"","text":"<p>Spikechains must be on either Top, Right, Bottom or Left side of a block in order to be attached and spin around it.</p> <p>The Spikeball and Chain entity does have a special method of interpreting its SubType.</p> <p>The SubType value of the entity needs to be split into 3 blocks with 4 bit each.</p> <p>The first block (In Image: Blue) is used to define the spinning direction. 0000 = Clock wise. 0001 = counter clock wise. Any other value will crash the game.</p> <p>The second block (Red) is used to define the Speed. 0000 will cause the ball to not move at all. 0001 moves it at ~ 24 seconds per round. 1111 at &lt;2 seconds per round.</p> <p>The last block (In Image: Green) is used to define the distance of the ball to the source block. The distance is measured in Blocks. 0010 = 2 in Decimal, therefore 2 blocks distance to the source.</p> <p></p>"},{"location":"enums/ActionTriggers.html","title":"Enum \"ActionTriggers\"","text":"Bitset Calculator DLC Value Enumerator Comment 1 &lt;&lt; -1 ACTIONTRIGGER_NONE 1 &lt;&lt; 0 ACTIONTRIGGER_BOMBPLACED 1 &lt;&lt; 1 ACTIONTRIGGER_MOVED 1 &lt;&lt; 2 ACTIONTRIGGER_SHOOTING 1 &lt;&lt; 3 ACTIONTRIGGER_CARDPILLUSED 1 &lt;&lt; 4 ACTIONTRIGGER_ITEMACTIVATED 1 &lt;&lt; 5 ACTIONTRIGGER_ITEMSDROPPED","tags":["Enum"]},{"location":"enums/ActiveSlot.html","title":"Enum \"ActiveSlot\"","text":"DLC Value Enumerator Comment 0 SLOT_PRIMARY main slot 1 SLOT_SECONDARY schoolbag slot 2 SLOT_POCKET permanent card/pill slot (tainted alts) 3 SLOT_POCKET2 single use card/pill slot (Dice Bag)","tags":["Enum"]},{"location":"enums/BabySubType.html","title":"Enum \"BabySubType\"","text":"DLC Value Enumerator Comment -1 BABY_UNASSIGNED 0 BABY_SPIDER 1 BABY_LOVE 2 BABY_BLOAT 3 BABY_WATER 4 BABY_PSY 5 BABY_CURSED 6 BABY_TROLL 7 BABY_YBAB 8 BABY_COCKEYED 9 BABY_HOST 10 BABY_LOST 11 BABY_CUTE 12 BABY_CROW 13 BABY_SHADOW 14 BABY_GLASS 15 BABY_GOLD 16 BABY_CY 17 BABY_BEAN 18 BABY_MAG 19 BABY_WRATH 20 BABY_WRAPPED 21 BABY_BEGOTTEN 22 BABY_DEAD 23 BABY_FIGHTING 24 BABY_0 25 BABY_GLITCH 26 BABY_MAGNET 27 BABY_BLACK 28 BABY_RED 29 BABY_WHITE 30 BABY_BLUE 31 BABY_RAGE 32 BABY_CRY 33 BABY_YELLOW 34 BABY_LONG 35 BABY_GREEN 36 BABY_LIL 37 BABY_BIG 38 BABY_BROWN 39 BABY_NOOSE 40 BABY_HIVE 41 BABY_BUDDY 42 BABY_COLORFUL 43 BABY_WHORE 44 BABY_CRACKED 45 BABY_DRIPPING 46 BABY_BLINDING 47 BABY_SUCKY 48 BABY_DARK 49 BABY_PICKY 50 BABY_REVENGE 51 BABY_BELIAL 52 BABY_SALE 53 BABY_GOAT 54 BABY_SUPER_GREED 55 BABY_MORT 56 BABY_APOLLYON 57 BABY_BONE 58 BABY_BOUND 59 BABY_FOUND_SOUL 60 BABY_LOST_WHITE 61 BABY_LOST_BLACK 62 BABY_LOST_BLUE 63 BABY_LOST_GREY 64 BABY_WISP 65 BABY_DOUBLE 66 BABY_GLOWING 67 BABY_ILLUSION 68 BABY_HOPE 69 BABY_SOLOMON_A 70 BABY_SOLOMON_B 71 BABY_BASIC","tags":["Enum"]},{"location":"enums/BackdropType.html","title":"Enum \"BackdropType\"","text":"DLC Value Enumerator Comment 0 BACKDROP_NULL 1 BASEMENT 2 CELLAR 3 BURNT_BASEMENT 4 CAVES 5 CATACOMBS 6 FLOODED_CAVES 7 DEPTHS 8 NECROPOLIS 9 DANK_DEPTHS 10 WOMB 11 UTERO 12 SCARRED_WOMB 13 BLUE_WOMB 14 SHEOL 15 CATHEDRAL 16 DARKROOM 17 CHEST 18 MEGA_SATAN 19 LIBRARY 20 SHOP 21 ISAAC 22 BARREN 23 SECRET 24 DICE 25 ARCADE 26 ERROR_ROOM 27 BLUE_WOMB_PASS 28 GREED_SHOP 29 DUNGEON 30 SACRIFICE 31 DOWNPOUR 32 MINES 33 MAUSOLEUM 34 CORPSE 35 PLANETARIUM 36 DOWNPOUR_ENTRANCE 37 MINES_ENTRANCE 38 MAUSOLEUM_ENTRANCE 39 CORPSE_ENTRANCE 40 MAUSOLEUM2 41 MAUSOLEUM3 42 MAUSOLEUM4 43 CORPSE2 44 CORPSE3 45 DROSS 46 ASHPIT 47 GEHENNA 48 MORTIS 49 ISAACS_BEDROOM 50 HALLWAY 51 MOMS_BEDROOM 52 CLOSET 53 CLOSET_B 54 DOGMA 55 DUNGEON_GIDEON 56 DUNGEON_ROTGUT 57 DUNGEON_BEAST 58 MINES_SHAFT 59 ASHPIT_SHAFT 60 DARK_CLOSET 61 NUM_BACKDROPS","tags":["Enum"]},{"location":"enums/BatterySubType.html","title":"Enum \"BatterySubType\"","text":"DLC Value Enumerator Comment 1 BATTERY_NORMAL 2 BATTERY_MICRO 3 BATTERY_MEGA 4 BATTERY_GOLDEN","tags":["Enum"]},{"location":"enums/BedSubType.html","title":"Enum \"BedSubType\"","text":"DLC Value Enumerator Comment 0 BED_ISAAC 1 BED_MOM","tags":["Enum"]},{"location":"enums/BombSubType.html","title":"Enum \"BombSubType\"","text":"DLC Value Enumerator Comment 1 BOMB_NORMAL 2 BOMB_DOUBLEPACK 3 BOMB_TROLL 4 BOMB_GOLDEN 5 BOMB_SUPERTROLL 6 BOMB_GOLDENTROLL 7 BOMB_GIGA","tags":["Enum"]},{"location":"enums/BombVariant.html","title":"Enum \"BombVariant\"","text":"DLC Value Enumerator Comment 0 BOMB_NORMAL 1 BOMB_BIG 2 BOMB_DECOY 3 BOMB_TROLL 4 BOMB_SUPERTROLL 5 BOMB_POISON 6 BOMB_POISON_BIG 7 BOMB_SAD 8 BOMB_HOT 9 BOMB_BUTT 10 BOMB_MR_MEGA 11 BOMB_BOBBY 12 BOMB_GLITTER 13 BOMB_THROWABLE 14 BOMB_SMALL 15 BOMB_BRIMSTONE 16 BOMB_SAD_BLOOD 17 BOMB_GIGA 18 BOMB_GOLDENTROLL 19 BOMB_ROCKET 20 BOMB_ROCKET_GIGA","tags":["Enum"]},{"location":"enums/ButtonAction.html","title":"Enum \"ButtonAction\"","text":"DLC Value Enumerator Comment 0 ACTION_LEFT 1 ACTION_RIGHT 2 ACTION_UP 3 ACTION_DOWN 4 ACTION_SHOOTLEFT 5 ACTION_SHOOTRIGHT 6 ACTION_SHOOTUP 7 ACTION_SHOOTDOWN 8 ACTION_BOMB 9 ACTION_ITEM 10 ACTION_PILLCARD 11 ACTION_DROP 12 ACTION_PAUSE Can only be detected when holding P after closing the pause menu; Isn't polled by MC_INPUT_ACTION 13 ACTION_MAP TAB on keyboard; Select on controller 14 ACTION_MENUCONFIRM Enter on keyboard; A on Controller 15 ACTION_MENUBACK Esc on keyboard; B on Controller 16 ACTION_RESTART 17 ACTION_FULLSCREEN 18 ACTION_MUTE 19 ACTION_JOINMULTIPLAYER 20 ACTION_MENULEFT same as walk left 21 ACTION_MENURIGHT same as walk right 22 ACTION_MENUUP same as walk up 23 ACTION_MENUDOWN same as walk down 24 ACTION_MENULT Left trigger 25 ACTION_MENURT Right trigger 26 ACTION_MENUTAB TAB on keyboard; X on controller 28 ACTION_CONSOLE USE ONLY FOR HOOKING! To check the input use IsButtonTriggered with desired key","tags":["Enum"]},{"location":"enums/CacheFlag.html","title":"Enum \"CacheFlag\"","text":"Bitset Calculator DLC Value Enumerator Comment 1 &lt;&lt; 0 CACHE_DAMAGE 1 &lt;&lt; 1 CACHE_FIREDELAY 1 &lt;&lt; 2 CACHE_SHOTSPEED 1 &lt;&lt; 3 CACHE_RANGE 1 &lt;&lt; 4 CACHE_SPEED 1 &lt;&lt; 5 CACHE_TEARFLAG 1 &lt;&lt; 6 CACHE_TEARCOLOR 1 &lt;&lt; 7 CACHE_FLYING 1 &lt;&lt; 8 CACHE_WEAPON 1 &lt;&lt; 9 CACHE_FAMILIARS 1 &lt;&lt; 10 CACHE_LUCK 1 &lt;&lt; 11 CACHE_SIZE invalidates player size 1 &lt;&lt; 12 CACHE_COLOR invalidates player color 1 &lt;&lt; 13 CACHE_PICKUP_VISION invalidates effects that predict pickup drops (i.e. Guppy's Eye) (1 &lt;&lt; 16) - 1 CACHE_ALL 1 &lt;&lt; 31 CACHE_TWIN_SYNC special cache flag used when syncing Jacob and Esau's speed","tags":["Enum"]},{"location":"enums/CallbackPriority.html","title":"Enum \"CallbackPriority\"","text":"DLC Value Enumerator Comment -200 IMPORTANT -100 EARLY 0 DEFAULT 100 LATE","tags":["Enum"]},{"location":"enums/Card.html","title":"Enum \"Card\"","text":"DLC Value Enumerator Comment -1 CARD_RANDOM 0 CARD_NULL 1 CARD_FOOL 2 CARD_MAGICIAN 3 CARD_HIGH_PRIESTESS 4 CARD_EMPRESS 5 CARD_EMPEROR 6 CARD_HIEROPHANT 7 CARD_LOVERS 8 CARD_CHARIOT 9 CARD_JUSTICE 10 CARD_HERMIT 11 CARD_WHEEL_OF_FORTUNE 12 CARD_STRENGTH 13 CARD_HANGED_MAN 14 CARD_DEATH 15 CARD_TEMPERANCE 16 CARD_DEVIL 17 CARD_TOWER 18 CARD_STARS 19 CARD_MOON 20 CARD_SUN 21 CARD_JUDGEMENT 22 CARD_WORLD 23 CARD_CLUBS_2 24 CARD_DIAMONDS_2 25 CARD_SPADES_2 26 CARD_HEARTS_2 27 CARD_ACE_OF_CLUBS 28 CARD_ACE_OF_DIAMONDS 29 CARD_ACE_OF_SPADES 30 CARD_ACE_OF_HEARTS 31 CARD_JOKER 32 RUNE_HAGALAZ 33 RUNE_JERA 34 RUNE_EHWAZ 35 RUNE_DAGAZ 36 RUNE_ANSUZ 37 RUNE_PERTHRO 38 RUNE_BERKANO 39 RUNE_ALGIZ 40 RUNE_BLANK 41 RUNE_BLACK 42 CARD_CHAOS 43 CARD_CREDIT 44 CARD_RULES 45 CARD_HUMANITY 46 CARD_SUICIDE_KING 47 CARD_GET_OUT_OF_JAIL 48 CARD_QUESTIONMARK 49 CARD_DICE_SHARD 50 CARD_EMERGENCY_CONTACT 51 CARD_HOLY 52 CARD_HUGE_GROWTH 53 CARD_ANCIENT_RECALL 54 CARD_ERA_WALK 55 RUNE_SHARD 56 CARD_REVERSE_FOOL 57 CARD_REVERSE_MAGICIAN 58 CARD_REVERSE_HIGH_PRIESTESS 59 CARD_REVERSE_EMPRESS 60 CARD_REVERSE_EMPEROR 61 CARD_REVERSE_HIEROPHANT 62 CARD_REVERSE_LOVERS 63 CARD_REVERSE_CHARIOT 64 CARD_REVERSE_JUSTICE 65 CARD_REVERSE_HERMIT 66 CARD_REVERSE_WHEEL_OF_FORTUNE 67 CARD_REVERSE_STRENGTH 68 CARD_REVERSE_HANGED_MAN 69 CARD_REVERSE_DEATH 70 CARD_REVERSE_TEMPERANCE 71 CARD_REVERSE_DEVIL 72 CARD_REVERSE_TOWER 73 CARD_REVERSE_STARS 74 CARD_REVERSE_MOON 75 CARD_REVERSE_SUN 76 CARD_REVERSE_JUDGEMENT 77 CARD_REVERSE_WORLD 78 CARD_CRACKED_KEY 79 CARD_QUEEN_OF_HEARTS 80 CARD_WILD 81 CARD_SOUL_ISAAC 82 CARD_SOUL_MAGDALENE 83 CARD_SOUL_CAIN 84 CARD_SOUL_JUDAS 85 CARD_SOUL_BLUEBABY 86 CARD_SOUL_EVE 87 CARD_SOUL_SAMSON 88 CARD_SOUL_AZAZEL 89 CARD_SOUL_LAZARUS 90 CARD_SOUL_EDEN 91 CARD_SOUL_LOST 92 CARD_SOUL_LILITH 93 CARD_SOUL_KEEPER 94 CARD_SOUL_APOLLYON 95 CARD_SOUL_FORGOTTEN 96 CARD_SOUL_BETHANY 97 CARD_SOUL_JACOB 98 NUM_CARDS","tags":["Enum"]},{"location":"enums/Challenge.html","title":"Enum \"Challenge\"","text":"DLC Value Enumerator Comment 0 CHALLENGE_NULL 1 CHALLENGE_PITCH_BLACK 2 CHALLENGE_HIGH_BROW 3 CHALLENGE_HEAD_TRAUMA 4 CHALLENGE_DARKNESS_FALLS 5 CHALLENGE_THE_TANK 6 CHALLENGE_SOLAR_SYSTEM 7 CHALLENGE_SUICIDE_KING 8 CHALLENGE_CAT_GOT_YOUR_TONGUE 9 CHALLENGE_DEMO_MAN 10 CHALLENGE_CURSED 11 CHALLENGE_GLASS_CANNON 12 CHALLENGE_WHEN_LIFE_GIVES_LEMONS 13 CHALLENGE_BEANS 14 CHALLENGE_ITS_IN_THE_CARDS 15 CHALLENGE_SLOW_ROLL 16 CHALLENGE_COMPUTER_SAVY 17 CHALLENGE_WAKA_WAKA 18 CHALLENGE_THE_HOST 19 CHALLENGE_THE_FAMILY_MAN 20 CHALLENGE_PURIST 21 CHALLENGE_XXXXXXXXL 22 CHALLENGE_SPEED 23 CHALLENGE_BLUE_BOMBER 24 CHALLENGE_PAY_TO_PLAY 25 CHALLENGE_HAVE_A_HEART 26 CHALLENGE_I_RULE 27 CHALLENGE_BRAINS 28 CHALLENGE_PRIDE_DAY 29 CHALLENGE_ONANS_STREAK 30 CHALLENGE_GUARDIAN 31 CHALLENGE_BACKASSWARDS 32 CHALLENGE_APRILS_FOOL 33 CHALLENGE_POKEY_MANS 34 CHALLENGE_ULTRA_HARD 35 CHALLENGE_PONG 36 CHALLENGE_SCAT_MAN 37 CHALLENGE_BLOODY_MARY 38 CHALLENGE_BAPTISM_BY_FIRE 39 CHALLENGE_ISAACS_AWAKENING 40 CHALLENGE_SEEING_DOUBLE 41 CHALLENGE_PICA_RUN 42 CHALLENGE_HOT_POTATO 43 CHALLENGE_CANTRIPPED 44 CHALLENGE_RED_REDEMPTION 45 CHALLENGE_DELETE_THIS 46 NUM_CHALLENGES","tags":["Enum"]},{"location":"enums/ChampionColor.html","title":"Enum \"ChampionColor\"","text":"DLC Value Enumerator Comment 0 RED 33% more life, full heart 1 YELLOW 33% faster, lil battery 2 GREEN trail of green creep, pill 3 ORANGE greed shot (drop coins when hit), 1-3 coins 4 BLUE half speed, 3 blue flies 5 BLACK explodes on death, bomb 6 WHITE must be killed last, half eternal heart 7 GREY 33% health half speed, key 8 TRANSPARENT spectral, locked chest 9 FLICKER partly invisible, red chest 10 PINK random shots, no drop 11 PURPLE pull player/tears, trinket 12 DARK_RED regenerate, double heart 13 LIGHT_BLUE spread shot on death, half heart 14 CAMO camo kid like color, drops a rune when killed 15 PULSE_GREEN when killed creates 2 mobs of same kind 16 PULSE_GREY shots reflected while in gray state, drops random pickup 17 FLY_PROTECTED has halo of fly like shopkeeper, spawns 2 attack flies on death 18 TINY 33% less hp, half size, speed +33%, 20% chance of small pill 19 GIANT double size, 50% more hp, does 2 hearts of damage, 10% slower, 20% chance of large pill 20 PULSE_RED heals all enemies in the room including himself by 30hp every second  - spawns a red heart when killed 21 SIZE_PULSE spawns flies when hit, one attack fly for each time it takes damage - spawns 4-6 blue flies when killed 22 KING turns all enemies in the room into yellow champions and has tripple HP - spawns 2-3 random pickups when killed 23 DEATH does 2 hearts of damage when touched - does death effect when killed 24 BROWN constantly poops 25 RAINBOW many champion effects combined, drops one of everything","tags":["Enum"]},{"location":"enums/ChestSubType.html","title":"Enum \"ChestSubType\"","text":"DLC Value Enumerator Comment 0 CHEST_OPENED 1 CHEST_CLOSED","tags":["Enum"]},{"location":"enums/CoinSubType.html","title":"Enum \"CoinSubType\"","text":"DLC Value Enumerator Comment 1 COIN_PENNY 2 COIN_NICKEL 3 COIN_DIME 4 COIN_DOUBLEPACK 5 COIN_LUCKYPENNY 6 COIN_STICKYNICKEL 7 COIN_GOLDEN","tags":["Enum"]},{"location":"enums/CollectibleType.html","title":"Enum \"CollectibleType\"","text":"DLC Value Enumerator Comment 0 COLLECTIBLE_NULL 1 COLLECTIBLE_SAD_ONION 2 COLLECTIBLE_INNER_EYE 3 COLLECTIBLE_SPOON_BENDER 4 COLLECTIBLE_CRICKETS_HEAD (ab+: COLLECTIBLE_MAXS_HEAD) 5 COLLECTIBLE_MY_REFLECTION 6 COLLECTIBLE_NUMBER_ONE 7 COLLECTIBLE_BLOOD_OF_THE_MARTYR (ab+: COLLECTIBLE_BLOOD_MARTYR) 8 COLLECTIBLE_BROTHER_BOBBY 9 COLLECTIBLE_SKATOLE 10 COLLECTIBLE_HALO_OF_FLIES 11 COLLECTIBLE_1UP (ab+: COLLECTIBLE_ONE_UP) 12 COLLECTIBLE_MAGIC_MUSHROOM 13 COLLECTIBLE_VIRUS 14 COLLECTIBLE_ROID_RAGE 15 COLLECTIBLE_HEART 16 COLLECTIBLE_RAW_LIVER 17 COLLECTIBLE_SKELETON_KEY 18 COLLECTIBLE_DOLLAR 19 COLLECTIBLE_BOOM 20 COLLECTIBLE_TRANSCENDENCE 21 COLLECTIBLE_COMPASS 22 COLLECTIBLE_LUNCH 23 COLLECTIBLE_DINNER 24 COLLECTIBLE_DESSERT 25 COLLECTIBLE_BREAKFAST 26 COLLECTIBLE_ROTTEN_MEAT 27 COLLECTIBLE_WOODEN_SPOON 28 COLLECTIBLE_BELT 29 COLLECTIBLE_MOMS_UNDERWEAR 30 COLLECTIBLE_MOMS_HEELS 31 COLLECTIBLE_MOMS_LIPSTICK 32 COLLECTIBLE_WIRE_COAT_HANGER 33 COLLECTIBLE_BIBLE 34 COLLECTIBLE_BOOK_OF_BELIAL 35 COLLECTIBLE_NECRONOMICON 36 COLLECTIBLE_POOP 37 COLLECTIBLE_MR_BOOM 38 COLLECTIBLE_TAMMYS_HEAD 39 COLLECTIBLE_MOMS_BRA 40 COLLECTIBLE_KAMIKAZE 41 COLLECTIBLE_MOMS_PAD 42 COLLECTIBLE_BOBS_ROTTEN_HEAD 43 Does not exist anymore (ab+: COLLECTIBLE_PILLS_HERE) 44 COLLECTIBLE_TELEPORT 45 COLLECTIBLE_YUM_HEART 46 COLLECTIBLE_LUCKY_FOOT 47 COLLECTIBLE_DOCTORS_REMOTE 48 COLLECTIBLE_CUPIDS_ARROW 49 COLLECTIBLE_SHOOP_DA_WHOOP 50 COLLECTIBLE_STEVEN 51 COLLECTIBLE_PENTAGRAM 52 COLLECTIBLE_DR_FETUS 53 COLLECTIBLE_MAGNETO 54 COLLECTIBLE_TREASURE_MAP 55 COLLECTIBLE_MOMS_EYE 56 COLLECTIBLE_LEMON_MISHAP 57 COLLECTIBLE_DISTANT_ADMIRATION 58 COLLECTIBLE_BOOK_OF_SHADOWS 59 COLLECTIBLE_BOOK_OF_BELIAL_PASSIVE (ab+: COLLECTIBLE_059) 60 COLLECTIBLE_LADDER 61 Does not exist anymore (ab+: COLLECTIBLE_TAROT_CARD) 62 COLLECTIBLE_CHARM_VAMPIRE 63 COLLECTIBLE_BATTERY 64 COLLECTIBLE_STEAM_SALE 65 COLLECTIBLE_ANARCHIST_COOKBOOK 66 COLLECTIBLE_HOURGLASS 67 COLLECTIBLE_SISTER_MAGGY 68 COLLECTIBLE_TECHNOLOGY 69 COLLECTIBLE_CHOCOLATE_MILK 70 COLLECTIBLE_GROWTH_HORMONES 71 COLLECTIBLE_MINI_MUSH 72 COLLECTIBLE_ROSARY 73 COLLECTIBLE_CUBE_OF_MEAT 74 COLLECTIBLE_QUARTER 75 COLLECTIBLE_PHD 76 COLLECTIBLE_XRAY_VISION 77 COLLECTIBLE_MY_LITTLE_UNICORN 78 COLLECTIBLE_BOOK_OF_REVELATIONS (ab+: COLLECTIBLE_BOOK_REVELATIONS) 79 COLLECTIBLE_MARK 80 COLLECTIBLE_PACT 81 COLLECTIBLE_DEAD_CAT 82 COLLECTIBLE_LORD_OF_THE_PIT 83 COLLECTIBLE_THE_NAIL 84 COLLECTIBLE_WE_NEED_TO_GO_DEEPER (ab+: COLLECTIBLE_WE_NEED_GO_DEEPER) 85 COLLECTIBLE_DECK_OF_CARDS 86 COLLECTIBLE_MONSTROS_TOOTH 87 COLLECTIBLE_LOKIS_HORNS 88 COLLECTIBLE_LITTLE_CHUBBY 89 COLLECTIBLE_SPIDER_BITE 90 COLLECTIBLE_SMALL_ROCK 91 COLLECTIBLE_SPELUNKER_HAT 92 COLLECTIBLE_SUPER_BANDAGE 93 COLLECTIBLE_GAMEKID 94 COLLECTIBLE_SACK_OF_PENNIES 95 COLLECTIBLE_ROBO_BABY 96 COLLECTIBLE_LITTLE_CHAD 97 COLLECTIBLE_BOOK_OF_SIN 98 COLLECTIBLE_RELIC 99 COLLECTIBLE_LITTLE_GISH 100 COLLECTIBLE_LITTLE_STEVEN 101 COLLECTIBLE_HALO 102 COLLECTIBLE_MOMS_BOTTLE_OF_PILLS (ab+: COLLECTIBLE_MOMS_BOTTLE_PILLS) 103 COLLECTIBLE_COMMON_COLD 104 COLLECTIBLE_PARASITE 105 COLLECTIBLE_D6 106 COLLECTIBLE_MR_MEGA 107 COLLECTIBLE_PINKING_SHEARS 108 COLLECTIBLE_WAFER 109 COLLECTIBLE_MONEY_EQUALS_POWER (ab+: COLLECTIBLE_MONEY_IS_POWER) 110 COLLECTIBLE_MOMS_CONTACTS 111 COLLECTIBLE_BEAN 112 COLLECTIBLE_GUARDIAN_ANGEL 113 COLLECTIBLE_DEMON_BABY 114 COLLECTIBLE_MOMS_KNIFE 115 COLLECTIBLE_OUIJA_BOARD 116 COLLECTIBLE_9_VOLT (ab+: COLLECTIBLE_NINE_VOLT) 117 COLLECTIBLE_DEAD_BIRD 118 COLLECTIBLE_BRIMSTONE 119 COLLECTIBLE_BLOOD_BAG 120 COLLECTIBLE_ODD_MUSHROOM_THIN (ab+: COLLECTIBLE_ODD_MUSHROOM_RATE) 121 COLLECTIBLE_ODD_MUSHROOM_LARGE (ab+: COLLECTIBLE_ODD_MUSHROOM_DAMAGE) 122 COLLECTIBLE_WHORE_OF_BABYLON 123 COLLECTIBLE_MONSTER_MANUAL 124 COLLECTIBLE_DEAD_SEA_SCROLLS 125 COLLECTIBLE_BOBBY_BOMB 126 COLLECTIBLE_RAZOR_BLADE 127 COLLECTIBLE_FORGET_ME_NOW 128 COLLECTIBLE_FOREVER_ALONE 129 COLLECTIBLE_BUCKET_OF_LARD (ab+: COLLECTIBLE_BUCKET_LARD) 130 COLLECTIBLE_PONY 131 COLLECTIBLE_BOMB_BAG 132 COLLECTIBLE_LUMP_OF_COAL 133 COLLECTIBLE_GUPPYS_PAW 134 COLLECTIBLE_GUPPYS_TAIL 135 COLLECTIBLE_IV_BAG 136 COLLECTIBLE_BEST_FRIEND 137 COLLECTIBLE_REMOTE_DETONATOR 138 COLLECTIBLE_STIGMATA 139 COLLECTIBLE_MOMS_PURSE 140 COLLECTIBLE_BOBS_CURSE 141 COLLECTIBLE_PAGEANT_BOY 142 COLLECTIBLE_SCAPULAR 143 COLLECTIBLE_SPEED_BALL 144 COLLECTIBLE_BUM_FRIEND 145 COLLECTIBLE_GUPPYS_HEAD 146 COLLECTIBLE_PRAYER_CARD 147 COLLECTIBLE_NOTCHED_AXE 148 COLLECTIBLE_INFESTATION 149 COLLECTIBLE_IPECAC 150 COLLECTIBLE_TOUGH_LOVE 151 COLLECTIBLE_MULLIGAN 152 COLLECTIBLE_TECHNOLOGY_2 153 COLLECTIBLE_MUTANT_SPIDER 154 COLLECTIBLE_CHEMICAL_PEEL 155 COLLECTIBLE_PEEPER 156 COLLECTIBLE_HABIT 157 COLLECTIBLE_BLOODY_LUST 158 COLLECTIBLE_CRYSTAL_BALL 159 COLLECTIBLE_SPIRIT_OF_THE_NIGHT (ab+: COLLECTIBLE_SPIRIT_NIGHT) 160 COLLECTIBLE_CRACK_THE_SKY 161 COLLECTIBLE_ANKH 162 COLLECTIBLE_CELTIC_CROSS 163 COLLECTIBLE_GHOST_BABY 164 COLLECTIBLE_CANDLE 165 COLLECTIBLE_CAT_O_NINE_TAILS (ab+: COLLECTIBLE_CAT_NINE_TAILS) 166 COLLECTIBLE_D20 167 COLLECTIBLE_HARLEQUIN_BABY 168 COLLECTIBLE_EPIC_FETUS 169 COLLECTIBLE_POLYPHEMUS 170 COLLECTIBLE_DADDY_LONGLEGS 171 COLLECTIBLE_SPIDER_BUTT 172 COLLECTIBLE_SACRIFICIAL_DAGGER 173 COLLECTIBLE_MITRE 174 COLLECTIBLE_RAINBOW_BABY 175 COLLECTIBLE_DADS_KEY 176 COLLECTIBLE_STEM_CELLS 177 COLLECTIBLE_PORTABLE_SLOT 178 COLLECTIBLE_HOLY_WATER 179 COLLECTIBLE_FATE 180 COLLECTIBLE_BLACK_BEAN 181 COLLECTIBLE_WHITE_PONY 182 COLLECTIBLE_SACRED_HEART 183 COLLECTIBLE_TOOTH_PICKS 184 COLLECTIBLE_HOLY_GRAIL 185 COLLECTIBLE_DEAD_DOVE 186 COLLECTIBLE_BLOOD_RIGHTS 187 COLLECTIBLE_GUPPYS_HAIRBALL 188 COLLECTIBLE_ABEL 189 COLLECTIBLE_SMB_SUPER_FAN 190 COLLECTIBLE_PYRO 191 COLLECTIBLE_3_DOLLAR_BILL 192 COLLECTIBLE_TELEPATHY_BOOK 193 COLLECTIBLE_MEAT 194 COLLECTIBLE_MAGIC_8_BALL 195 COLLECTIBLE_MOMS_COIN_PURSE 196 COLLECTIBLE_SQUEEZY 197 COLLECTIBLE_JESUS_JUICE 198 COLLECTIBLE_BOX 199 COLLECTIBLE_MOMS_KEY 200 COLLECTIBLE_MOMS_EYESHADOW 201 COLLECTIBLE_IRON_BAR 202 COLLECTIBLE_MIDAS_TOUCH 203 COLLECTIBLE_HUMBLEING_BUNDLE 204 COLLECTIBLE_FANNY_PACK 205 COLLECTIBLE_SHARP_PLUG 206 COLLECTIBLE_GUILLOTINE 207 COLLECTIBLE_BALL_OF_BANDAGES 208 COLLECTIBLE_CHAMPION_BELT 209 COLLECTIBLE_BUTT_BOMBS 210 COLLECTIBLE_GNAWED_LEAF 211 COLLECTIBLE_SPIDERBABY 212 COLLECTIBLE_GUPPYS_COLLAR 213 COLLECTIBLE_LOST_CONTACT 214 COLLECTIBLE_ANEMIC 215 COLLECTIBLE_GOAT_HEAD 216 COLLECTIBLE_CEREMONIAL_ROBES 217 COLLECTIBLE_MOMS_WIG 218 COLLECTIBLE_PLACENTA 219 COLLECTIBLE_OLD_BANDAGE 220 COLLECTIBLE_SAD_BOMBS 221 COLLECTIBLE_RUBBER_CEMENT 222 COLLECTIBLE_ANTI_GRAVITY 223 COLLECTIBLE_PYROMANIAC 224 COLLECTIBLE_CRICKETS_BODY 225 COLLECTIBLE_GIMPY 226 COLLECTIBLE_BLACK_LOTUS 227 COLLECTIBLE_PIGGY_BANK 228 COLLECTIBLE_MOMS_PERFUME 229 COLLECTIBLE_MONSTROS_LUNG 230 COLLECTIBLE_ABADDON 231 COLLECTIBLE_BALL_OF_TAR 232 COLLECTIBLE_STOP_WATCH 233 COLLECTIBLE_TINY_PLANET 234 COLLECTIBLE_INFESTATION_2 235 Does not exist anymore (ab+: COLLECTIBLE_235) 236 COLLECTIBLE_E_COLI 237 COLLECTIBLE_DEATHS_TOUCH 238 COLLECTIBLE_KEY_PIECE_1 239 COLLECTIBLE_KEY_PIECE_2 240 COLLECTIBLE_EXPERIMENTAL_TREATMENT 241 COLLECTIBLE_CONTRACT_FROM_BELOW 242 COLLECTIBLE_INFAMY 243 COLLECTIBLE_TRINITY_SHIELD 244 COLLECTIBLE_TECH_5 245 COLLECTIBLE_20_20 246 COLLECTIBLE_BLUE_MAP 247 COLLECTIBLE_BFFS 248 COLLECTIBLE_HIVE_MIND 249 COLLECTIBLE_THERES_OPTIONS 250 COLLECTIBLE_BOGO_BOMBS 251 COLLECTIBLE_STARTER_DECK 252 COLLECTIBLE_LITTLE_BAGGY 253 COLLECTIBLE_MAGIC_SCAB 254 COLLECTIBLE_BLOOD_CLOT 255 COLLECTIBLE_SCREW 256 COLLECTIBLE_HOT_BOMBS 257 COLLECTIBLE_FIRE_MIND 258 COLLECTIBLE_MISSING_NO 259 COLLECTIBLE_DARK_MATTER 260 COLLECTIBLE_BLACK_CANDLE 261 COLLECTIBLE_PROPTOSIS 262 COLLECTIBLE_MISSING_PAGE_2 263 COLLECTIBLE_CLEAR_RUNE (ab+: COLLECTIBLE_263) 264 COLLECTIBLE_SMART_FLY 265 COLLECTIBLE_DRY_BABY 266 COLLECTIBLE_JUICY_SACK 267 COLLECTIBLE_ROBO_BABY_2 268 COLLECTIBLE_ROTTEN_BABY 269 COLLECTIBLE_HEADLESS_BABY 270 COLLECTIBLE_LEECH 271 COLLECTIBLE_MYSTERY_SACK 272 COLLECTIBLE_BBF 273 COLLECTIBLE_BOBS_BRAIN 274 COLLECTIBLE_BEST_BUD 275 COLLECTIBLE_LIL_BRIMSTONE 276 COLLECTIBLE_ISAACS_HEART 277 COLLECTIBLE_LIL_HAUNT 278 COLLECTIBLE_DARK_BUM 279 COLLECTIBLE_BIG_FAN 280 COLLECTIBLE_SISSY_LONGLEGS 281 COLLECTIBLE_PUNCHING_BAG 282 COLLECTIBLE_HOW_TO_JUMP 283 COLLECTIBLE_D100 284 COLLECTIBLE_D4 285 COLLECTIBLE_D10 286 COLLECTIBLE_BLANK_CARD 287 COLLECTIBLE_BOOK_OF_SECRETS 288 COLLECTIBLE_BOX_OF_SPIDERS 289 COLLECTIBLE_RED_CANDLE 290 COLLECTIBLE_THE_JAR 291 COLLECTIBLE_FLUSH 292 COLLECTIBLE_SATANIC_BIBLE 293 COLLECTIBLE_HEAD_OF_KRAMPUS 294 COLLECTIBLE_BUTTER_BEAN 295 COLLECTIBLE_MAGIC_FINGERS 296 COLLECTIBLE_CONVERTER 297 COLLECTIBLE_BLUE_BOX 298 COLLECTIBLE_UNICORN_STUMP 299 COLLECTIBLE_TAURUS 300 COLLECTIBLE_ARIES 301 COLLECTIBLE_CANCER 302 COLLECTIBLE_LEO 303 COLLECTIBLE_VIRGO 304 COLLECTIBLE_LIBRA 305 COLLECTIBLE_SCORPIO 306 COLLECTIBLE_SAGITTARIUS 307 COLLECTIBLE_CAPRICORN 308 COLLECTIBLE_AQUARIUS 309 COLLECTIBLE_PISCES 310 COLLECTIBLE_EVES_MASCARA 311 COLLECTIBLE_JUDAS_SHADOW 312 COLLECTIBLE_MAGGYS_BOW 313 COLLECTIBLE_HOLY_MANTLE 314 COLLECTIBLE_THUNDER_THIGHS 315 COLLECTIBLE_STRANGE_ATTRACTOR 316 COLLECTIBLE_CURSED_EYE 317 COLLECTIBLE_MYSTERIOUS_LIQUID 318 COLLECTIBLE_GEMINI 319 COLLECTIBLE_CAINS_OTHER_EYE 320 COLLECTIBLE_BLUE_BABYS_ONLY_FRIEND (ab+: COLLECTIBLE_BLUEBABYS_ONLY_FRIEND) 321 COLLECTIBLE_SAMSONS_CHAINS 322 COLLECTIBLE_MONGO_BABY 323 COLLECTIBLE_ISAACS_TEARS 324 COLLECTIBLE_UNDEFINED 325 COLLECTIBLE_SCISSORS 326 COLLECTIBLE_BREATH_OF_LIFE 327 COLLECTIBLE_POLAROID 328 COLLECTIBLE_NEGATIVE 329 COLLECTIBLE_LUDOVICO_TECHNIQUE 330 COLLECTIBLE_SOY_MILK 331 COLLECTIBLE_GODHEAD 332 COLLECTIBLE_LAZARUS_RAGS 333 COLLECTIBLE_MIND 334 COLLECTIBLE_BODY 335 COLLECTIBLE_SOUL 336 COLLECTIBLE_DEAD_ONION 337 COLLECTIBLE_BROKEN_WATCH 338 COLLECTIBLE_BOOMERANG 339 COLLECTIBLE_SAFETY_PIN 340 COLLECTIBLE_CAFFEINE_PILL 341 COLLECTIBLE_TORN_PHOTO 342 COLLECTIBLE_BLUE_CAP 343 COLLECTIBLE_LATCH_KEY 344 COLLECTIBLE_MATCH_BOOK 345 COLLECTIBLE_SYNTHOIL 346 COLLECTIBLE_SNACK 347 COLLECTIBLE_DIPLOPIA 348 COLLECTIBLE_PLACEBO 349 COLLECTIBLE_WOODEN_NICKEL 350 COLLECTIBLE_TOXIC_SHOCK 351 COLLECTIBLE_MEGA_BEAN 352 COLLECTIBLE_GLASS_CANNON 353 COLLECTIBLE_BOMBER_BOY 354 COLLECTIBLE_CRACK_JACKS 355 COLLECTIBLE_MOMS_PEARLS 356 COLLECTIBLE_CAR_BATTERY 357 COLLECTIBLE_BOX_OF_FRIENDS 358 COLLECTIBLE_THE_WIZ 359 COLLECTIBLE_8_INCH_NAILS 360 COLLECTIBLE_INCUBUS 361 COLLECTIBLE_FATES_REWARD 362 COLLECTIBLE_LIL_CHEST 363 COLLECTIBLE_SWORN_PROTECTOR 364 COLLECTIBLE_FRIEND_ZONE 365 COLLECTIBLE_LOST_FLY 366 COLLECTIBLE_SCATTER_BOMBS 367 COLLECTIBLE_STICKY_BOMBS 368 COLLECTIBLE_EPIPHORA 369 COLLECTIBLE_CONTINUUM 370 COLLECTIBLE_MR_DOLLY 371 COLLECTIBLE_CURSE_OF_THE_TOWER 372 COLLECTIBLE_CHARGED_BABY 373 COLLECTIBLE_DEAD_EYE 374 COLLECTIBLE_HOLY_LIGHT 375 COLLECTIBLE_HOST_HAT 376 COLLECTIBLE_RESTOCK 377 COLLECTIBLE_BURSTING_SACK 378 COLLECTIBLE_NUMBER_TWO 379 COLLECTIBLE_PUPULA_DUPLEX 380 COLLECTIBLE_PAY_TO_PLAY 381 COLLECTIBLE_EDENS_BLESSING 382 COLLECTIBLE_FRIEND_BALL 383 COLLECTIBLE_TEAR_DETONATOR 384 COLLECTIBLE_LIL_GURDY 385 COLLECTIBLE_BUMBO 386 COLLECTIBLE_D12 387 COLLECTIBLE_CENSER 388 COLLECTIBLE_KEY_BUM 389 COLLECTIBLE_RUNE_BAG 390 COLLECTIBLE_SERAPHIM 391 COLLECTIBLE_BETRAYAL 392 COLLECTIBLE_ZODIAC 393 COLLECTIBLE_SERPENTS_KISS 394 COLLECTIBLE_MARKED 395 COLLECTIBLE_TECH_X 396 COLLECTIBLE_VENTRICLE_RAZOR 397 COLLECTIBLE_TRACTOR_BEAM 398 COLLECTIBLE_GODS_FLESH 399 COLLECTIBLE_MAW_OF_THE_VOID (ab+: COLLECTIBLE_MAW_OF_VOID) 400 COLLECTIBLE_SPEAR_OF_DESTINY 401 COLLECTIBLE_EXPLOSIVO 402 COLLECTIBLE_CHAOS 403 COLLECTIBLE_SPIDER_MOD 404 COLLECTIBLE_FARTING_BABY 405 COLLECTIBLE_GB_BUG 406 COLLECTIBLE_D8 407 COLLECTIBLE_PURITY 408 COLLECTIBLE_ATHAME 409 COLLECTIBLE_EMPTY_VESSEL 410 COLLECTIBLE_EVIL_EYE 411 COLLECTIBLE_LUSTY_BLOOD 412 COLLECTIBLE_CAMBION_CONCEPTION 413 COLLECTIBLE_IMMACULATE_CONCEPTION 414 COLLECTIBLE_MORE_OPTIONS 415 COLLECTIBLE_CROWN_OF_LIGHT 416 COLLECTIBLE_DEEP_POCKETS 417 COLLECTIBLE_SUCCUBUS 418 COLLECTIBLE_FRUIT_CAKE 419 COLLECTIBLE_TELEPORT_2 420 COLLECTIBLE_BLACK_POWDER 421 COLLECTIBLE_KIDNEY_BEAN 422 COLLECTIBLE_GLOWING_HOUR_GLASS 423 COLLECTIBLE_CIRCLE_OF_PROTECTION 424 COLLECTIBLE_SACK_HEAD 425 COLLECTIBLE_NIGHT_LIGHT 426 COLLECTIBLE_OBSESSED_FAN 427 COLLECTIBLE_MINE_CRAFTER 428 COLLECTIBLE_PJS 429 COLLECTIBLE_HEAD_OF_THE_KEEPER 430 COLLECTIBLE_PAPA_FLY 431 COLLECTIBLE_MULTIDIMENSIONAL_BABY 432 COLLECTIBLE_GLITTER_BOMBS 433 COLLECTIBLE_MY_SHADOW 434 COLLECTIBLE_JAR_OF_FLIES 435 COLLECTIBLE_LIL_LOKI 436 COLLECTIBLE_MILK 437 COLLECTIBLE_D7 438 COLLECTIBLE_BINKY 439 COLLECTIBLE_MOMS_BOX 440 COLLECTIBLE_KIDNEY_STONE 441 COLLECTIBLE_MEGA_BLAST (ab+: COLLECTIBLE_MEGA_SATANS_BREATH) 442 COLLECTIBLE_DARK_PRINCES_CROWN (ab+: COLLECTIBLE_DARK_PRINCESS_CROWN) 443 COLLECTIBLE_APPLE 444 COLLECTIBLE_LEAD_PENCIL 445 COLLECTIBLE_DOG_TOOTH 446 COLLECTIBLE_DEAD_TOOTH 447 COLLECTIBLE_LINGER_BEAN 448 COLLECTIBLE_SHARD_OF_GLASS 449 COLLECTIBLE_METAL_PLATE 450 COLLECTIBLE_EYE_OF_GREED 451 COLLECTIBLE_TAROT_CLOTH 452 COLLECTIBLE_VARICOSE_VEINS 453 COLLECTIBLE_COMPOUND_FRACTURE 454 COLLECTIBLE_POLYDACTYLY 455 COLLECTIBLE_DADS_LOST_COIN 456 COLLECTIBLE_MIDNIGHT_SNACK (ab+: COLLECTIBLE_MOLDY_BREAD) 457 COLLECTIBLE_CONE_HEAD 458 COLLECTIBLE_BELLY_BUTTON 459 COLLECTIBLE_SINUS_INFECTION 460 COLLECTIBLE_GLAUCOMA 461 COLLECTIBLE_PARASITOID 462 COLLECTIBLE_EYE_OF_BELIAL 463 COLLECTIBLE_SULFURIC_ACID 464 COLLECTIBLE_GLYPH_OF_BALANCE 465 COLLECTIBLE_ANALOG_STICK 466 COLLECTIBLE_CONTAGION 467 COLLECTIBLE_FINGER 468 COLLECTIBLE_SHADE 469 COLLECTIBLE_DEPRESSION 470 COLLECTIBLE_HUSHY 471 COLLECTIBLE_LIL_MONSTRO 472 COLLECTIBLE_KING_BABY 473 COLLECTIBLE_BIG_CHUBBY 474 COLLECTIBLE_BROKEN_GLASS_CANNON (ab+: COLLECTIBLE_TONSIL) 475 COLLECTIBLE_PLAN_C 476 COLLECTIBLE_D1 477 COLLECTIBLE_VOID 478 COLLECTIBLE_PAUSE 479 COLLECTIBLE_SMELTER 480 COLLECTIBLE_COMPOST 481 COLLECTIBLE_DATAMINER 482 COLLECTIBLE_CLICKER 483 COLLECTIBLE_MAMA_MEGA 484 COLLECTIBLE_WAIT_WHAT 485 COLLECTIBLE_CROOKED_PENNY 486 COLLECTIBLE_DULL_RAZOR 487 COLLECTIBLE_POTATO_PEELER 488 COLLECTIBLE_METRONOME 489 COLLECTIBLE_D_INFINITY (ab+: COLLECTIBLE_DINF) 490 COLLECTIBLE_EDENS_SOUL 491 COLLECTIBLE_ACID_BABY 492 COLLECTIBLE_YO_LISTEN 493 COLLECTIBLE_ADRENALINE (ab+: COLLECTIBLE_ADDERLINE) 494 COLLECTIBLE_JACOBS_LADDER 495 COLLECTIBLE_GHOST_PEPPER 496 COLLECTIBLE_EUTHANASIA 497 COLLECTIBLE_CAMO_UNDIES 498 COLLECTIBLE_DUALITY 499 COLLECTIBLE_EUCHARIST 500 COLLECTIBLE_SACK_OF_SACKS 501 COLLECTIBLE_GREEDS_GULLET 502 COLLECTIBLE_LARGE_ZIT 503 COLLECTIBLE_LITTLE_HORN 504 COLLECTIBLE_BROWN_NUGGET 505 COLLECTIBLE_POKE_GO 506 COLLECTIBLE_BACKSTABBER 507 COLLECTIBLE_SHARP_STRAW 508 COLLECTIBLE_MOMS_RAZOR 509 COLLECTIBLE_BLOODSHOT_EYE 510 COLLECTIBLE_DELIRIOUS 511 COLLECTIBLE_ANGRY_FLY Booster Pack #1 512 COLLECTIBLE_BLACK_HOLE 513 COLLECTIBLE_BOZO 514 COLLECTIBLE_BROKEN_MODEM 515 COLLECTIBLE_MYSTERY_GIFT 516 COLLECTIBLE_SPRINKLER 517 COLLECTIBLE_FAST_BOMBS 518 COLLECTIBLE_BUDDY_IN_A_BOX 519 COLLECTIBLE_LIL_DELIRIUM 520 COLLECTIBLE_JUMPER_CABLES Booster Pack #2 521 COLLECTIBLE_COUPON 522 COLLECTIBLE_TELEKINESIS 523 COLLECTIBLE_MOVING_BOX 524 COLLECTIBLE_TECHNOLOGY_ZERO 525 COLLECTIBLE_LEPROSY (ab+: COLLECTIBLE_LEPROCY) 526 COLLECTIBLE_7_SEALS Booster Pack #3  (ab+: COLLECTIBLE_LIL_HARBINGERS) 527 COLLECTIBLE_MR_ME 528 COLLECTIBLE_ANGELIC_PRISM 529 COLLECTIBLE_POP 530 COLLECTIBLE_DEATHS_LIST Booster Pack #4  (ab+: COLLECTIBLE_DEATH_LIST) 531 COLLECTIBLE_HAEMOLACRIA 532 COLLECTIBLE_LACHRYPHAGY 533 COLLECTIBLE_TRISAGION 534 COLLECTIBLE_SCHOOLBAG 535 COLLECTIBLE_BLANKET Booster Pack #5 536 COLLECTIBLE_SACRIFICIAL_ALTAR 537 COLLECTIBLE_LIL_SPEWER 538 COLLECTIBLE_MARBLES 539 COLLECTIBLE_MYSTERY_EGG 540 COLLECTIBLE_FLAT_STONE 541 COLLECTIBLE_MARROW 542 COLLECTIBLE_SLIPPED_RIB 543 COLLECTIBLE_HALLOWED_GROUND 544 COLLECTIBLE_POINTY_RIB 545 COLLECTIBLE_BOOK_OF_THE_DEAD 546 COLLECTIBLE_DADS_RING 547 COLLECTIBLE_DIVORCE_PAPERS 548 COLLECTIBLE_JAW_BONE 549 COLLECTIBLE_BRITTLE_BONES 550 COLLECTIBLE_BROKEN_SHOVEL_1 (ab+: COLLECTIBLE_BROKEN_SHOVEL) 551 COLLECTIBLE_BROKEN_SHOVEL_2 552 COLLECTIBLE_MOMS_SHOVEL 553 COLLECTIBLE_MUCORMYCOSIS 554 COLLECTIBLE_2SPOOKY 555 COLLECTIBLE_GOLDEN_RAZOR 556 COLLECTIBLE_SULFUR 557 COLLECTIBLE_FORTUNE_COOKIE 558 COLLECTIBLE_EYE_SORE 559 COLLECTIBLE_120_VOLT 560 COLLECTIBLE_IT_HURTS 561 COLLECTIBLE_ALMOND_MILK 562 COLLECTIBLE_ROCK_BOTTOM 563 COLLECTIBLE_NANCY_BOMBS 564 COLLECTIBLE_BAR_OF_SOAP 565 COLLECTIBLE_BLOOD_PUPPY 566 COLLECTIBLE_DREAM_CATCHER 567 COLLECTIBLE_PASCHAL_CANDLE 568 COLLECTIBLE_DIVINE_INTERVENTION 569 COLLECTIBLE_BLOOD_OATH 570 COLLECTIBLE_PLAYDOUGH_COOKIE 571 COLLECTIBLE_SOCKS 572 COLLECTIBLE_EYE_OF_THE_OCCULT 573 COLLECTIBLE_IMMACULATE_HEART 574 COLLECTIBLE_MONSTRANCE 575 COLLECTIBLE_INTRUDER 576 COLLECTIBLE_DIRTY_MIND 577 COLLECTIBLE_DAMOCLES 578 COLLECTIBLE_FREE_LEMONADE 579 COLLECTIBLE_SPIRIT_SWORD 580 COLLECTIBLE_RED_KEY 581 COLLECTIBLE_PSY_FLY 582 COLLECTIBLE_WAVY_CAP 583 COLLECTIBLE_ROCKET_IN_A_JAR 584 COLLECTIBLE_BOOK_OF_VIRTUES 585 COLLECTIBLE_ALABASTER_BOX 586 COLLECTIBLE_STAIRWAY 588 COLLECTIBLE_SOL 589 COLLECTIBLE_LUNA 590 COLLECTIBLE_MERCURIUS 591 COLLECTIBLE_VENUS 592 COLLECTIBLE_TERRA 593 COLLECTIBLE_MARS 594 COLLECTIBLE_JUPITER 595 COLLECTIBLE_SATURNUS 596 COLLECTIBLE_URANUS 597 COLLECTIBLE_NEPTUNUS 598 COLLECTIBLE_PLUTO 599 COLLECTIBLE_VOODOO_HEAD 600 COLLECTIBLE_EYE_DROPS 601 COLLECTIBLE_ACT_OF_CONTRITION 602 COLLECTIBLE_MEMBER_CARD 603 COLLECTIBLE_BATTERY_PACK 604 COLLECTIBLE_MOMS_BRACELET 605 COLLECTIBLE_SCOOPER 606 COLLECTIBLE_OCULAR_RIFT 607 COLLECTIBLE_BOILED_BABY 608 COLLECTIBLE_FREEZER_BABY 609 COLLECTIBLE_ETERNAL_D6 610 COLLECTIBLE_BIRD_CAGE 611 COLLECTIBLE_LARYNX 612 COLLECTIBLE_LOST_SOUL 614 COLLECTIBLE_BLOOD_BOMBS 615 COLLECTIBLE_LIL_DUMPY 616 COLLECTIBLE_BIRDS_EYE 617 COLLECTIBLE_LODESTONE 618 COLLECTIBLE_ROTTEN_TOMATO 619 COLLECTIBLE_BIRTHRIGHT 621 COLLECTIBLE_RED_STEW 622 COLLECTIBLE_GENESIS 623 COLLECTIBLE_SHARP_KEY 624 COLLECTIBLE_BOOSTER_PACK 625 COLLECTIBLE_MEGA_MUSH 626 COLLECTIBLE_KNIFE_PIECE_1 627 COLLECTIBLE_KNIFE_PIECE_2 628 COLLECTIBLE_DEATH_CERTIFICATE 629 COLLECTIBLE_BOT_FLY 631 COLLECTIBLE_MEAT_CLEAVER 632 COLLECTIBLE_EVIL_CHARM 633 COLLECTIBLE_DOGMA 634 COLLECTIBLE_PURGATORY 635 COLLECTIBLE_STITCHES 636 COLLECTIBLE_R_KEY 637 COLLECTIBLE_KNOCKOUT_DROPS 638 COLLECTIBLE_ERASER 639 COLLECTIBLE_YUCK_HEART 640 COLLECTIBLE_URN_OF_SOULS 641 COLLECTIBLE_AKELDAMA 641 COLLECTIBLE_AKELDAMA 642 COLLECTIBLE_MAGIC_SKIN 643 COLLECTIBLE_REVELATION 644 COLLECTIBLE_CONSOLATION_PRIZE 645 COLLECTIBLE_TINYTOMA 646 COLLECTIBLE_BRIMSTONE_BOMBS 647 COLLECTIBLE_4_5_VOLT 649 COLLECTIBLE_FRUITY_PLUM 650 COLLECTIBLE_PLUM_FLUTE 651 COLLECTIBLE_STAR_OF_BETHLEHEM 652 COLLECTIBLE_CUBE_BABY 653 COLLECTIBLE_VADE_RETRO 654 COLLECTIBLE_FALSE_PHD 655 COLLECTIBLE_SPIN_TO_WIN 656 COLLECTIBLE_DAMOCLES_PASSIVE 657 COLLECTIBLE_VASCULITIS 658 COLLECTIBLE_GIANT_CELL 659 COLLECTIBLE_TROPICAMIDE 660 COLLECTIBLE_CARD_READING 661 COLLECTIBLE_QUINTS 663 COLLECTIBLE_TOOTH_AND_NAIL 664 COLLECTIBLE_BINGE_EATER 665 COLLECTIBLE_GUPPYS_EYE 667 COLLECTIBLE_STRAW_MAN 668 COLLECTIBLE_DADS_NOTE 669 COLLECTIBLE_SAUSAGE 670 COLLECTIBLE_OPTIONS 671 COLLECTIBLE_CANDY_HEART 672 COLLECTIBLE_POUND_OF_FLESH 673 COLLECTIBLE_REDEMPTION 674 COLLECTIBLE_SPIRIT_SHACKLES 675 COLLECTIBLE_CRACKED_ORB 676 COLLECTIBLE_EMPTY_HEART 677 COLLECTIBLE_ASTRAL_PROJECTION 678 COLLECTIBLE_C_SECTION 679 COLLECTIBLE_LIL_ABADDON 680 COLLECTIBLE_MONTEZUMAS_REVENGE 681 COLLECTIBLE_LIL_PORTAL 682 COLLECTIBLE_WORM_FRIEND 683 COLLECTIBLE_BONE_SPURS 684 COLLECTIBLE_HUNGRY_SOUL 685 COLLECTIBLE_JAR_OF_WISPS 686 COLLECTIBLE_SOUL_LOCKET 687 COLLECTIBLE_FRIEND_FINDER 688 COLLECTIBLE_INNER_CHILD 689 COLLECTIBLE_GLITCHED_CROWN 690 COLLECTIBLE_JELLY_BELLY 691 COLLECTIBLE_SACRED_ORB 692 COLLECTIBLE_SANGUINE_BOND 693 COLLECTIBLE_SWARM 694 COLLECTIBLE_HEARTBREAK 695 COLLECTIBLE_BLOODY_GUST 696 COLLECTIBLE_SALVATION 697 COLLECTIBLE_VANISHING_TWIN 698 COLLECTIBLE_TWISTED_PAIR 699 COLLECTIBLE_AZAZELS_RAGE 700 COLLECTIBLE_ECHO_CHAMBER 701 COLLECTIBLE_ISAACS_TOMB 702 COLLECTIBLE_VENGEFUL_SPIRIT 703 COLLECTIBLE_ESAU_JR 704 COLLECTIBLE_BERSERK 705 COLLECTIBLE_DARK_ARTS 706 COLLECTIBLE_ABYSS 707 COLLECTIBLE_SUPPER 708 COLLECTIBLE_STAPLER 709 COLLECTIBLE_SUPLEX 710 COLLECTIBLE_BAG_OF_CRAFTING 711 COLLECTIBLE_FLIP 712 COLLECTIBLE_LEMEGETON 713 COLLECTIBLE_SUMPTORIUM 714 COLLECTIBLE_RECALL 715 COLLECTIBLE_HOLD 716 COLLECTIBLE_KEEPERS_SACK 717 COLLECTIBLE_KEEPERS_KIN 719 COLLECTIBLE_KEEPERS_BOX 720 COLLECTIBLE_EVERYTHING_JAR 721 COLLECTIBLE_TMTRAINER 722 COLLECTIBLE_ANIMA_SOLA 723 COLLECTIBLE_SPINDOWN_DICE 724 COLLECTIBLE_HYPERCOAGULATION 725 COLLECTIBLE_IBS 726 COLLECTIBLE_HEMOPTYSIS 727 COLLECTIBLE_GHOST_BOMBS 728 COLLECTIBLE_GELLO 729 COLLECTIBLE_DECAP_ATTACK 730 COLLECTIBLE_GLASS_EYE 731 COLLECTIBLE_STYE 732 COLLECTIBLE_MOMS_RING 733 NUM_COLLECTIBLES","tags":["Enum"]},{"location":"enums/DamageFlag.html","title":"Enum \"DamageFlag\"","text":"Bitset Calculator DLC Value Enumerator Comment 1 &lt;&lt; 0 DAMAGE_NOKILL Damage can not kill the receiver  1 &lt;&lt; 1 DAMAGE_FIRE Source is some sort of fire (ie. fireplace)  1 &lt;&lt; 2 DAMAGE_EXPLOSION Damage comes from an explosion  1 &lt;&lt; 3 DAMAGE_LASER Damage comes from laser  1 &lt;&lt; 4 DAMAGE_ACID Damage comes from acid, e.g. blood acid  1 &lt;&lt; 5 DAMAGE_RED_HEARTS Damage affects only red hearts if &gt; 1 (ex: razor)  1 &lt;&lt; 6 DAMAGE_COUNTDOWN Damage from unicorn horn, the nail, game kid that has cooldown  1 &lt;&lt; 7 DAMAGE_SPIKES Damage from spikes  1 &lt;&lt; 8 DAMAGE_CLONES Damage is done by clones when they took damage, avoid infinite loops  1 &lt;&lt; 9 DAMAGE_POOP Damage from red poop  1 &lt;&lt; 10 DAMAGE_DEVIL Damage comes from devil room deal  1 &lt;&lt; 11 DAMAGE_ISSAC_HEART Indicates the damage has been redirected from Isaac's Heart familiar  1 &lt;&lt; 12 DAMAGE_TNT Damage comes from a TNT barrel  1 &lt;&lt; 13 DAMAGE_INVINCIBLE Damages even if invincible (currently only for player). Used on IV Bag.  1 &lt;&lt; 14 DAMAGE_SPAWN_FLY Creates a fly when damage is applied  1 &lt;&lt; 15 DAMAGE_POISON_BURN Damage comes from POISON/BURN flags  1 &lt;&lt; 16 DAMAGE_CURSED_DOOR Damage comes from a cursed door  1 &lt;&lt; 17 DAMAGE_TIMER Damage comes from the passage of time (used for player damage by time limited special seeds)  1 &lt;&lt; 18 DAMAGE_IV_BAG Damage from using the IV Bag  1 &lt;&lt; 19 DAMAGE_PITFALL Damage comes from pitfalls (such as ones spawned by Little Horn)  1 &lt;&lt; 20 DAMAGE_CHEST Damage comes from spiked chest  1 &lt;&lt; 21 DAMAGE_FAKE Fake damage that should trigger player's damage effects.  1 &lt;&lt; 22 DAMAGE_BOOGER Damage from booger tear  1 &lt;&lt; 23 DAMAGE_SPAWN_BLACK_HEART Should drop a black heart if damage is lethal  1 &lt;&lt; 24 DAMAGE_CRUSH Damage comes from a strong impact, can damage Tuff Twins or The Shells' stony exteriors (like Mom's foot, shockwaves, rock tears)  1 &lt;&lt; 25 DAMAGE_NO_MODIFIERS Ignore damage modifiers (such as doubled damage from the Womb and later floors or reduced damage from the Wafer)  1 &lt;&lt; 26 DAMAGE_SPAWN_RED_HEART Should drop a red heart if damage is lethal  1 &lt;&lt; 27 DAMAGE_SPAWN_COIN Should drop a coin if damage is lethal  1 &lt;&lt; 28 DAMAGE_NO_PENALTIES Damage shouldn't apply any penalties (such as devil deal chance)  1 &lt;&lt; 29 DAMAGE_SPAWN_TEMP_HEART Should drop a half red heart that quickly despawns if damage is lethal  1 &lt;&lt; 30 DAMAGE_IGNORE_ARMOR Damage ignores boss armor  1 &lt;&lt; 31 DAMAGE_SPAWN_CARD Should drop a card if damage is lethal  1 &lt;&lt; 32 DAMAGE_SPAWN_RUNE Should drop a rune if damage is lethal","tags":["Enum"]},{"location":"enums/Difficulty.html","title":"Enum \"Difficulty\"","text":"DLC Value Enumerator Comment 0 DIFFICULTY_NORMAL 1 DIFFICULTY_HARD 2 DIFFICULTY_GREED 3 DIFFICULTY_GREEDIER","tags":["Enum"]},{"location":"enums/Direction.html","title":"Enum \"Direction\"","text":"DLC Value Enumerator Comment -1 NO_DIRECTION 0 LEFT 1 UP 2 RIGHT 3 DOWN","tags":["Enum"]},{"location":"enums/DoorSlot.html","title":"Enum \"DoorSlot\"","text":"DLC Value Enumerator Comment -1 NO_DOOR_SLOT 0 LEFT0 1 UP0 2 RIGHT0 3 DOWN0 4 LEFT1 5 UP1 6 RIGHT1 7 DOWN1 8 NUM_DOOR_SLOTS","tags":["Enum"]},{"location":"enums/DoorState.html","title":"Enum \"DoorState\"","text":"DLC Value Enumerator Comment 0 STATE_INIT 1 STATE_CLOSED 2 STATE_OPEN 3 STATE_ONE_CHAIN 4 STATE_HALF_CRACKED","tags":["Enum"]},{"location":"enums/DoorVariant.html","title":"Enum \"DoorVariant\"","text":"DLC Value Enumerator Comment 0 DOOR_UNSPECIFIED 1 DOOR_LOCKED 2 DOOR_LOCKED_DOUBLE 3 DOOR_LOCKED_CRACKED 4 DOOR_LOCKED_BARRED 5 DOOR_LOCKED_KEYFAMILIAR 6 DOOR_LOCKED_GREED 7 DOOR_HIDDEN 8 DOOR_UNLOCKED","tags":["Enum"]},{"location":"enums/EffectVariant.html","title":"Enum \"EffectVariant\"","text":"DLC Value Enumerator Comment 0 EFFECT_NULL 1 BOMB_EXPLOSION 2 BLOOD_EXPLOSION 3 FLY_EXPLOSION 4 ROCK_PARTICLE 5 BLOOD_PARTICLE 6 DEVIL 7 BLOOD_SPLAT 8 LADDER 9 ANGEL 10 BLUE_FLAME 11 BULLET_POOF 12 TEAR_POOF_A 13 TEAR_POOF_B 14 RIPPLE_POOF 14 CROSS_POOF AB+ backwards compatibility 15 POOF01 16 POOF02 17 POOF04 18 BOMB_CRATER 19 CRACK_THE_SKY Subtype affects behavior:0 - beam appears instantly, hits multiple times (similar to Crack The Sky item)1 - beam appears instantly, hits once (similar to Holy Shot)2 - beam appears with a delay, hits multiplie times (similar to White Pony) 20 SCYTHE_BREAK 21 TINY_BUG 22 CREEP_RED 23 CREEP_GREEN 24 CREEP_YELLOW 25 CREEP_WHITE 26 CREEP_BLACK 27 WOOD_PARTICLE 28 MONSTROS_TOOTH 29 MOM_FOOT_STOMP 30 TARGET 31 ROCKET 32 PLAYER_CREEP_LEMON_MISHAP 33 TINY_FLY 34 FART 35 TOOTH_PARTICLE 36 XRAY_WALL 37 PLAYER_CREEP_HOLYWATER 38 SPIDER_EXPLOSION 39 HEAVEN_LIGHT_DOOR 40 STARFLASH 41 WATER_DROPLET 42 BLOOD_GUSH 43 POOP_EXPLOSION 44 PLAYER_CREEP_WHITE 45 PLAYER_CREEP_BLACK 46 PLAYER_CREEP_RED 47 TRINITY_SHIELD 48 BATTERY 49 HEART 50 LASER_IMPACT 51 HOT_BOMB_FIRE 52 RED_CANDLE_FLAME 53 PLAYER_CREEP_GREEN 54 PLAYER_CREEP_HOLYWATER_TRAIL 55 SPIKE 56 CREEP_BROWN Bullet leaves a brown creep  57 PULLING_EFFECT 58 POOP_PARTICLE 59 DUST_CLOUD 60 BOOMERANG come back  61 SHOCKWAVE 62 ROCK_EXPLOSION 63 WORM 64 BEETLE 65 WISP 66 EMBER_PARTICLE 67 SHOCKWAVE_DIRECTIONAL 68 WALL_BUG 69 BUTTERFLY 70 BLOOD_DROP 71 BRIMSTONE_SWIRL 72 CRACKWAVE 73 SHOCKWAVE_RANDOM 74 ISAACS_CARPET 75 BAR_PARTICLE 76 DICE_FLOOR 77 LARGE_BLOOD_EXPLOSION 78 PLAYER_CREEP_LEMON_PARTY 79 TEAR_POOF_SMALL 80 TEAR_POOF_VERYSMALL 81 FRIEND_BALL 82 WOMB_TELEPORT 83 SPEAR_OF_DESTINY 84 EVIL_EYE 85 DIAMOND_PARTICLE 86 NAIL_PARTICLE 87 FALLING_EMBER 88 DARK_BALL_SMOKE_PARTICLE 89 ULTRA_GREED_FOOTPRINT 90 PLAYER_CREEP_PUDDLE_MILK 91 MOMS_HAND 92 PLAYER_CREEP_BLACKPOWDER 93 PENTAGRAM_BLACKPOWDER 94 CREEP_SLIPPERY_BROWN 95 GOLD_PARTICLE 96 HUSH_LASER 97 IMPACT 98 COIN_PARTICLE 99 WATER_SPLASH 100 HUSH_ASHES 101 HUSH_LASER_UP 102 BULLET_POOF_HUSH 103 ULTRA_GREED_BLING 104 FIREWORKS 105 BROWN_CLOUD 106 FART_RING 107 BLACK_HOLE 108 MR_ME 109 DEATH_SKULL 110 ENEMY_BRIMSTONE_SWIRL 111 HAEMO_TRAIL 112 HALLOWED_GROUND 113 BRIMSTONE_BALL 114 FORGOTTEN_CHAIN 115 BROKEN_SHOVEL_SHADOW 116 DIRT_PATCH 117 FORGOTTEN_SOUL 118 SMALL_ROCKET 119 TIMER 120 SPAWNER 121 LIGHT 122 BIG_HORN_HOLE_HELPER 123 HALO 124 TAR_BUBBLE 125 BIG_HORN_HAND 126 TECH_DOT 127 MAMA_MEGA_EXPLOSION 128 OPTION_LINE 130 LEECH_EXPLOSION 131 MAGGOT_EXPLOSION 132 BIG_SPLASH 133 WATER_RIPPLE 134 PEDESTAL_RIPPLE 135 RAIN_DROP 136 GRID_ENTITY_PROJECTILE_HELPER 137 WORMWOOD_HOLE 138 MIST 139 TRAPDOOR_COVER 140 BACKDROP_DECORATION 141 SMOKE_CLOUD 142 WHIRLPOOL 143 FARTWAVE 144 ENEMY_GHOST 145 ROCK_POOF 146 DIRT_PILE 147 FIRE_JET 148 FIRE_WAVE 149 BIG_ROCK_EXPLOSION 150 BIG_CRACKWAVE 151 BIG_ATTRACT 152 HORNFEL_ROOM_CONTROLLER 153 OCCULT_TARGET 154 DOOR_OUTLINE 155 CREEP_SLIPPERY_BROWN_GROWING 156 TALL_LADDER 157 WILLO_SPAWNER 158 TADPOLE 159 LIL_GHOST 160 BISHOP_SHIELD 161 PORTAL_TELEPORT 162 HERETIC_PENTAGRAM 163 CHAIN_GIB 164 SIREN_RING 165 CHARM_EFFECT 166 SPRITE_TRAIL 167 CHAIN_LIGHTNING 168 COLOSTOMIA_PUDDLE 169 CREEP_STATIC 170 DOGMA_DEBRIS 171 DOGMA_BLACKHOLE 172 DOGMA_ORB 173 CRACKED_ORB_POOF 174 SHOP_SPIKES 175 KINETI_BEAM 176 CLEAVER_SLASH 177 REVERSE_EXPLOSION 178 URN_OF_SOULS 179 ENEMY_SOUL 180 RIFT 181 LAVA_SPAWNER 182 BIG_KNIFE 183 MOTHER_SHOCKWAVE 184 WORM_FRIEND_SNARE 185 REDEMPTION 186 HUNGRY_SOUL 187 EXPLOSION_WAVE 188 DIVINE_INTERVENTION 189 PURGATORY 190 MOTHER_TRACER 191 PICKUP_GHOST 192 FISSURE_SPAWNER 193 ANIMA_CHAIN 194 DARK_SNARE 195 CREEP_LIQUID_POOP 196 GROUND_GLOW 197 DEAD_BIRD 198 GENERIC_TRACER 199 ULTRA_DEATH_SCYTHE","tags":["Enum"]},{"location":"enums/EntityCollisionClass.html","title":"Enum \"EntityCollisionClass\"","text":"DLC Value Enumerator Comment 0 ENTCOLL_NONE no collision with other entities  1 ENTCOLL_PLAYERONLY collide with player only  2 ENTCOLL_PLAYEROBJECTS collide with player, tears, familiars, ..  3 ENTCOLL_ENEMIES collide with enemies  4 ENTCOLL_ALL collide with everything","tags":["Enum"]},{"location":"enums/EntityFlag.html","title":"Enum \"EntityFlag\"","text":"Bitset Calculator DLC Value Enumerator Comment 1 &lt;&lt; 0 FLAG_NO_STATUS_EFFECTS prevent freeze/poison/slow/charm/confusion/fear/burn 1 &lt;&lt; 1 FLAG_NO_INTERPOLATE do not interpolate position 1 &lt;&lt; 2 FLAG_APPEAR play appear animation after Init 1 &lt;&lt; 3 FLAG_RENDER_FLOOR Meant for entities that have a sprite loaded that represent a floor texture. Entities with this flag will be removed after their first render. (Removing the entity is desirable because we would not want it to override other things that render to the floor, like bomb explosions. You can use <code>EntityFlag.NO_REMOVE_ON_TEX_RENDER</code> to disable this behavior. 1 &lt;&lt; 4 FLAG_NO_TARGET will not be a target of NPCs or familiars 1 &lt;&lt; 5 FLAG_FREEZE freezing effect 1 &lt;&lt; 6 FLAG_POISON poison effect 1 &lt;&lt; 7 FLAG_SLOW slowing (velocity) 1 &lt;&lt; 8 FLAG_CHARM Charmed 1 &lt;&lt; 9 FLAG_CONFUSION Confused 1 &lt;&lt; 10 FLAG_MIDAS_FREEZE Midas frozen 1 &lt;&lt; 11 FLAG_FEAR Fleeing in Fear (like Mom's Pad) 1 &lt;&lt; 12 FLAG_BURN Caused by Fire Mind tears, works like poison except with Red color effect. 1 &lt;&lt; 13 FLAG_RENDER_WALL Meant for entities that have a sprite loaded that represent a wall texture. Entities with this flag will be removed after their first render. (Removing the entity is desirable because we would not want it to override other things that render to the wall, like bomb explosions. You can use <code>EntityFlag.NO_REMOVE_ON_TEX_RENDER</code> to disable this behavior. 1 &lt;&lt; 14 FLAG_INTERPOLATION_UPDATE entity is updating at 60 fps, and this is an odd frame 1 &lt;&lt; 15 FLAG_APPLY_GRAVITY In sidescrolling room, this indicates that we're in a gravity zone. 1 &lt;&lt; 16 FLAG_NO_BLOOD_SPLASH 1 &lt;&lt; 17 FLAG_NO_REMOVE_ON_TEX_RENDER See <code>EntityFlag.FLAG_RENDER_FLOOR</code> and <code>EntityFlag.FLAG_RENDER_WALL</code>. 1 &lt;&lt; 18 FLAG_NO_DEATH_TRIGGER 1 &lt;&lt; 19 FLAG_NO_SPIKE_DAMAGE EntityNPC: shouldn't take any damage from spikes 1 &lt;&lt; 19 FLAG_LASER_POP EntityTear: Pop tear fired by a laser, should decelerate very quickly for the first few frames 1 &lt;&lt; 19 FLAG_ITEM_SHOULD_DUPLICATE EntityPickup: item pedestal affected by Damocles, will be duplicated at the end of the current frame 1 &lt;&lt; 20 FLAG_BOSSDEATH_TRIGGERED Some bosses (Lamb/Mother) can die but they'll still appear to be active in the room (IsActiveEnemy). You can check this flag in those cases. 1 &lt;&lt; 21 FLAG_DONT_OVERWRITE Used in entityfactory to not remove this entity if there is no space left for new entity 1 &lt;&lt; 22 FLAG_SPAWN_STICKY_SPIDERS Used by Sticky bombs to generate spiders on death 1 &lt;&lt; 23 FLAG_SPAWN_BLACK_HP Used by black hp drop tear flag to drop a black hp on enemy death 1 &lt;&lt; 24 FLAG_SHRINK God's flesh effect 1 &lt;&lt; 25 FLAG_NO_FLASH_ON_DAMAGE Entity will not flash red when damaged 1 &lt;&lt; 26 FLAG_NO_KNOCKBACK Bombs and farts have no knockback effects 1 &lt;&lt; 27 FLAG_SLIPPERY_PHYSICS Standing on a slippery surface 1 &lt;&lt; 28 FLAG_ADD_JAR_FLY Adds a fly to the jar when killed 1 &lt;&lt; 29 FLAG_FRIENDLY Charmed and m_CharmCountdown&lt;0 1 &lt;&lt; 30 FLAG_NO_PHYSICS_KNOCKBACK No knockback from general collisions 1 &lt;&lt; 31 FLAG_DONT_COUNT_BOSS_HP Do not count boss hp. If all boss entities have this tag, the boss hp bar is hidden 1 &lt;&lt; 32 FLAG_NO_SPRITE_UPDATE Do not update sprite animation 1 &lt;&lt; 33 FLAG_CONTAGIOUS Used for Contagious item (if the enemy is infected) 1 &lt;&lt; 34 FLAG_BLEED_OUT Used for Mom's Razor 1 &lt;&lt; 35 FLAG_HIDE_HP_BAR Hides the Spider Mod hp bar of an EntityNPC 1 &lt;&lt; 36 FLAG_NO_DAMAGE_BLINK Player was given a short period of invulnerability by something other than damage, don't blink 1 &lt;&lt; 37 FLAG_PERSISTENT The entity will persists between rooms. (It will appear in every room, as opposed to the game remembering the specific room that it was spawned in.) 1 &lt;&lt; 38 FLAG_BACKDROP_DETAIL Was spawned as a backdrop decoration, should be deleted if the current backdrop changes (due to Delirium) 1 &lt;&lt; 39 FLAG_AMBUSH Enemy was spawned by some sort of ambush (Greed Mode, challenge rooms), don't collide with the player for a few frames 1 &lt;&lt; 40 FLAG_GLITCH Glitched out, has different effects depending on the entity 1 &lt;&lt; 41 FLAG_SPIN Used by Spin to Win, causes a familiar to rapidly spin around its owner 1 &lt;&lt; 42 FLAG_NO_REWARD Doesn't spawn any kind of reward on death 1 &lt;&lt; 43 FLAG_REDUCE_GIBS Spawn less gibs on death 1 &lt;&lt; 44 FLAG_TRANSITION_UPDATE Updates during room/stage transitions 1 &lt;&lt; 45 FLAG_NO_PLAYER_CONTROL Cannot be controlled by players 1 &lt;&lt; 46 FLAG_NO_QUERY Hide from query results 1 &lt;&lt; 47 FLAG_KNOCKED_BACK Strong knockback: Forcefy moved in a specified direction for a short duration 1 &lt;&lt; 48 FLAG_APPLY_IMPACT_DAMAGE Inflicts damage upon colliding with enemies, takes damage when colliding with walls 1 &lt;&lt; 49 FLAG_ICE_FROZEN Frozen solid 1 &lt;&lt; 50 FLAG_ICE Flagged to become frozen on death 1 &lt;&lt; 51 FLAG_MAGNETIZED Magnetized: Attracts nearby enemies, projectiles and pickups 1 &lt;&lt; 52 FLAG_BAITED Baited: Is targeted by nearby enemies 1 &lt;&lt; 53 FLAG_KILLSWITCH Killed by a killswitch 1 &lt;&lt; 54 FLAG_WEAKNESS Weakness effect from Reverse Strength 1 &lt;&lt; 55 FLAG_EXTRA_GORE Spawns more gibs on death 1 &lt;&lt; 56 FLAG_BRIMSTONE_MARKED Marked by Azazel B, takes extra damage from Brimstone attacks 1 &lt;&lt; 57 FLAG_HELD Picked up by a player 1 &lt;&lt; 58 FLAG_THROWN Thrown by a player 1 &lt;&lt; 59 FLAG_FRIENDLY_BALL Used to detect enemies spawned by Friendly Ball","tags":["Enum"]},{"location":"enums/EntityGridCollisionClass.html","title":"Enum \"EntityGridCollisionClass\"","text":"DLC Value Enumerator Comment 0 GRIDCOLL_NONE 1 GRIDCOLL_WALLS_X only collide with vertical walls 2 GRIDCOLL_WALLS_Y only collide with horizontal walls 3 GRIDCOLL_WALLS only collide with walls 4 GRIDCOLL_BULLET detect collision with solids (no pits), don't correct position 5 GRIDCOLL_GROUND collide with all grid entities (rocks, pits, ..), correct position 6 GRIDCOLL_NOPITS collide with all grid entities except pits and correct position 7 GRIDCOLL_PITSONLY moving inside a pit, collide with everything else, correct position","tags":["Enum"]},{"location":"enums/EntityPartition.html","title":"Enum \"EntityPartition\"","text":"Bitset Calculator DLC Value Enumerator Comment 1 &lt;&lt; 0 FAMILIAR 1 &lt;&lt; 1 BULLET 1 &lt;&lt; 2 TEAR 1 &lt;&lt; 3 ENEMY 1 &lt;&lt; 4 PICKUP 1 &lt;&lt; 5 PLAYER 1 &lt;&lt; 6 EFFECT {: .rep .tooltip .badge }BUG: This flag currently does not work!","tags":["Enum"]},{"location":"enums/EntityType.html","title":"Enum \"EntityType\"","text":"DLC Value Enumerator Comment 0 ENTITY_NULL 1 ENTITY_PLAYER 1 player 2 ENTITY_TEAR 2 tear projectile 3 ENTITY_FAMILIAR 3 familiar 4 ENTITY_BOMB 4 bomb drop (ab+: ENTITY_BOMBDROP) 5 ENTITY_PICKUP 5 pickup item 6 ENTITY_SLOT 6 slot machine 7 ENTITY_LASER 7 laser beam 8 ENTITY_KNIFE 8 mom's knife 9 ENTITY_PROJECTILE 9 blood projectile 10 ENTITY_GAPER 10 enemy: Gaper 11 ENTITY_GUSHER 11 enemy: Gusher 12 ENTITY_HORF 12 enemy: Horf 13 ENTITY_FLY 13 enemy: Fly 14 ENTITY_POOTER 14 enemy: Pooter 15 ENTITY_CLOTTY 15 enemy: Clotty 16 ENTITY_MULLIGAN 16 enemy: Mulligan 17 ENTITY_SHOPKEEPER 18 ENTITY_ATTACKFLY 18 enemy: Attack Fly 19 ENTITY_LARRYJR 19 boss: Larry Jr./Hollow 20 ENTITY_MONSTRO 20 boss: Monstro 21 ENTITY_MAGGOT 22 ENTITY_HIVE 23 ENTITY_CHARGER 24 ENTITY_GLOBIN 25 ENTITY_BOOMFLY 26 ENTITY_MAW 27 ENTITY_HOST 28 ENTITY_CHUB 29 ENTITY_HOPPER 29 enemy: Hopper 30 ENTITY_BOIL 30 enemy: Boil, variants: 1 - Gut, 2 - Sack 31 ENTITY_SPITTY (ab+: ENTITY_SPITY) 32 ENTITY_BRAIN 33 ENTITY_FIREPLACE 34 ENTITY_LEAPER 35 ENTITY_MRMAW 36 ENTITY_GURDY 38 ENTITY_BABY 39 ENTITY_VIS 40 ENTITY_GUTS 41 ENTITY_KNIGHT 42 ENTITY_STONEHEAD 43 ENTITY_MONSTRO2 44 ENTITY_POKY 45 ENTITY_MOM 46 ENTITY_SLOTH 46 miniboss: Sloth 47 ENTITY_LUST 47 miniboss: Lust 48 ENTITY_WRATH 48 miniboss: Wrath 49 ENTITY_GLUTTONY 49 miniboss: Gluttony 50 ENTITY_GREED 50 miniboss: Greed 51 ENTITY_ENVY 51 miniboss: Envy 52 ENTITY_PRIDE 52 miniboss: Pride 53 ENTITY_DOPLE 54 ENTITY_FLAMINGHOPPER 54 enemy: Flaming Hopper 55 ENTITY_LEECH 56 ENTITY_LUMP 57 ENTITY_MEMBRAIN 57 enemy: Membrain and Mama Guts 58 ENTITY_PARA_BITE 59 ENTITY_FRED 60 ENTITY_EYE 61 ENTITY_SUCKER 61 enemy: Sucker 62 ENTITY_PIN 62 boss: Pin 63 ENTITY_FAMINE 64 ENTITY_PESTILENCE 65 ENTITY_WAR variant 1: Conquest 66 ENTITY_DEATH 67 ENTITY_DUKE 67 boss: Duke of Flies/Husk 68 ENTITY_PEEP 69 ENTITY_LOKI 71 ENTITY_FISTULA_BIG 72 ENTITY_FISTULA_MEDIUM 73 ENTITY_FISTULA_SMALL 74 ENTITY_BLASTOCYST_BIG 74 boss: Blastocyst 75 ENTITY_BLASTOCYST_MEDIUM 76 ENTITY_BLASTOCYST_SMALL 77 ENTITY_EMBRYO 78 ENTITY_MOMS_HEART 79 ENTITY_GEMINI 79 boss: Gemini 80 ENTITY_MOTER 80 enemy: Moter 81 ENTITY_FALLEN variant 1: Krampus 82 ENTITY_HEADLESS_HORSEMAN Headless Horseman 83 ENTITY_HORSEMAN_HEAD Head for Headless Horseman 84 ENTITY_SATAN 85 ENTITY_SPIDER 85 enemy: Spider 86 ENTITY_KEEPER 87 ENTITY_GURGLE 88 ENTITY_WALKINGBOIL ai for WalkingBoil, WalkingGut and WalkingSack 89 ENTITY_BUTTLICKER 90 ENTITY_HANGER 90 enemy: Hanger 91 ENTITY_SWARMER 92 ENTITY_HEART 93 ENTITY_MASK 94 ENTITY_BIGSPIDER 96 ENTITY_ETERNALFLY 96 enemy: Eternal Fly 97 ENTITY_MASK_OF_INFAMY 98 ENTITY_HEART_OF_INFAMY 99 ENTITY_GURDY_JR 99 enemy: Gurdy Jr. 100 ENTITY_WIDOW 101 ENTITY_DADDYLONGLEGS 102 ENTITY_ISAAC 201 ENTITY_STONE_EYE Rebirth enemies 202 ENTITY_CONSTANT_STONE_SHOOTER 203 ENTITY_BRIMSTONE_HEAD 204 ENTITY_MOBILE_HOST 205 ENTITY_NEST 206 ENTITY_BABY_LONG_LEGS 207 ENTITY_CRAZY_LONG_LEGS 208 ENTITY_FATTY 209 ENTITY_FAT_SACK 210 ENTITY_BLUBBER 211 ENTITY_HALF_SACK 212 ENTITY_DEATHS_HEAD 213 ENTITY_MOMS_HAND 214 ENTITY_FLY_L2 215 ENTITY_SPIDER_L2 216 ENTITY_SWINGER 217 ENTITY_DIP 218 ENTITY_WALL_HUGGER 219 ENTITY_WIZOOB 220 ENTITY_SQUIRT 221 ENTITY_COD_WORM 222 ENTITY_RING_OF_FLIES 223 ENTITY_DINGA 224 ENTITY_OOB 225 ENTITY_BLACK_MAW 226 ENTITY_SKINNY 227 ENTITY_BONY 228 ENTITY_HOMUNCULUS 229 ENTITY_TUMOR 230 ENTITY_CAMILLO_JR 231 ENTITY_NERVE_ENDING 232 ENTITY_SKINBALL 233 ENTITY_MOM_HEAD 234 ENTITY_ONE_TOOTH 235 ENTITY_GAPING_MAW 236 ENTITY_BROKEN_GAPING_MAW 237 ENTITY_GURGLING 238 ENTITY_SPLASHER 239 ENTITY_GRUB 240 ENTITY_WALL_CREEP 241 ENTITY_RAGE_CREEP 242 ENTITY_BLIND_CREEP 243 ENTITY_CONJOINED_SPITTY 244 ENTITY_ROUND_WORM 245 ENTITY_POOP 246 ENTITY_RAGLING 247 ENTITY_FLESH_MOBILE_HOST 248 ENTITY_PSY_HORF 249 ENTITY_FULL_FLY 250 ENTITY_TICKING_SPIDER 251 ENTITY_BEGOTTEN 252 ENTITY_NULLS 253 ENTITY_PSY_TUMOR 254 ENTITY_FLOATING_KNIGHT 255 ENTITY_NIGHT_CRAWLER 256 ENTITY_DART_FLY Afterbirth 257 ENTITY_CONJOINED_FATTY 258 ENTITY_FAT_BAT 259 ENTITY_IMP 260 ENTITY_THE_HAUNT Rebirth bosses 261 ENTITY_DINGLE 262 ENTITY_MEGA_MAW 263 ENTITY_GATE 264 ENTITY_MEGA_FATTY 265 ENTITY_CAGE 266 ENTITY_MAMA_GURDY 267 ENTITY_DARK_ONE 268 ENTITY_ADVERSARY 269 ENTITY_POLYCEPHALUS 270 ENTITY_MR_FRED 271 ENTITY_URIEL 272 ENTITY_GABRIEL 273 ENTITY_THE_LAMB 274 ENTITY_MEGA_SATAN 275 ENTITY_MEGA_SATAN_2 276 ENTITY_ROUNDY Afterbirth #2 277 ENTITY_BLACK_BONY 278 ENTITY_BLACK_GLOBIN 279 ENTITY_BLACK_GLOBIN_HEAD 280 ENTITY_BLACK_GLOBIN_BODY 281 ENTITY_SWARM 282 ENTITY_MEGA_CLOTTY 283 ENTITY_BONE_KNIGHT 284 ENTITY_CYCLOPIA 285 ENTITY_RED_GHOST 286 ENTITY_FLESH_DEATHS_HEAD 287 ENTITY_MOMS_DEAD_HAND 288 ENTITY_DUKIE 289 ENTITY_ULCER 290 ENTITY_MEATBALL 291 ENTITY_PITFALL 292 ENTITY_MOVABLE_TNT 293 ENTITY_ULTRA_COIN 294 ENTITY_ULTRA_DOOR 295 ENTITY_CORN_MINE 296 ENTITY_HUSH_FLY 297 ENTITY_HUSH_GAPER 298 ENTITY_HUSH_BOIL 299 ENTITY_GREED_GAPER 300 ENTITY_MUSHROOM 301 ENTITY_POISON_MIND 302 ENTITY_STONEY 303 ENTITY_BLISTER 304 ENTITY_THE_THING 305 ENTITY_MINISTRO 306 ENTITY_PORTAL 307 ENTITY_TARBOY Booster enemies 308 ENTITY_FISTULOID 309 ENTITY_GUSH 310 ENTITY_LEPER 311 ENTITY_MR_MINE 401 ENTITY_STAIN Afterbirth bosses 402 ENTITY_BROWNIE 403 ENTITY_FORSAKEN 404 ENTITY_LITTLE_HORN 405 ENTITY_RAG_MAN 406 ENTITY_ULTRA_GREED 407 ENTITY_HUSH 408 ENTITY_HUSH_SKINLESS 409 ENTITY_RAG_MEGA 410 ENTITY_SISTERS_VIS 411 ENTITY_BIG_HORN 412 ENTITY_DELIRIUM 413 ENTITY_MATRIARCH 801 ENTITY_BONE_WORM 802 ENTITY_BLOOD_PUPPY 804 ENTITY_QUAKE_GRIMACE 805 ENTITY_BISHOP 806 ENTITY_BUBBLES 807 ENTITY_WRAITH 808 ENTITY_WILLO 809 ENTITY_BOMB_GRIMACE 810 ENTITY_SMALL_LEECH 811 ENTITY_DEEP_GAPER 812 ENTITY_SUB_HORF 813 ENTITY_BLURB 814 ENTITY_STRIDER 815 ENTITY_FISSURE 816 ENTITY_POLTY 817 ENTITY_PREY 818 ENTITY_ROCK_SPIDER 819 ENTITY_FLY_BOMB 820 ENTITY_DANNY 821 ENTITY_BLASTER 822 ENTITY_BOUNCER 823 ENTITY_QUAKEY 824 ENTITY_GYRO 825 ENTITY_FIRE_WORM 826 ENTITY_HARDY 827 ENTITY_FACELESS 828 ENTITY_NECRO 829 ENTITY_MOLE 830 ENTITY_BIG_BONY 831 ENTITY_GUTTED_FATTY 832 ENTITY_EXORCIST 833 ENTITY_CANDLER 834 ENTITY_WHIPPER 835 ENTITY_PEEPER_FATTY 836 ENTITY_VIS_VERSA 837 ENTITY_HENRY 838 ENTITY_WILLO_L2 840 ENTITY_PON 841 ENTITY_REVENANT 844 ENTITY_BOMBGAGGER 850 ENTITY_GAPER_L2 851 ENTITY_TWITCHY 852 ENTITY_SPIKEBALL 853 ENTITY_SMALL_MAGGOT 854 ENTITY_ADULT_LEECH 855 ENTITY_CHARGER_L2 856 ENTITY_GASBAG 857 ENTITY_COHORT 859 ENTITY_FLOATING_HOST 860 ENTITY_UNBORN 861 ENTITY_PUSTULE 862 ENTITY_CYST 863 ENTITY_MORNINGSTAR 864 ENTITY_MOCKULUS 865 ENTITY_EVIS 866 ENTITY_DARK_ESAU 867 ENTITY_MOTHERS_SHADOW 868 ENTITY_ARMYFLY 869 ENTITY_MIGRAINE 870 ENTITY_DRIP 871 ENTITY_SPLURT 872 ENTITY_CLOGGY 873 ENTITY_FLY_TRAP 874 ENTITY_FARTIGAN 875 ENTITY_POOT_MINE 876 ENTITY_DUMP 877 ENTITY_GRUDGE 878 ENTITY_BUTT_SLICKER 879 ENTITY_BLOATY 880 ENTITY_FLESH_MAIDEN 881 ENTITY_NEEDLE 882 ENTITY_DUST 883 ENTITY_BABY_BEGOTTEN 884 ENTITY_SWARM_SPIDER 885 ENTITY_CULTIST 886 ENTITY_VIS_FATTY 887 ENTITY_DUSTY_DEATHS_HEAD 888 ENTITY_SHADY 889 ENTITY_CLICKETY_CLACK 890 ENTITY_MAZE_ROAMER 891 ENTITY_GOAT 892 ENTITY_POOFER 893 ENTITY_BALL_AND_CHAIN 900 ENTITY_REAP_CREEP 901 ENTITY_LIL_BLUB 902 ENTITY_RAINMAKER 903 ENTITY_VISAGE 904 ENTITY_SIREN 905 ENTITY_HERETIC 906 ENTITY_HORNFEL 907 ENTITY_GIDEON 908 ENTITY_BABY_PLUM 909 ENTITY_SCOURGE 910 ENTITY_CHIMERA 911 ENTITY_ROTGUT 912 ENTITY_MOTHER 913 ENTITY_MIN_MIN 914 ENTITY_CLOG 915 ENTITY_SINGE 916 ENTITY_BUMBINO 917 ENTITY_COLOSTOMIA 918 ENTITY_TURDLET 919 ENTITY_RAGLICH currently unused 920 ENTITY_HORNY_BOYS 921 ENTITY_CLUTCH 922 ENTITY_CADAVRA 950 ENTITY_DOGMA 951 ENTITY_BEAST 960 ENTITY_GENERIC_PROP 963 ENTITY_FROZEN_ENEMY 964 ENTITY_DUMMY 965 ENTITY_MINECART 966 ENTITY_SIREN_HELPER 967 ENTITY_HORNFEL_DOOR 969 ENTITY_TRIGGER_OUTPUT 970 ENTITY_ENVIRONMENT 1000 ENTITY_EFFECT 1000 special effects 9001 ENTITY_TEXT","tags":["Enum"]},{"location":"enums/FamiliarVariant.html","title":"Enum \"FamiliarVariant\"","text":"DLC Value Enumerator Comment 0 FAMILIAR_NULL 1 BROTHER_BOBBY 2 DEMON_BABY 3 LITTLE_CHUBBY 4 LITTLE_GISH 5 LITTLE_STEVEN 6 ROBO_BABY 7 SISTER_MAGGY 8 ABEL 9 GHOST_BABY 10 HARLEQUIN_BABY 11 RAINBOW_BABY 12 ISAACS_HEAD 13 BLUE_BABY_SOUL 14 DEAD_BIRD 15 EVES_BIRD_FOOT 16 DADDY_LONGLEGS 17 PEEPER 20 BOMB_BAG 21 SACK_OF_PENNIES 22 LITTLE_CHAD 23 RELIC 24 BUM_FRIEND 25 HOLY_WATER 26 KEY_PIECE_1 27 KEY_PIECE_2 28 KEY_FULL 30 FOREVER_ALONE 31 DISTANT_ADMIRATION 32 GUARDIAN_ANGEL 33 FLY_ORBITAL 35 SACRIFICIAL_DAGGER 40 DEAD_CAT 41 ONE_UP 42 GUPPYS_HAIRBALL 43 BLUE_FLY 44 CUBE_OF_MEAT_1 45 CUBE_OF_MEAT_2 46 CUBE_OF_MEAT_3 47 CUBE_OF_MEAT_4 48 ISAACS_BODY 50 SMART_FLY 51 DRY_BABY 52 JUICY_SACK 53 ROBO_BABY_2 54 ROTTEN_BABY 55 HEADLESS_BABY 56 LEECH 57 MYSTERY_SACK 58 BBF 59 BOBS_BRAIN 60 BEST_BUD 61 LIL_BRIMSTONE 62 ISAACS_HEART 63 LIL_HAUNT 64 DARK_BUM 65 BIG_FAN 66 SISSY_LONGLEGS 67 PUNCHING_BAG 68 GUILLOTINE 69 BALL_OF_BANDAGES_1 70 BALL_OF_BANDAGES_2 71 BALL_OF_BANDAGES_3 72 BALL_OF_BANDAGES_4 73 BLUE_SPIDER 74 MONGO_BABY 75 SAMSONS_CHAINS 76 CAINS_OTHER_EYE 77 BLUEBABYS_ONLY_FRIEND 78 SCISSORS 79 GEMINI 80 INCUBUS 81 FATES_REWARD 82 LIL_CHEST 83 SWORN_PROTECTOR 84 FRIEND_ZONE 85 LOST_FLY 86 CHARGED_BABY 87 LIL_GURDY 88 BUMBO 89 CENSER 90 KEY_BUM 91 RUNE_BAG 92 SERAPHIM 93 GB_BUG 94 SPIDER_MOD 95 FARTING_BABY 96 SUCCUBUS 97 LIL_LOKI 98 OBSESSED_FAN 99 PAPA_FLY 100 MILK 101 MULTIDIMENSIONAL_BABY 102 SUPER_BUM 103 TONSIL 104 BIG_CHUBBY 105 DEPRESSION 106 SHADE 107 HUSHY 108 LIL_MONSTRO 109 KING_BABY 110 FINGER 111 YO_LISTEN 112 ACID_BABY 113 SPIDER_BABY 114 SACK_OF_SACKS 115 BROWN_NUGGET_POOTER 116 BLOODSHOT_EYE 117 MOMS_RAZOR 118 ANGRY_FLY Booster Pack #1 119 BUDDY_IN_A_BOX 120 SPRINKLER 121 LEPROSY (ab+: LEPROCY) 122 LIL_HARBINGERS Booster Pack #3 123 ANGELIC_PRISM 124 MYSTERY_EGG Booster Pack #5 125 LIL_SPEWER 126 SLIPPED_RIB 127 POINTY_RIB 128 BONE_ORBITAL 129 HALLOWED_GROUND 130 JAW_BONE 200 INTRUDER 201 DIP 202 DAMOCLES 203 BLOOD_OATH 204 PSY_FLY 205 MENORAH 206 WISP 207 PEEPER_2 208 BOILED_BABY 209 FREEZER_BABY 210 BIRD_CAGE 211 LOST_SOUL 212 LIL_DUMPY 213 KNIFE_PIECE_1 214 KNIFE_PIECE_2 216 TINYTOMA 217 TINYTOMA_2 218 BOT_FLY 220 SIREN_MINION 221 PASCHAL_CANDLE 222 STITCHES 223 KNIFE_FULL 224 BABY_PLUM 225 FRUITY_PLUM 226 SPIN_TO_WIN 228 MINISAAC 229 SWARM_FLY_ORBITAL 230 LIL_ABADDON 231 ABYSS_LOCUST 232 LIL_PORTAL 233 WORM_FRIEND 234 BONE_SPUR 235 TWISTED_BABY 236 STAR_OF_BETHLEHEM 237 ITEM_WISP 238 BLOOD_BABY 239 CUBE_BABY 240 UMBILICAL_BABY 241 BLOOD_PUPPY 242 VANISHING_TWIN 243 DECAP_ATTACK 900 FORGOTTEN_BODY","tags":["Enum"]},{"location":"enums/GameStateFlag.html","title":"Enum \"GameStateFlag\"","text":"DLC Value Enumerator Comment 0 STATE_FAMINE_SPAWNED 1 STATE_PESTILENCE_SPAWNED obsolete with Rep 2 STATE_WAR_SPAWNED obsolete with Rep 3 STATE_DEATH_SPAWNED obsolete with Rep 4 STATE_BOSSPOOL_SWITCHED 5 STATE_DEVILROOM_SPAWNED 6 STATE_DEVILROOM_VISITED 7 STATE_BOOK_REVELATIONS_USED 8 STATE_BOOK_PICKED_UP 9 STATE_WRATH_SPAWNED 10 STATE_GLUTTONY_SPAWNED 11 STATE_LUST_SPAWNED 12 STATE_SLOTH_SPAWNED 13 STATE_ENVY_SPAWNED 14 STATE_PRIDE_SPAWNED 15 STATE_GREED_SPAWNED 16 STATE_SUPERGREED_SPAWNED 17 STATE_DONATION_SLOT_BROKEN 18 STATE_DONATION_SLOT_JAMMED 19 STATE_HEAVEN_PATH 20 STATE_REBIRTH_BOSS_SWITCHED obsolete with Rep 21 STATE_HAUNT_SELECTED obsolete with Rep 22 STATE_ADVERSARY_SELECTED obsolete with Rep 23 STATE_MR_FRED_SELECTED obsolete with Rep 24 STATE_MAMA_GURDY_SELECTED obsolete with Rep 25 STATE_URIEL_SPAWNED 26 STATE_GABRIEL_SPAWNED 27 STATE_FALLEN_SPAWNED 28 STATE_HEADLESS_HORSEMAN_SPAWNED obsolete with Rep 29 STATE_KRAMPUS_SPAWNED 30 STATE_DONATION_SLOT_BLOWN 31 STATE_SHOPKEEPER_KILLED 32 STATE_ULTRAPRIDE_SPAWNED 33 STATE_BOSSRUSH_DONE 34 STATE_GREED_SLOT_JAMMED 35 STATE_AFTERBIRTH_BOSS_SWITCHED obsolete with Rep 36 STATE_BROWNIE_SELECTED obsolete with Rep 37 STATE_SUPERBUM_APPEARED 38 STATE_BOSSRUSH_DOOR_SPAWNED 39 STATE_BLUEWOMB_DOOR_SPAWNED 40 STATE_BLUEWOMB_DONE 41 STATE_HEART_BOMB_COIN_PICKED 42 STATE_ABPLUS_BOSS_SWITCHED obsolete with Rep 43 STATE_SISTERS_VIS_SELECTED obsolete with Rep 43 STATE_MAX_COINS_OBTAINED set when reaching 99 coins, used to check for the Golden Razor achievement 44 STATE_SECRET_PATH set when entering a trapdoor that leads to the alternate path 45 STATE_PERFECTION_SPAWNED set when Perfection has dropped from a boss 46 STATE_MAUSOLEUM_HEART_KILLED set when Mom's Heart has been killed in the Mausoleum 47 STATE_BACKWARDS_PATH_INIT set when entering Mausoleum/Gehenna II through the photo door, causes Dad's Note to spawn instead of the Mom boss room 48 STATE_BACKWARDS_PATH set during the Ascent 49 NUM_STATE_FLAGS","tags":["Enum"]},{"location":"enums/GridCollisionClass.html","title":"Enum \"GridCollisionClass\"","text":"DLC Value Enumerator Comment 0 COLLISION_NONE 1 COLLISION_PIT 2 COLLISION_OBJECT 3 COLLISION_SOLID 4 COLLISION_WALL 5 COLLISION_WALL_EXCEPT_PLAYER","tags":["Enum"]},{"location":"enums/GridEntityType.html","title":"Enum \"GridEntityType\"","text":"DLC Value Enumerator Comment 0 GRID_NULL 1 GRID_DECORATION 2 GRID_ROCK 3 GRID_ROCKB A block. 4 GRID_ROCKT A tinted rock. 5 GRID_ROCK_BOMB 6 GRID_ROCK_ALT A pot, mushroom, or skull, depending on the stage and room type. 7 GRID_PIT 8 GRID_SPIKES 9 GRID_SPIKES_ONOFF 10 GRID_SPIDERWEB 11 GRID_LOCK A key block. 12 GRID_TNT 13 GRID_FIREPLACE not used! 14 GRID_POOP 15 GRID_WALL 16 GRID_DOOR 17 GRID_TRAPDOOR 18 GRID_STAIRS 19 GRID_GRAVITY 20 GRID_PRESSURE_PLATE 21 GRID_STATUE 22 GRID_ROCK_SS A super tinted rock that yields double rewards. 23 GRID_TELEPORTER 24 GRID_PILLAR 25 GRID_ROCK_SPIKED 26 GRID_ROCK_ALT2 A tinted skull (that always drops a Fool card). 27 GRID_ROCK_GOLD","tags":["Enum"]},{"location":"enums/GridRooms.html","title":"Enum \"GridRooms\"","text":"","tags":["Enum"]},{"location":"enums/GridRooms.html#example","title":"Example","text":"Example Code <p>This code checks if the player is inside an \"I Am Error\" room.</p> <pre><code>local level = Game():GetLevel()\nlocal curRoom = level:GetCurrentRoomDesc()\nif curRoom.GridIndex == GridRooms.ROOM_ERROR_IDX then\n  print(\"Success\")\nend\n</code></pre> DLC Value Enumerator Comment -99999 NO_ROOM_IDX -1 ROOM_DEVIL_IDX -2 ROOM_ERROR_IDX -3 ROOM_DEBUG_IDX Rooms visited via <code>goto</code> command -4 ROOM_DUNGEON_IDX -5 ROOM_BOSSRUSH_IDX -6 ROOM_BLACK_MARKET_IDX -7 ROOM_MEGA_SATAN_IDX -8 ROOM_BLUE_WOOM_IDX -9 ROOM_THE_VOID_IDX -10 ROOM_SECRET_EXIT_IDX -11 ROOM_GIDEON_DUNGEON_IDX -12 ROOM_GENESIS_IDX -13 ROOM_SECRET_SHOP_IDX -14 ROOM_ROTGUT_DUNGEON1_IDX -15 ROOM_ROTGUT_DUNGEON2_IDX -16 ROOM_BLUE_ROOM_IDX -17 ROOM_EXTRA_BOSS_IDX -18 ROOM_ANGEL_SHOP_IDX Stairway room -100 ROOM_MIRROR_IDX Not real room index, doors that point to this have special behavior -101 ROOM_MINESHAFT_IDX Not real room index, doors that point to this have special behavior 18 NUM_OFF_GRID_ROOMS 507 MAX_GRID_ROOMS 525 MAX_ROOMS","tags":["Enum"]},{"location":"enums/HeartSubType.html","title":"Enum \"HeartSubType\"","text":"DLC Value Enumerator Comment 1 HEART_FULL 2 HEART_HALF 3 HEART_SOUL 4 HEART_ETERNAL 5 HEART_DOUBLEPACK 6 HEART_BLACK 7 HEART_GOLDEN 8 HEART_HALF_SOUL 9 HEART_SCARED 10 HEART_BLENDED 11 HEART_BONE 12 HEART_ROTTEN","tags":["Enum"]},{"location":"enums/InputHook.html","title":"Enum \"InputHook\"","text":"DLC Value Enumerator Comment 0 IS_ACTION_PRESSED 1 IS_ACTION_TRIGGERED 2 GET_ACTION_VALUE","tags":["Enum"]},{"location":"enums/ItemConfig.html","title":"Enum \"ItemConfig\"","text":"<p>The \"ItemConfig\" Class has separate Enums that are used for special information handling.</p> <p>Even though they have different prefixes, all enums on this page are part of the \"ItemConfig\" enum.</p> Example usage: <pre><code>local sadOnionConfig = Isaac.GetItemConfig():GetCollectible(1)\nif sadOnionConfig.Tags &amp; ItemConfig.TAG_SUMMONABLE == ItemConfig.TAG_SUMMONABLE then\n    print(\"This item has the tag 'summonable'\")\nend\n</code></pre> DLC Value Enumerator Comment 0 CHARGE_NORMAL 1 CHARGE_TIMED 2 CHARGE_SPECIAL DLC Value Enumerator Comment 0 CARDTYPE_TAROT Tarot cards 1 CARDTYPE_SUIT Standard playing cards (twos, aces and Joker, does not include Suicide King, Rules Card or Queen of Hearts) 2 CARDTYPE_RUNE Runes 3 CARDTYPE_SPECIAL Special cards (anything that doesn't fall in the above categories excludes non-cards such as Dice Shard, see below) 4 CARDTYPE_SPECIAL_OBJECT Special pocket items that do not qualify as \"cards\" 5 CARDTYPE_TAROT_REVERSE Reversed tarot cards DLC Value Enumerator Comment 1 &lt;&lt; 0 TAG_DEAD Dead things (for the Parasite unlock) 1 &lt;&lt; 1 TAG_SYRINGE Syringes (for Little Baggy and the Spun! transformation) 1 &lt;&lt; 2 TAG_MOM Mom's things (for Mom's Contact and the Yes Mother? transformation) 1 &lt;&lt; 3 TAG_TECH Technology items (for the Technology Zero unlock) 1 &lt;&lt; 4 TAG_BATTERY Battery items (for the Jumper Cables unlock) 1 &lt;&lt; 5 TAG_GUPPY Guppy items (Guppy transformation) 1 &lt;&lt; 6 TAG_FLY Fly items (Beelzebub transformation) 1 &lt;&lt; 7 TAG_BOB Bob items (Bob transformation) 1 &lt;&lt; 8 TAG_MUSHROOM Mushroom items (Fun Guy transformation) 1 &lt;&lt; 9 TAG_BABY Baby items (Conjoined transformation) 1 &lt;&lt; 10 TAG_ANGEL Angel items (Seraphim transformation) 1 &lt;&lt; 11 TAG_DEVIL Devil items (Leviathan transformation) 1 &lt;&lt; 12 TAG_POOP Poop items (Oh Shit transformation) 1 &lt;&lt; 13 TAG_BOOK Book items (Book Worm transformation) 1 &lt;&lt; 14 TAG_SPIDER Spider items (Spider Baby transformation) 1 &lt;&lt; 15 TAG_QUEST Quest item (cannot be rerolled or randomly obtained) 1 &lt;&lt; 16 TAG_MONSTER_MANUAL Can be spawned by Monster Manual 1 &lt;&lt; 17 TAG_NO_GREED Cannot appear in Greed Mode 1 &lt;&lt; 18 TAG_FOOD Food item (for Binge Eater) 1 &lt;&lt; 19 TAG_TEARS_UP Tears up item (for Lachryphagy unlock detection) 1 &lt;&lt; 20 TAG_OFFENSIVE Whitelisted item for Lost B 1 &lt;&lt; 21 TAG_NO_KEEPER Blacklisted item for Keeper/Keeper B 1 &lt;&lt; 22 TAG_NO_LOST_BR Blacklisted item for Lost's Birthright 1 &lt;&lt; 23 TAG_STARS Star themed items (for the Planetarium unlock) 1 &lt;&lt; 24 TAG_SUMMONABLE Summonable items (for Bethany B) 1 &lt;&lt; 25 TAG_NO_CANTRIP Can't be obtained in Cantripped challenge 1 &lt;&lt; 26 TAG_WISP Active items that have wisps attached to them (automatically set) 1 &lt;&lt; 27 TAG_UNIQUE_FAMILIAR Unique familiars that cannot be duplicated 1 &lt;&lt; 28 TAG_NO_CHALLENGE Items that shouldn't be obtainable in challenges 1 &lt;&lt; 29 TAG_NO_DAILY Items that shouldn't be obtainable in daily runs 1 &lt;&lt; 30 TAG_LAZ_SHARED Items that should be shared between Tainted Lazarus' forms 1 &lt;&lt; 31 TAG_LAZ_SHARED_GLOBAL Items that should be shared between Tainted Lazarus' forms but only through global checks (such as PlayerManager::HasCollectible) 1 &lt;&lt; 32 TAG_NO_EDEN Items that can't be randomly rolled","tags":["Enum"]},{"location":"enums/ItemPoolType.html","title":"Enum \"ItemPoolType\"","text":"DLC Value Enumerator Name in itempool.xml Comment -1 POOL_NULL 0 POOL_TREASURE treasure 1 POOL_SHOP shop 2 POOL_BOSS boss 3 POOL_DEVIL devil 4 POOL_ANGEL angel 5 POOL_SECRET secret 6 POOL_LIBRARY library 7 POOL_SHELL_GAME unused (for now) (ab+: POOL_CHALLENGE) 8 POOL_GOLDEN_CHEST goldenChest 9 POOL_RED_CHEST redChest 10 POOL_BEGGAR beggar 11 POOL_DEMON_BEGGAR demonBeggar 12 POOL_CURSE curse 13 POOL_KEY_MASTER keyMaster 14 POOL_BATTERY_BUM batteryBum (ab+: POOL_BOSSRUSH) 15 POOL_MOMS_CHEST momsChest (ab+: POOL_DUNGEON) 16 POOL_GREED_TREASURE greedTreasure (legacy: POOL_GREED_TREASUREL) 17 POOL_GREED_BOSS greedBoss 18 POOL_GREED_SHOP greedShop 19 POOL_GREED_DEVIL greedDevil 20 POOL_GREED_ANGEL greedAngel 21 POOL_GREED_CURSE greedCurse 22 POOL_GREED_SECRET greedSecret 23 POOL_CRANE_GAME craneGame (ab+: POOL_GREED_LIBRARY) 24 POOL_ULTRA_SECRET ultraSecret (legacy: POOL_24)  (ab+: POOL_GREED_GOLDEN_CHEST) 25 POOL_BOMB_BUM bombBum 26 POOL_PLANETARIUM planetarium 27 POOL_OLD_CHEST oldChest 28 POOL_BABY_SHOP babyShop 29 POOL_WOODEN_CHEST woodenChest 30 POOL_ROTTEN_BEGGAR rottenBeggar 31 NUM_ITEMPOOLS","tags":["Enum"]},{"location":"enums/ItemType.html","title":"Enum \"ItemType\"","text":"DLC Value Enumerator Comment 0 ITEM_NULL 1 ITEM_PASSIVE 2 ITEM_TRINKET 3 ITEM_ACTIVE 4 ITEM_FAMILIAR","tags":["Enum"]},{"location":"enums/KeySubType.html","title":"Enum \"KeySubType\"","text":"DLC Value Enumerator Comment 1 KEY_NORMAL 2 KEY_GOLDEN 3 KEY_DOUBLEPACK 4 KEY_CHARGED","tags":["Enum"]},{"location":"enums/Keyboard.html","title":"Enum \"Keyboard\"","text":"DLC Value Enumerator Comment 32 KEY_SPACE 39 KEY_APOSTROPHE 44 KEY_COMMA 45 KEY_MINUS 46 KEY_PERIOD 47 KEY_SLASH 48 KEY_0 49 KEY_1 50 KEY_2 51 KEY_3 52 KEY_4 53 KEY_5 54 KEY_6 55 KEY_7 56 KEY_8 57 KEY_9 59 KEY_SEMICOLON 61 KEY_EQUAL 65 KEY_A 66 KEY_B 67 KEY_C 68 KEY_D 69 KEY_E 70 KEY_F 71 KEY_G 72 KEY_H 73 KEY_I 74 KEY_J 75 KEY_K 76 KEY_L 77 KEY_M 78 KEY_N 79 KEY_O 80 KEY_P 81 KEY_Q 82 KEY_R 83 KEY_S 84 KEY_T 85 KEY_U 86 KEY_V 87 KEY_W 88 KEY_X 89 KEY_Y 90 KEY_Z 91 KEY_LEFT_BRACKET 92 KEY_BACKSLASH 93 KEY_RIGHT_BRACKET 96 KEY_GRAVE_ACCENT 161 KEY_WORLD_1 162 KEY_WORLD_2 256 KEY_ESCAPE 257 KEY_ENTER 258 KEY_TAB 259 KEY_BACKSPACE 260 KEY_INSERT 261 KEY_DELETE 262 KEY_RIGHT 263 KEY_LEFT 264 KEY_DOWN 265 KEY_UP 266 KEY_PAGE_UP 267 KEY_PAGE_DOWN 268 KEY_HOME 269 KEY_END 280 KEY_CAPS_LOCK 281 KEY_SCROLL_LOCK 282 KEY_NUM_LOCK 283 KEY_PRINT_SCREEN 284 KEY_PAUSE 290 KEY_F1 291 KEY_F2 292 KEY_F3 293 KEY_F4 294 KEY_F5 295 KEY_F6 296 KEY_F7 297 KEY_F8 298 KEY_F9 299 KEY_F10 300 KEY_F11 301 KEY_F12 302 KEY_F13 303 KEY_F14 304 KEY_F15 305 KEY_F16 306 KEY_F17 307 KEY_F18 308 KEY_F19 309 KEY_F20 310 KEY_F21 311 KEY_F22 312 KEY_F23 313 KEY_F24 314 KEY_F25 320 KEY_KP_0 321 KEY_KP_1 322 KEY_KP_2 323 KEY_KP_3 324 KEY_KP_4 325 KEY_KP_5 326 KEY_KP_6 327 KEY_KP_7 328 KEY_KP_8 329 KEY_KP_9 330 KEY_KP_DECIMAL 331 KEY_KP_DIVIDE 332 KEY_KP_MULTIPLY 333 KEY_KP_SUBTRACT 334 KEY_KP_ADD 335 KEY_KP_ENTER 336 KEY_KP_EQUAL 340 KEY_LEFT_SHIFT 341 KEY_LEFT_CONTROL 342 KEY_LEFT_ALT 343 KEY_LEFT_SUPER 344 KEY_RIGHT_SHIFT 345 KEY_RIGHT_CONTROL 346 KEY_RIGHT_ALT 347 KEY_RIGHT_SUPER 348 KEY_MENU","tags":["Enum"]},{"location":"enums/LaserOffset.html","title":"Enum \"LaserOffset\"","text":"DLC Value Enumerator Comment 0 LASER_TECH1_OFFSET 1 LASER_TECH2_OFFSET 2 LASER_TECH5_OFFSET 3 LASER_SHOOP_OFFSET 4 LASER_BRIMSTONE_OFFSET 5 LASER_MOMS_EYE_OFFSET 6 LASER_TRACTOR_BEAM_OFFSET","tags":["Enum"]},{"location":"enums/LaserSubType.html","title":"Enum \"LaserSubType\"","text":"DLC Value Enumerator Comment 0 LASER_SUBTYPE_LINEAR Typical laser that has a start and end point. 1 LASER_SUBTYPE_RING_LUDOVICO Controlled ring laser a la Tech+Ludovico, Brim+Ludovico 2 LASER_SUBTYPE_RING_PROJECTILE Ring laser that travels like a projectile (Technology X) 3 LASER_SUBTYPE_RING_FOLLOW_PARENT Ring lasers that encircle their parents (Maw of the Void) 4 LASER_SUBTYPE_NO_IMPACT For Technology Zero, doesn't create an impact","tags":["Enum"]},{"location":"enums/LaserVariant.html","title":"Enum \"LaserVariant\"","text":"DLC Value Enumerator Comment 0 LASER_NULL 1 THICK_RED 2 THIN_RED 3 SHOOP 4 PRIDE 5 LIGHT_BEAM 6 GIANT_RED 7 TRACTOR_BEAM 8 LIGHT_RING 9 BRIM_TECH 10 ELECTRIC 11 THICKER_RED 12 THICK_BROWN 13 BEAST 14 THICKER_BRIM_TECH 15 GIANT_BRIM_TECH","tags":["Enum"]},{"location":"enums/LevelCurse.html","title":"Enum \"LevelCurse\"","text":"Bitset Calculator DLC Value Enumerator Icon Comment 1 &lt;&lt; -1 CURSE_NONE 1 &lt;&lt; 0 CURSE_OF_DARKNESS 1 &lt;&lt; 1 CURSE_OF_LABYRINTH 1 &lt;&lt; 2 CURSE_OF_THE_LOST 1 &lt;&lt; 3 CURSE_OF_THE_UNKNOWN 1 &lt;&lt; 4 CURSE_OF_THE_CURSED 1 &lt;&lt; 5 CURSE_OF_MAZE 1 &lt;&lt; 6 CURSE_OF_BLIND 1 &lt;&lt; 7 CURSE_OF_GIANT Less rooms, all rooms are large and generated by merging existing rooms together (currently unused) 9 NUM_CURSES","tags":["Enum"]},{"location":"enums/LevelStage.html","title":"Enum \"LevelStage\"","text":"DLC Value Enumerator internal id possible stages Comment 0 STAGE_NULL 0 Special Rooms (Game crashes on entering this stage) 1 STAGE1_1 1 Basement 1, Cellar 1, Burning Basement 1, Downpour 1, Dross 1 2 STAGE1_2 2 Basement 2, Cellar 2, Burning Basement 2, Downpour 2, Dross 2 3 STAGE2_1 3 Caves 1, Catacombs 1, Flooded Caves 1, Mines 1, Ashpit 1 4 STAGE2_2 4 Caves 2, Catacombs 2, Flooded Caves 2, Mines 2, Ashpit 2 5 STAGE3_1 5 Depths 1, Necropolis 1, Dank Depths 1, Mausoleum 1, Gehenna 1 6 STAGE3_2 6 Depths 2, Necropolis 2, Dank Depths 2, Mausoleum 2, Gehenna 2 7 STAGE4_1 7 Womb 1, Utero 1, Scarred Womb 1, Corpse 1 8 STAGE4_2 8 Womb 2, Utero 2, Scarred Womb 2, Corpse 2 9 STAGE4_3 9 ??? (Blue Womb) 10 STAGE5 10 Sheol, Cathedral 11 STAGE6 11 Dark Room, Chest 12 STAGE7 12 The Void 13 STAGE8 13 Home 14 NUM_STAGES 14 (No actual Level, but can be visited ingame. it is a stage full of greed mode rooms, but every wave is its own room.) 1 STAGE1_GREED 1 Basement (Greed) 2 STAGE2_GREED 2 Caves (Greed) 3 STAGE3_GREED 3 Depths (Greed) 4 STAGE4_GREED 4 Womb (Greed) 5 STAGE5_GREED 5 Sheol (Greed) 6 STAGE6_GREED 6 The Shop (Greed) 7 STAGE7_GREED 7 Ultra Greed 7 NUM_BACKWARDS_STAGES","tags":["Enum"]},{"location":"enums/LevelStateFlag.html","title":"Enum \"LevelStateFlag\"","text":"DLC Value Enumerator Comment 0 STATE_BUM_KILLED 1 STATE_EVIL_BUM_KILLED 2 STATE_REDHEART_DAMAGED 3 STATE_BUM_LEFT 4 STATE_EVIL_BUM_LEFT 5 STATE_DAMAGED 6 STATE_SHOPKEEPER_KILLED_LVL 7 STATE_COMPASS_EFFECT set by: The Compass, The Mind 8 STATE_MAP_EFFECT set by: Treasure Map, The Mind 9 STATE_BLUE_MAP_EFFECT set by: Blue Map, The Mind, Ansuz 10 STATE_FULL_MAP_EFFECT set by: Crystal Ball, Ansuz, The World, The Sun 11 STATE_GREED_LOST_PENALTY 12 STATE_GREED_MONSTRO_SPAWNED 13 STATE_ITEM_DUNGEON_FOUND 14 STATE_MAMA_MEGA_USED 15 STATE_WOODEN_CROSS_REMOVED 16 STATE_SHOVEL_QUEST_TRIGGERED 17 STATE_SATANIC_BIBLE_USED 18 STATE_SOL_EFFECT 19 STATE_LEVEL_START_TRIGGERED 20 STATE_LUNA_EFFECT 21 STATE_VOID_DOOR_DISABLED 22 STATE_MINESHAFT_ESCAPE 23 STATE_MIRROR_BROKEN 24 NUM_STATE_FLAGS","tags":["Enum"]},{"location":"enums/LocustSubtypes.html","title":"Enum \"LocustSubtypes\"","text":"DLC Value Enumerator Comment 1 LOCUST_OF_WRATH 2 LOCUST_OF_PESTILENCE 3 LOCUST_OF_FAMINE 4 LOCUST_OF_DEATH 5 LOCUST_OF_CONQUEST","tags":["Enum"]},{"location":"enums/ModCallbacks.html","title":"Enum \"ModCallbacks\"","text":"<p>Execution order diagram: </p>","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_npc_update","title":"MC_NPC_UPDATE","text":"<p>Called after an NPC is updated.</p> <p>Returning any value will have no effect on later callback executions.</p> Warning <p>This callback will NOT fire when the NPC is playing the \"Appear\" animation. For example, when a Gaper spawns, it will fire on frame 1, then on frame 31 and onwards.</p> Example Code <p>This code will print \"Hello World!\" for every NPC Update. <pre><code>function mod:myFunction(entity) -- 'entity' contains a reference to the NPC\n    print(\"Hello World!\")\nend\nmod:AddCallback(ModCallbacks.MC_NPC_UPDATE, mod.myFunction)\n</code></pre></p> <p>This function will only print \"Gaper found\", if the NPC is of the type \"ENTITY_GAPER\". <pre><code>function mod:myFunction2(entity) -- 'entity' contains a reference to the NPC\n    print(\"Gaper found!\")\nend\nmod:AddCallback(ModCallbacks.MC_NPC_UPDATE, mod.myFunction2, EntityType.ENTITY_GAPER)\n</code></pre></p> DLC Value Name Function Args Optional Args Return Type 0 MC_NPC_UPDATE (EntityNPC) EntityType void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_update","title":"MC_POST_UPDATE","text":"<p>Called after every game update.</p> <p>Returning any value will have no effect on later callback executions.</p> Execution informations <p>This callback is called 30 times per second. It will not be called, when its paused (for example on screentransitions or on the pause menu).</p> Example Code <p>This code will print \"Hello World!\" for every Game Update. <pre><code>function mod:myFunction()\n    print(\"Hello World!\")\nend\nmod:AddCallback(ModCallbacks.MC_POST_UPDATE, mod.myFunction)\n</code></pre></p> DLC Value Name Function Args Optional Args Return Type 1 MC_POST_UPDATE - - void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_render","title":"MC_POST_RENDER","text":"<p>Called after every game render (60 times per second).</p> <p>Returning any value will have no effect on later callback executions.</p> Execution informations <p>It is highly recommended to only use this function when you want to render something. Its not recommended to use this function for things which are not frequently used or need constant recalculation.</p> Example Code <p>This code will print \"Hello World!\" everytime the game renders. <pre><code>function mod:myFunction()\n    print(\"Hello World!\")\nend\nmod:AddCallback(ModCallbacks.MC_POST_RENDER, mod.myFunction)\n</code></pre></p> DLC Value Name Function Args Optional Args Return Type 2 MC_POST_RENDER - - void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_use_item","title":"MC_USE_ITEM","text":"<p>Called when an active item is used, or when any item is passed through EntityPlayer.UseActiveItem.</p> <p>The item RNG allows for the item's random events to be seeded.</p> <p>Return true to show the \"use item\" animation, otherwise false.Returning any value will have no effect on later callback executions.</p> <p>If a table is returned instead of a boolean, the following fields can be set to a non-nil value for extra functionality:</p> <ul> <li>Discharge: Determines whether the item should be discharged or not after being used</li> <li>Remove: Determines whether the item should be removed from the player or not after being used</li> <li>ShowAnim: Plays the default use animation if set to true (equivalent to simply returning true in AB+)</li> </ul> Example Code <p>This code will print \"Hello World!\" everytime an active item is used. <pre><code>function mod:myFunction(collectibleID, rngObj, playerWhoUsedItem, useFlags, activeSlot, varData)\n    print(\"Hello World!\")\nend\nmod:AddCallback(ModCallbacks.MC_USE_ITEM, mod.myFunction)\n</code></pre></p> <p>This code showcases how the return value can be used to alter the behavior of the item usage. Here, it will cause the item to not discharge, not be removed on use and not show the use animation. <pre><code>function mod:myFunction2(collectibleID, rngObj, playerWhoUsedItem, useFlags, activeSlot, varData)\n    return {\n        Discharge = false,\n        Remove = false,\n        ShowAnim = false,\n    }\nend\nmod:AddCallback(ModCallbacks.MC_USE_ITEM, mod.myFunction2)\n</code></pre></p> <p>This code will only print \"D6 used!\" when the D6 is used. <pre><code>function mod:myFunction3(collectibleID, rngObj, playerWhoUsedItem, useFlags, activeSlot, varData)\n    print(\"D6 used!\")\nend\nmod:AddCallback(ModCallbacks.MC_USE_ITEM, mod.myFunction3, CollectibleType.COLLECTIBLE_D6)\n</code></pre></p> DLC Value Name Function Args Optional Args Return Type 3 MC_USE_ITEM (CollectibleType,RNG,EntityPlayer,UseFlags [int],ActiveSlot,CustomVarData [int]) CollectibleType boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_peffect_update","title":"MC_POST_PEFFECT_UPDATE","text":"<p>Called for each player, each frame, after the player evaluates the effects of items that must be constantly evaluated.</p> <p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 4 MC_POST_PEFFECT_UPDATE (EntityPlayer) PlayerType void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_use_card","title":"MC_USE_CARD","text":"<p>Called when a card/rune is used.</p> <p>Returning any value will have no effect on later callback executions.</p> Example Code <p>This code will print \"Hello World!\" everytime any card is used. <pre><code>function mod:myFunction(cardID, playerWhoUsedItem, useFlags)\n    print(\"Hello World!\")\nend\nmod:AddCallback(ModCallbacks.MC_USE_CARD, mod.myFunction)\n</code></pre></p> <p>This code will only print \"Fool card used!\" when the Fool card is used. <pre><code>function mod:myFunction2(cardID, playerWhoUsedItem, useFlags)\n    print(\"Fool card used!\")\nend\nmod:AddCallback(ModCallbacks.MC_USE_CARD, mod.myFunction2, Card.CARD_FOOL)\n</code></pre></p> DLC Value Name Function Args Optional Args Return Type 5 MC_USE_CARD (Card,EntityPlayer,UseFlags [int] Card void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_familiar_update","title":"MC_FAMILIAR_UPDATE","text":"<p>Called every frame for each familiar.</p> <p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 6 MC_FAMILIAR_UPDATE (EntityFamiliar) FamiliarVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_familiar_init","title":"MC_FAMILIAR_INIT","text":"<p>Called just after a familiar is initialized.</p> <p>Returning any value will have no effect on later callback executions.</p> Warning <p>Accessing the initialized entity does provide incomplete data in some use cases. Only Position, Velocity, SpawnerType, SpawnerVariant, SpawnerEntity and some others are set before PostInit callbacks are called and are therefore accessible. Some other attributes (i.e. effect attributes or tear flags) will not be set. If you want to access those values, you need to hook into MC_POST_PEFFECT_UPDATE and check those attributes on the first possible frame.</p> DLC Value Name Function Args Optional Args Return Type 7 MC_FAMILIAR_INIT (EntityFamiliar) FamiliarVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_evaluate_cache","title":"MC_EVALUATE_CACHE","text":"<p>Called one or more times when a player's stats are re-evaluated. For example, this will fire after the player picks up a collectible item that grants stats or uses a stat pill.</p> <p>The optional parameter can be used to specify a CacheFlag. It must be a singular CacheFlag, a composition of two or more CacheFlags will not work.</p> <p>Returning any value will have no effect on later callback executions.</p> <p>Use this callback to implement anything that changse the player's stats, familiars, flying, weapons, and so on.</p> <p>Custom collectibles and trinkets annotate which specific stats they affect with the \"cache\" tag in the \"items.xml\" file. For example, a custom passive collectible that increases tear rate and damage should have an \"items.xml\" entry with something along the lines of:</p> <pre><code>  &lt;passive\nname=\"Foo\"\ndescription=\"My cool item\"\ngfx=\"foo.png\"\ncache=\"damage firedelay\"\n/&gt;\n</code></pre> <p>With this entry, the <code>MC_EVALUATE_CACHE</code> callback will fire twice when Foo item is picked up by the player, once with <code>CacheFlag.CACHE_DAMAGE</code>, and once with <code>CacheFlag.CACHE_FIREDELAY</code>.</p> <p>The stats for vanilla items and effects are applied before the callback is fired for any modded effects.</p> <p>You can force this callback to fire in other callbacks by 1) manually adding the appropriate cache flags to the player, and 2) calling the <code>EntityPlayer.EvaluateItems</code> method. For example:</p> <pre><code>-- My custom item changes the player's damage on every frame\nfunction barPostPEffectUpdate(player)\n  player:AddCacheFlags(CacheFlag.CACHE_DAMAGE)\n  player:EvaluateItems() -- The \"MC_EVALUATE_CACHE\" callback will now fire.\nend\n</code></pre> <p>Note that the value passed to the callback will always be an exact value of the CacheFlag enum. It is never a composition of two or more CacheFlags. Thus, you should always use normal equality instead of bitwise operators when comparing the cache flag.</p> DLC Value Name Function Args Optional Args Return Type 8 MC_EVALUATE_CACHE (EntityPlayer,CacheFlag) CacheFlag void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_player_init","title":"MC_POST_PLAYER_INIT","text":"<p>Called after a Player Entity is initialized.</p> <p>The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-Baby</p> <p>Returning any value will have no effect on later callback executions.</p> Warning <p>Accessing the initialized entity does provide incomplete data in some use cases. Only Position, Velocity, SpawnerType, SpawnerVariant, SpawnerEntity and some others are set before PostInit callbacks are called and are therefore accessible. Some other attributes (i.e. effect attributes or tear flags) will not be set. If you want to access those values, you need to hook into MC_POST_PEFFECT_UPDATE and check those attributes on the first possible frame.</p> Conditional Behaviour  <p>This callback causes many <code>EntityPlayer</code> methods to silently fail if the methods are called while continuing a saved run. This behavior was intentionally added by Kilburn in the Repentance DLC in order to make it easier for modders to add starting items to custom characters. (This behavior obviaties the need for modders to use filtration logic to distinguish between the cases of a new run/Genesis use/co-op spawn and a continued run.)</p> <p>The following EntityPlayer methods are known to fail:</p> <pre><code>AddCollectible\nAddTrinket\nAddKeys\nAddCoins\nAddBombs\nAddGoldenBomb\nAddGoldenKey\nAddGigaBombs\nAddMaxHearts\nAddHearts\nAddBlackHearts\nAddSoulHearts\nAddRottenHearts\nAddBoneHearts\nAddGoldenHearts\nAddEternalHearts\nAddBrokenHearts\nAddCard\nAddPill\nAddPrettyFly\nAddJarFlies\nAddJarHearts\nAddSoulCharge\nAddBloodCharge\nAddPoopMana\nSetPocketActiveItem\n</code></pre> <p>The following EntityPlayer methods have been verified to continue firing:</p> <pre><code>AddBlueFlies\nAddBlueSpider\nAddWisp\nAddItemWisp\nAddSwarmFlyOrbital\nAddFriendlyDip\n</code></pre> DLC Value Name Function Args Optional Args Return Type 9 MC_POST_PLAYER_INIT (EntityPlayer) PlayerVariant* void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_use_pill","title":"MC_USE_PILL","text":"<p>Called when a pill is used.</p> <p>Returning any value will have no effect on later callback executions.</p> Example Code <p>This code will print \"Hello World!\" everytime any pill is used. <pre><code>function mod:myFunction(pillEffectID, playerWhoUsedItem, useFlags)\n    print(\"Hello World!\")\nend\nmod:AddCallback(ModCallbacks.MC_USE_PILL, mod.myFunction)\n</code></pre></p> <p>This code will only print \"Bad Gas Pill used!\" when the Fool pill is used. <pre><code>function mod:myFunction2(pillEffectID, playerWhoUsedItem, useFlags)\n    print(\"Bad Gas Pill used!\")\nend\nmod:AddCallback(ModCallbacks.MC_USE_PILL, mod.myFunction2, PillEffect.PILLEFFECT_BAD_GAS)\n</code></pre></p> DLC Value Name Function Args Optional Args Return Type 10 MC_USE_PILL (PillEffect,EntityPlayer,UseFlags [int]) PillEffect void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_entity_take_dmg","title":"MC_ENTITY_TAKE_DMG","text":"<p>Called before new damage is applied.</p> <p>If the entity has a DAMAGE_COUNTDOWN flag, it will ignore any other DAMAGE_COUNTDOWN hits for the duration specified.</p> <p>Return true or nil if the entity or player should sustain the damage, otherwise false to ignore it. If the entity is an EntityPlayer, the DamageAmount is the integer number of half-hearts of damage that the player will take. Otherwise, DamageAmount is a number of hit points.</p> Bug <p>Returning any value besides nil will prevent later callbacks from being executed.</p> DLC Value Name Function Args Optional Args Return Type 11 MC_ENTITY_TAKE_DMG (Entity [Entity],Amount [float],DamageFlags [int],Source [EntityRef],CountdownFrames [int]) EntityType boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_curse_eval","title":"MC_POST_CURSE_EVAL","text":"<p>Curses is a bitmask containing current curses. Called after the current Level applied it's curses. Returns the new curse bitmask. Use <code>Isaac.GetCurseIdByName()</code> to get the curseID.</p> <p>If a number is returned, it will be the \"Curses\" arg for later executed callbacks.</p> Bug <p>Returning a value that is not an integer or nil will cause the game to crash.</p> Warning <p>The last callback to return a valid return value wins out and overwrites previous callbacks' return values</p> DLC Value Name Function Args Optional Args Return Type 12 MC_POST_CURSE_EVAL (Curses [int]) - int","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_input_action","title":"MC_INPUT_ACTION","text":"<p>This callback fires every time the game polls for a ButtonAction input, often several times per frame even for the same action. Since it has to do with polling, it fires regardless of whether or not the player is actually pressing any particular input.</p> <p>This callback is used to arbitrarily change inputs. For example, you can completely disable the player from pressing a certain button. Or, you can force the player to press a specific button, and so on. If all you want to do is read if an input is pressed or not, then you should not use this callback, and instead use the <code>Input.IsActionTriggered</code> method in the <code>MC_POST_RENDER</code> callback.</p> <p>This callback will not affect any custom mod code that is reading user input via the <code>Input</code> class.</p> <ul> <li>Entity - The entity that is requesting the input. Most of the time this will be a player. However, it can also be nil if the input is not read from an entity class, or an entity being controlled by Friend Finder.</li> <li>InputHook - This determines the kind of input that is being polled. This corresponds to the <code>Input.IsActionTriggered</code>, <code>Input.IsActionPressed</code>, and <code>Input.GetActionValue</code> methods, which trigger this callback.</li> </ul> <p>Return nil if you do not want to overwrite the input. If you do want to overwrite the input, then you have to return a boolean for the <code>IS_ACTION_PRESSED</code> (0) and <code>IS_ACTION_TRIGGERED</code> (1) input hooks, or a float between 0.0 and 1.0 for the <code>GET_ACTION_VALUE</code> (2) input hook.</p> <p>Returning any value will have no effect on later callback executions.</p> Execution information <p>This callback is called roughly 1470 times a second.</p> DLC Value Name Function Args Optional Args Return Type 13 MC_INPUT_ACTION (Entity,InputHook,ButtonAction) InputHook boolean or float","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_level_generator","title":"MC_LEVEL_GENERATOR","text":"Bug <p>This callback doesn't work right now and will never be called by the game!</p> DLC Value Name Function Args Optional Args Return Type 14 MC_LEVEL_GENERATOR - - void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_game_started","title":"MC_POST_GAME_STARTED","text":"<p>This function gets called when you start a game. The boolean value is true when you continue a run, false when you start a new one.</p> <p>This callback will be called after MC_POST_NEW_ROOM and after MC_POST_NEW_LEVEL.</p> <p>Returning any value will have no effect on later callback executions.</p> Example code <pre><code>local function onStart(_,bool)\n    print(bool)\nend\nmod:AddCallback(ModCallbacks.MC_POST_GAME_STARTED, onStart)\n</code></pre> DLC Value Name Function Args Optional Args Return Type 15 MC_POST_GAME_STARTED (IsContinued [bool]) - void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_game_end","title":"MC_POST_GAME_END","text":"<p>This function gets called when the game over screen appears, or when the an ending starts playing. The boolean value is true when you died and got a game over, false when you won and got an ending.</p> <p>Returning any value will have no effect on later callback executions.</p> Example code <pre><code>local function onEnd(_,bool)\n    print(bool)\nend\nmod:AddCallback(ModCallbacks.MC_POST_GAME_END, onEnd)\n</code></pre> DLC Value Name Function Args Optional Args Return Type 16 MC_POST_GAME_END (IsGameOver [bool]) - void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_game_exit","title":"MC_PRE_GAME_EXIT","text":"<p>This function gets called when you quit a run. The boolean value is true when the game would normally create a continuable save, false when it wouldn't. Called twice when the game plays an ending.</p> <p>Returning any value will have no effect on later callback executions.</p> Example code <pre><code>local function onExit(_,bool)\n    print(bool)\nend\nmod:AddCallback(ModCallbacks.MC_PRE_GAME_EXIT, onExit)\n</code></pre> DLC Value Name Function Args Optional Args Return Type 17 MC_PRE_GAME_EXIT (ShouldSave [bool]) - void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_new_level","title":"MC_POST_NEW_LEVEL","text":"<p>This triggers after transitioning a level or stage.</p> <p>Unintuitively, it is always called after MC_POST_NEW_ROOM.</p> <p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 18 MC_POST_NEW_LEVEL - - void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_new_room","title":"MC_POST_NEW_ROOM","text":"<p>This triggers after entering a room.</p> <p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 19 MC_POST_NEW_ROOM - - void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_get_card","title":"MC_GET_CARD","text":"<p>This callback is used for handling Card Pools.</p> <p>Because not all cards have the same chance to spawn, use RNG for a seeded random selection.</p> <p>You can use the boolean values as a filter for the selection.</p> <p>The return value determines, what Card will be spawned. Return nil to not replace the spawned card.</p> <p>Returned values will not update the \"Card\" arg of later executed callbacks.</p> Bug <p>Returning a value that is not an integer or nil will cause the game to crash.</p> Warning <p>The last callback to return a valid return value wins out and overwrites previous callbacks' return values</p> DLC Value Name Function Args Optional Args Return Type 20 MC_GET_CARD (RNG,Card,IncludePlayingCards [bool],IncludeRunes [bool],OnlyRunes [bool]) - Card","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_get_shader_params","title":"MC_GET_SHADER_PARAMS","text":"<p>Returns a table containing a key -&gt; value pair for custom shader parameters.</p> <p>Will skip remaining callbacks when returning a table.</p> DLC Value Name Function Args Optional Args Return Type 21 MC_GET_SHADER_PARAMS (ShaderName [string]) - table","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_execute_cmd","title":"MC_EXECUTE_CMD","text":"<p>Returns a string separated by <code>&lt;br /&gt;</code> (newline) per output line CMD is the first word of the Console input.</p> <p>The parameters are the rest of the Input.</p> Important <p>This function is NOT called for default game commands like Spawn or Debug.</p> <p>Returning a string will print it to the console.</p> <p>Returning any value will have no effect on later callback executions.</p> Bug <p>Returning any value beside nil will cause the game to crash, including a string.</p> Example code <pre><code>function mod.oncmd(_, command, args)\n    print(command)\n    print(args)\nend\nmod:AddCallback(ModCallbacks.MC_EXECUTE_CMD, mod.oncmd)\n-- executing command \"Test apple 1 Pear test\" prints\n-- Test\n-- apple 1 Pear test\n</code></pre> DLC Value Name Function Args Optional Args Return Type 22 MC_EXECUTE_CMD (CMD [string],Parameters [string]) - string","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_use_item","title":"MC_PRE_USE_ITEM","text":"<p>Called before an item is used.</p> <p>Return true to prevent the default code of an item to be triggered. This will still discharge the item.</p> Bug <p>Returning any value besides nil will also prevent later callbacks from being executed.</p> DLC Value Name Function Args Optional Args Return Type 23 MC_PRE_USE_ITEM (CollectibleType,RNG,EntityPlayer,UseFlags [int],ActiveSlot,CustomVarData [int]) CollectibleType boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_entity_spawn","title":"MC_PRE_ENTITY_SPAWN","text":"<p>Called right before an entity is spawned.</p> <p>Optional: Return a table with new values <code>{ Type, Variant, Subtype, Seed }</code> to override these values of the spawned entity.</p> <p>If you want to prevent an entity from spawning, you cannot return an <code>EntityType</code> of 0, since that will cause the game to crash.</p> <p>Sometimes, if you return a type other than the original type (e.g. replacing a pickup with an effect), the game will crash. Thus, you should replace a pickup with a new pickup, and so on.</p> Bug <p>Returning a value that is not a table or nil will cause the game to crash.</p> Warning <p>The last callback to return a valid return value wins out and overwrites previous callbacks' return values</p> DLC Value Name Function Args Optional Args Return Type 24 MC_PRE_ENTITY_SPAWN (EntityType,Variant [int],SubType [int],Position [Vector],Velocity [Vector],Spawner [Entity],Seed [int]) - table","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_familiar_render","title":"MC_POST_FAMILIAR_RENDER","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 25 MC_POST_FAMILIAR_RENDER (EntityFamiliar,RenderOffset [Vector]) FamiliarVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_familiar_collision","title":"MC_PRE_FAMILIAR_COLLISION","text":"<p>The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.</p> <p>Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). Returning any non-nil value will skip remaining callbacks.</p> DLC Value Name Function Args Optional Args Return Type 26 MC_PRE_FAMILIAR_COLLISION (EntityFamiliar,Collider [Entity],Low [bool]) FamiliarVariant boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_npc_init","title":"MC_POST_NPC_INIT","text":"<p>Returning any value will have no effect on later callback executions.</p> Warning <p>Accessing the initialized entity does provide incomplete data in some use cases. Only Position, Velocity, SpawnerType, SpawnerVariant, SpawnerEntity and some others are set before PostInit callbacks are called and are therefore accessible. Some other attributes (i.e. effect attributes or tear flags) will not be set. If you want to access those values, you need to hook into MC_NPC_UPDATE and check those attributes on the first possible frame.</p> DLC Value Name Function Args Optional Args Return Type 27 MC_POST_NPC_INIT (EntityNPC) EntityType void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_npc_render","title":"MC_POST_NPC_RENDER","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 28 MC_POST_NPC_RENDER (EntityNPC,RenderOffset [Vector]) EntityType void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_npc_death","title":"MC_POST_NPC_DEATH","text":"<p>Gets called after the Death animation is played.</p> <p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 29 MC_POST_NPC_DEATH (EntityNPC) EntityType void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_npc_collision","title":"MC_PRE_NPC_COLLISION","text":"<p>The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.</p> <p>Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). Returning any non-nil value will skip remaining callbacks.</p> DLC Value Name Function Args Optional Args Return Type 30 MC_PRE_NPC_COLLISION (EntityNPC,Collider [Entity],Low [bool]) EntityType boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_player_update","title":"MC_POST_PLAYER_UPDATE","text":"<p>The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-Baby</p> <p>Returning any value will have no effect on later callback executions.</p> Execution informations <p>This callback is called 60 times per second</p> DLC Value Name Function Args Optional Args Return Type 31 MC_POST_PLAYER_UPDATE (EntityPlayer) PlayerVariant* void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_player_render","title":"MC_POST_PLAYER_RENDER","text":"<p>The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-Baby</p> <p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 32 MC_POST_PLAYER_RENDER (EntityPlayer,RenderOffset [Vector]) PlayerVariant* void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_player_collision","title":"MC_PRE_PLAYER_COLLISION","text":"<p>The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.</p> <p>Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). Returning any non-nil value will skip remaining callbacks.</p> <p>The optional parameter can be used to specify a Player Variant. 0 = Player, 1 = Co-Op-Baby</p> DLC Value Name Function Args Optional Args Return Type 33 MC_PRE_PLAYER_COLLISION (EntityPlayer,Collider [Entity],Low [bool]) PlayerVariant* boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_pickup_init","title":"MC_POST_PICKUP_INIT","text":"<p>Returning any value will have no effect on later callback executions.</p> Warning <p>Accessing the initialized entity does provide incomplete data in some use cases. Only Position, Velocity, SpawnerType, SpawnerVariant, SpawnerEntity and some others are set before PostInit callbacks are called and are therefore accessible. Some other attributes (i.e. effect attributes or tear flags) will not be set. If you want to access those values, you need to hook into MC_POST_PICKUP_UPDATE and check those attributes on the first possible frame.</p> DLC Value Name Function Args Optional Args Return Type 34 MC_POST_PICKUP_INIT (EntityPickup) PickupVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_pickup_update","title":"MC_POST_PICKUP_UPDATE","text":"<p>Returning any value will have no effect on later callback executions.</p> Execution informations <p>This callback will be called on the 1st frame that the entity exists. It will only be called on the 0th frame, when you enter a room that already contains a spawned pickup.</p> DLC Value Name Function Args Optional Args Return Type 35 MC_POST_PICKUP_UPDATE (EntityPickup) PickupVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_pickup_render","title":"MC_POST_PICKUP_RENDER","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 36 MC_POST_PICKUP_RENDER (EntityPickup,RenderOffset [Vector]) PickupVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_pickup_selection","title":"MC_POST_PICKUP_SELECTION","text":"<p>Called after a Pickup was choosen from a list of random pickups to be spawned.Return nil to continue with default game code.</p> <p>Return a table <code>{ Variant, Subtype }</code> to override the specified values. This does also affect later executed callbacks.</p> Bug <p>Returning a value that is not a table or nil will cause the game to crash.</p> Warning <p>The last callback to return a valid return value wins out and overwrites previous callbacks' return values</p> Bug <p>EntityPickup does contain the Type/variant of the pickup to spawn, but is otherwise an empty class with empty / zeroed values.</p> <p>This Callback is also called when entering a room that contains pickups that are already selected. It is also called when the player drops a card. Those facts make this callback useless to use for handling pickup pools.</p> DLC Value Name Function Args Optional Args Return Type 37 MC_POST_PICKUP_SELECTION (EntityPickup,Variant [int],Subtype [int]) - table","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_pickup_collision","title":"MC_PRE_PICKUP_COLLISION","text":"<p>The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.</p> <p>Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). Returning any non-nil value will skip remaining callbacks.</p> DLC Value Name Function Args Optional Args Return Type 38 MC_PRE_PICKUP_COLLISION (EntityPickup,Collider [Entity],Low [bool]) PickupVariant boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_tear_init","title":"MC_POST_TEAR_INIT","text":"<p>Returning any value will have no effect on later callback executions.</p> Warning <p>Accessing the initialized entity does provide incomplete data in some use cases. Only Position, Velocity, SpawnerType, SpawnerVariant, SpawnerEntity and some others are set before PostInit callbacks are called and are therefore accessible. Some other attributes (i.e. effect attributes or tear flags) will not be set. If you want to access those values, you need to hook into MC_POST_TEAR_UPDATE and check those attributes on the first possible frame.</p> DLC Value Name Function Args Optional Args Return Type 39 MC_POST_TEAR_INIT (EntityTear) TearVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_tear_update","title":"MC_POST_TEAR_UPDATE","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 40 MC_POST_TEAR_UPDATE (EntityTear) TearVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_tear_render","title":"MC_POST_TEAR_RENDER","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 41 MC_POST_TEAR_RENDER (EntityTear,RenderOffset [Vector]) TearVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_tear_collision","title":"MC_PRE_TEAR_COLLISION","text":"<p>The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.</p> <p>Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). Returning any non-nil value will skip remaining callbacks.</p> DLC Value Name Function Args Optional Args Return Type 42 MC_PRE_TEAR_COLLISION (EntityTear,Collider [Entity],Low [bool]) TearVariant boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_projectile_init","title":"MC_POST_PROJECTILE_INIT","text":"<p>Returning any value will have no effect on later callback executions.</p> Warning <p>Accessing the initialized entity does provide incomplete data in some use cases. Only Position, Velocity, SpawnerType, SpawnerVariant, SpawnerEntity and some others are set before PostInit callbacks are called and are therefore accessible. Some other attributes (i.e. effect attributes or tear flags) will not be set. If you want to access those values, you need to hook into MC_POST_PROJECTILE_UPDATE and check those attributes on the first possible frame.</p> DLC Value Name Function Args Optional Args Return Type 43 MC_POST_PROJECTILE_INIT (EntityProjectile) ProjectileVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_projectile_update","title":"MC_POST_PROJECTILE_UPDATE","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 44 MC_POST_PROJECTILE_UPDATE (EntityProjectile) ProjectileVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_projectile_render","title":"MC_POST_PROJECTILE_RENDER","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 45 MC_POST_PROJECTILE_RENDER (EntityProjectile,RenderOffset [Vector]) ProjectileVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_projectile_collision","title":"MC_PRE_PROJECTILE_COLLISION","text":"<p>The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.</p> <p>Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). Returning any non-nil value will skip remaining callbacks.</p> DLC Value Name Function Args Optional Args Return Type 46 MC_PRE_PROJECTILE_COLLISION (EntityProjectile,Collider [Entity],Low [bool]) ProjectileVariant boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_laser_init","title":"MC_POST_LASER_INIT","text":"<p>Returning any value will have no effect on later callback executions.</p> Warning <p>Accessing the initialized entity does provide incomplete data in some use cases. Only Position, Velocity, SpawnerType, SpawnerVariant, SpawnerEntity and some others are set before PostInit callbacks are called and are therefore accessible. Some other attributes (i.e. effect attributes or tear flags) will not be set. If you want to access those values, you need to hook into MC_POST_LASER_UPDATE and check those attributes on the first possible frame.</p> DLC Value Name Function Args Optional Args Return Type 47 MC_POST_LASER_INIT (EntityLaser) LaserVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_laser_update","title":"MC_POST_LASER_UPDATE","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 48 MC_POST_LASER_UPDATE (EntityLaser) LaserVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_laser_render","title":"MC_POST_LASER_RENDER","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 49 MC_POST_LASER_RENDER (EntityLaser,RenderOffset [Vector]) LaserVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_knife_init","title":"MC_POST_KNIFE_INIT","text":"<p>Returning any value will have no effect on later callback executions.</p> Note <p>The optional parameter is a SubType and NOT a Variant!</p> Warning <p>Accessing the initialized entity does provide incomplete data in some use cases. Only Position, Velocity, SpawnerType, SpawnerVariant, SpawnerEntity and some others are set before PostInit callbacks are called and are therefore accessible. Some other attributes (i.e. effect attributes or tear flags) will not be set. If you want to access those values, you need to hook into MC_POST_KNIFE_UPDATE and check those attributes on the first possible frame.</p> DLC Value Name Function Args Optional Args Return Type 50 MC_POST_KNIFE_INIT (EntityKnife) KnifeSubType * void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_knife_update","title":"MC_POST_KNIFE_UPDATE","text":"<p>Returning any value will have no effect on later callback executions.</p> Note <p>The optional parameter is a SubType and NOT a Variant!</p> DLC Value Name Function Args Optional Args Return Type 51 MC_POST_KNIFE_UPDATE (EntityKnife) KnifeSubType * void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_knife_render","title":"MC_POST_KNIFE_RENDER","text":"<p>Returning any value will have no effect on later callback executions.</p> Note <p>The optional parameter is a SubType and NOT a Variant!</p> DLC Value Name Function Args Optional Args Return Type 52 MC_POST_KNIFE_RENDER (EntityKnife,RenderOffset [Vector]) KnifeSubType * void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_knife_collision","title":"MC_PRE_KNIFE_COLLISION","text":"<p>The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.</p> <p>Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). Returning any non-nil value will skip remaining callbacks.</p> Note <p>The optional parameter is a SubType and NOT a Variant!</p> DLC Value Name Function Args Optional Args Return Type 53 MC_PRE_KNIFE_COLLISION (EntityKnife,Collider [Entity],Low [bool]) KnifeSubType * boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_effect_init","title":"MC_POST_EFFECT_INIT","text":"<p>Returning any value will have no effect on later callback executions.</p> Warning <p>Accessing the initialized entity does provide incomplete data in some use cases. Only Position, Velocity, SpawnerType, SpawnerVariant, SpawnerEntity and some others are set before PostInit callbacks are called and are therefore accessible. Some other attributes (i.e. effect attributes or tear flags) will not be set. If you want to access those values, you need to hook into MC_POST_EFFECT_UPDATE and check those attributes on the first possible frame.</p> DLC Value Name Function Args Optional Args Return Type 54 MC_POST_EFFECT_INIT (EntityEffect) EffectVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_effect_update","title":"MC_POST_EFFECT_UPDATE","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 55 MC_POST_EFFECT_UPDATE (EntityEffect) EffectVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_effect_render","title":"MC_POST_EFFECT_RENDER","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 56 MC_POST_EFFECT_RENDER (EntityEffect,RenderOffset [Vector]) EffectVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_bomb_init","title":"MC_POST_BOMB_INIT","text":"<p>Returning any value will have no effect on later callback executions.</p> Warning <p>Accessing the initialized entity does provide incomplete data in some use cases. Only Position, Velocity, SpawnerType, SpawnerVariant, SpawnerEntity and some others are set before PostInit callbacks are called and are therefore accessible. Some other attributes (i.e. effect attributes or tear flags) will not be set. If you want to access those values, you need to hook into MC_POST_BOMB_UPDATE and check those attributes on the first possible frame.</p> DLC Value Name Function Args Optional Args Return Type 57 MC_POST_BOMB_INIT (EntityBomb) BombVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_bomb_update","title":"MC_POST_BOMB_UPDATE","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 58 MC_POST_BOMB_UPDATE (EntityBomb) BombVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_bomb_render","title":"MC_POST_BOMB_RENDER","text":"<p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 59 MC_POST_BOMB_RENDER (EntityBomb,Offset [Vector]) BombVariant void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_bomb_collision","title":"MC_PRE_BOMB_COLLISION","text":"<p>The Low value is true, when the entity collided with the collider first. Its false if the collider collides first.</p> <p>Return true to ignore collision, false to collide but not execute internal code and nil to continue with internal code (example: taking damage on contact). Returning any non-nil value will skip remaining callbacks.</p> DLC Value Name Function Args Optional Args Return Type 60 MC_PRE_BOMB_COLLISION (EntityBomb,Collider [Entity],Low [bool]) BombVariant boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_fire_tear","title":"MC_POST_FIRE_TEAR","text":"<p>Called when the player fires a tear.</p> <p>Returning any value will have no effect on later callback executions.</p> <p>For Afterbirth+, this is not called for other weapons or tears fired with Incubus. In Repentance, it works for tears fired with Incubus.</p> DLC Value Name Function Args Optional Args Return Type 61 MC_POST_FIRE_TEAR (EntityTear) - void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_get_collectible","title":"MC_PRE_GET_COLLECTIBLE","text":"<p>This callback is called when the game needs to get a new random item from an item pool.</p> <p>You can return an integer from this callback in order to change the returned collectible type.</p> <p>It is not called for \"scripted\" drops (like Mr. Boom from Wrath) and manually spawned items.</p> <p>Returned values will not alter args of later executed callbacks.</p> Bug <p>Returning a value that is not a table or nil will cause the game to crash.</p> Warning <p>The last callback to return a valid return value wins out and overwrites previous callbacks' return values</p> DLC Value Name Function Args Optional Args Return Type 62 MC_PRE_GET_COLLECTIBLE (ItemPoolType,Decrease [bool],Seed [int]) - int","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_get_collectible","title":"MC_POST_GET_COLLECTIBLE","text":"<p>This function is called right after MC_PRE_GET_COLLECTIBLE and determines the Collectible that will be spawned from the given ItemPoolType.</p> <p>You can return an integer from this callback in order to change the returned collectible type.</p> <p>Returned values will not update the \"SelectedCollectible\" arg of later executed callbacks.</p> Bug <p>Returning a value that is not a table or nil will cause the game to crash.</p> Warning <p>The last callback to return a valid return value wins out and overwrites previous callbacks' return values</p> DLC Value Name Function Args Optional Args Return Type 63 MC_POST_GET_COLLECTIBLE (SelectedCollectible [CollectibleType],ItemPoolType,Decrease [bool],Seed [int]) - table","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_get_pill_color","title":"MC_GET_PILL_COLOR","text":"<p>This function is called, when the game is spawning a pill and needs to determine its PillColor.</p> <p>Return a PillColor to specify a Pillcolor that needs to be choosen. Return nothing to let it be handled by the game.</p> <p>Returned values will not alter the args of later executed callbacks.</p> Bug <p>Returning a value that is not a table or nil will cause the game to crash.</p> Warning <p>The last callback to return a valid return value wins out and overwrites previous callbacks' return values</p> DLC Value Name Function Args Optional Args Return Type 64 MC_GET_PILL_COLOR (Seed [int]) - PillColor","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_get_pill_effect","title":"MC_GET_PILL_EFFECT","text":"<p>Called every frames when the game get the PillEffect of a pill. The effect of the pill can be choosed by returning the chosen PillEffect.</p> <p>The effect is applied to every pill of the same PillColor, not to a single pill.</p> <p>Returned values will not update the \"SelectedPillEffect\" arg of later executed callbacks.</p> Bug <p>Returning a value that is not a table or nil will cause the game to crash.</p> Warning <p>The last callback to return a valid return value wins out and overwrites previous callbacks' return values</p> Example code <p>This code turn \"Bad Trip\" pills into \"Balls of Steel\" pills. <pre><code>function mod:getPillEffect(pillEffect, pillColor)\n    if pillEffect == PillEffect.PILLEFFECT_BAD_TRIP then\n    return PillEffect.PILLEFFECT_BALLS_OF_STEEL\n    end\nend\nmod:AddCallback(ModCallbacks.MC_GET_PILL_EFFECT, mod.getPillEffect)\n</code></pre></p> DLC Value Name Function Args Optional Args Return Type 65 MC_GET_PILL_EFFECT (SelectedPillEffect [PillEffect],PillColor) - table","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_get_trinket","title":"MC_GET_TRINKET","text":"<p>Called when a TrinketType of a Trinket needs to be determined.</p> <p>A TrinketType can be returned to change the SelectedTrinket.</p> <p>Returned values will not update the \"SelectedTrinket\" arg of later executed callbacks.</p> Bug <p>Returning a value that is not a table or nil will cause the game to crash.</p> Warning <p>The last callback to return a valid return value wins out and overwrites previous callbacks' return values</p> DLC Value Name Function Args Optional Args Return Type 66 MC_GET_TRINKET (SelectedTrinket [TrinketType],RNG) - table","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_entity_remove","title":"MC_POST_ENTITY_REMOVE","text":"<p>Called whenever an Entity gets removed by the game. This includes deaths, kills, removals and even unloading an entity on room transition or ending a run.</p> <p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 67 MC_POST_ENTITY_REMOVE (Entity) EntityType void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_post_entity_kill","title":"MC_POST_ENTITY_KILL","text":"<p>Called right before a death animation is triggered for an Entity.</p> <p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 68 MC_POST_ENTITY_KILL (Entity) EntityType void","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_npc_update","title":"MC_PRE_NPC_UPDATE","text":"<p>Return true if the internal AI of an NPC should be ignored, nil/nothing otherwise. Returning any non-nil value will skip remaining callbacks.</p> DLC Value Name Function Args Optional Args Return Type 69 MC_PRE_NPC_UPDATE (EntityNPC) EntityType boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_spawn_clean_award","title":"MC_PRE_SPAWN_CLEAN_AWARD","text":"<p>This function is triggered in every room that can be cleared, including boss and angel rooms, and even when it normally would not spawn a reward.</p> <p>This Callback also handles special spawns like the spawning of Trapdoors after a boss is killed, therefore returning true here will also cancel those events.</p> <p>Return true if the spawn routine should be ignored, nil/nothing otherwise. Returning any non-nil value will skip remaining callbacks.</p> DLC Value Name Function Args Optional Args Return Type 70 MC_PRE_SPAWN_CLEAN_AWARD (RNG,SpawnPosition [Vector]) - boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_room_entity_spawn","title":"MC_PRE_ROOM_ENTITY_SPAWN","text":"<p>This is called when entering a new room, before spawning entities which are part of its layout. Grid entities will also trigger this callback and their type will the same as the type used by the gridspawn command. Because of this, effects are assigned the type 999 instead of 1000 in this callback.</p> <p>Optional: Return a table with new values { Type, Variant, Subtype }. Returning such a table will override any replacements that might naturally occur i.e. enemy variants.</p> <p>Returning any value will have no effect on later callback executions.</p> DLC Value Name Function Args Optional Args Return Type 71 MC_PRE_ROOM_ENTITY_SPAWN (EntityType,Variant [int],SubType [int],GridIndex [int],Seed [int]) - table","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_entity_devolve","title":"MC_PRE_ENTITY_DEVOLVE","text":"<p>This is called when an entity is devolved through D10 or similar.</p> <p>Returns true if the internal devolving behavior should be ignored - When returning true, this callback is responsible for spawning the devolved entity and removing the original one.</p> DLC Value Name Function Args Optional Args Return Type 72 MC_PRE_ENTITY_DEVOLVE (Entity) - boolean","tags":["Enum"],"boost":3},{"location":"enums/ModCallbacks.html#mc_pre_mod_unload","title":"MC_PRE_MOD_UNLOAD","text":"<p>This is called right before any mod is unloaded (when disabling a mod or reloading it using luamod), the mod's table is passed as an argument</p> DLC Value Name Function Args Optional Args Return Type 73 MC_PRE_MOD_UNLOAD table Mod - void","tags":["Enum"],"boost":3},{"location":"enums/Mouse.html","title":"Enum \"Mouse\"","text":"DLC Value Enumerator Comment 0 MOUSE_BUTTON_1 1 MOUSE_BUTTON_2 2 MOUSE_BUTTON_3 3 MOUSE_BUTTON_4 4 MOUSE_BUTTON_5 5 MOUSE_BUTTON_6 6 MOUSE_BUTTON_7 7 MOUSE_BUTTON_8 7 MOUSE_BUTTON_LAST 0 MOUSE_BUTTON_LEFT 1 MOUSE_BUTTON_RIGHT 2 MOUSE_BUTTON_MIDDLE","tags":["Enum"]},{"location":"enums/Music.html","title":"Enum \"Music\"","text":"DLC Value Enumerator Comment 0 MUSIC_NULL 1 MUSIC_BASEMENT 2 MUSIC_CAVES 3 MUSIC_DEPTHS 4 MUSIC_CELLAR 5 MUSIC_CATACOMBS 6 MUSIC_NECROPOLIS 7 MUSIC_WOMB_UTERO 8 MUSIC_GAME_OVER 9 MUSIC_BOSS 10 MUSIC_CATHEDRAL 11 MUSIC_SHEOL 12 MUSIC_DARK_ROOM 13 MUSIC_CHEST 14 MUSIC_BURNING_BASEMENT 15 MUSIC_FLOODED_CAVES 16 MUSIC_DANK_DEPTHS 17 MUSIC_SCARRED_WOMB 18 MUSIC_BLUE_WOMB 19 MUSIC_UTERO 20 MUSIC_MOM_BOSS 21 MUSIC_MOMS_HEART_BOSS 22 MUSIC_ISAAC_BOSS 23 MUSIC_SATAN_BOSS 24 MUSIC_DARKROOM_BOSS 25 MUSIC_BLUEBABY_BOSS 26 MUSIC_BOSS2 27 MUSIC_HUSH_BOSS 28 MUSIC_ULTRAGREED_BOSS 30 MUSIC_LIBRARY_ROOM 31 MUSIC_SECRET_ROOM 32 MUSIC_SECRET_ROOM2 33 MUSIC_DEVIL_ROOM 34 MUSIC_ANGEL_ROOM 35 MUSIC_SHOP_ROOM 36 MUSIC_ARCADE_ROOM 37 MUSIC_BOSS_OVER 38 MUSIC_CHALLENGE_FIGHT 39 MUSIC_BOSS_RUSH 40 MUSIC_JINGLE_BOSS_RUSH_OUTRO 41 MUSIC_BOSS3 42 MUSIC_JINGLE_BOSS_OVER3 43 MUSIC_MOTHER_BOSS 44 MUSIC_DOGMA_BOSS 45 MUSIC_BEAST_BOSS 47 MUSIC_JINGLE_MOTHER_OVER 48 MUSIC_JINGLE_DOGMA_OVER 49 MUSIC_JINGLE_BEAST_OVER 50 MUSIC_PLANETARIUM 51 MUSIC_SECRET_ROOM_ALT_ALT 52 MUSIC_BOSS_OVER_TWISTED 60 MUSIC_CREDITS 61 MUSIC_TITLE 62 MUSIC_TITLE_AFTERBIRTH 63 MUSIC_TITLE_REPENTANCE 64 MUSIC_JINGLE_GAME_START_ALT 65 MUSIC_JINGLE_NIGHTMARE_ALT 66 MUSIC_MOTHERS_SHADOW_INTRO 67 MUSIC_DOGMA_INTRO 68 MUSIC_STRANGE_DOOR_JINGLE 69 MUSIC_DARK_CLOSET 70 MUSIC_CREDITS_ALT 71 MUSIC_CREDITS_ALT_FINAL 81 MUSIC_JINGLE_BOSS 83 MUSIC_JINGLE_BOSS_OVER 84 MUSIC_JINGLE_HOLYROOM_FIND 85 MUSIC_JINGLE_SECRETROOM_FIND 87 MUSIC_JINGLE_TREASUREROOM_ENTRY_0 88 MUSIC_JINGLE_TREASUREROOM_ENTRY_1 89 MUSIC_JINGLE_TREASUREROOM_ENTRY_2 90 MUSIC_JINGLE_TREASUREROOM_ENTRY_3 91 MUSIC_JINGLE_CHALLENGE_ENTRY 92 MUSIC_JINGLE_CHALLENGE_OUTRO 93 MUSIC_JINGLE_GAME_OVER 94 MUSIC_JINGLE_DEVILROOM_FIND 95 MUSIC_JINGLE_GAME_START 96 MUSIC_JINGLE_NIGHTMARE 97 MUSIC_JINGLE_BOSS_OVER2 98 MUSIC_JINGLE_HUSH_OVER 100 MUSIC_INTRO_VOICEOVER 101 MUSIC_EPILOGUE_VOICEOVER 102 MUSIC_VOID 103 MUSIC_VOID_BOSS 104 MUSIC_DOWNPOUR 105 MUSIC_MINES 106 MUSIC_MAUSOLEUM 107 MUSIC_CORPSE 108 MUSIC_DROSS 109 MUSIC_ASHPIT 110 MUSIC_GEHENNA 111 MUSIC_MORTIS 112 MUSIC_ISAACS_HOUSE 113 MUSIC_FINAL_VOICEOVER 114 MUSIC_DOWNPOUR_REVERSE 115 MUSIC_DROSS_REVERSE 116 MUSIC_MINESHAFT_AMBIENT 117 MUSIC_MINESHAFT_ESCAPE 118 MUSIC_REVERSE_GENESIS 119 NUM_MUSIC","tags":["Enum"]},{"location":"enums/NpcState.html","title":"Enum \"NpcState\"","text":"DLC Value Enumerator Comment 0 STATE_INIT 1 STATE_APPEAR 2 STATE_APPEAR_CUSTOM 3 STATE_IDLE 4 STATE_MOVE 5 STATE_SUICIDE 6 STATE_JUMP 7 STATE_STOMP 8 STATE_ATTACK 9 STATE_ATTACK2 10 STATE_ATTACK3 11 STATE_ATTACK4 12 STATE_ATTACK5 13 STATE_SUMMON 14 STATE_SUMMON2 15 STATE_SUMMON3 16 STATE_SPECIAL 17 STATE_UNIQUE_DEATH 18 STATE_DEATH","tags":["Enum"]},{"location":"enums/NullItemID.html","title":"Enum \"NullItemID\"","text":"DLC Value Enumerator Comment -1 ID_NULL 0 ID_EXPLOSIVE_DIARRHEA 1 ID_PUBERTY 2 ID_I_FOUND_PILLS 3 ID_LORD_OF_THE_FLIES 4 ID_STATUE 5 ID_GUPPY 6 ID_WIZARD 7 ID_MAGDALENE 8 ID_CAIN 9 ID_JUDAS 10 ID_EVE 11 ID_AZAZEL 12 ID_EDEN 13 ID_SAMSON 14 ID_BLINDFOLD 15 ID_BLANKFACE 16 ID_CHRISTMAS 17 ID_PURITY_GLOW 18 ID_EMPTY_VESSEL 19 ID_MAW_MARK 20 ID_MUSHROOM 21 ID_ANGEL 22 ID_BOB 23 ID_DRUGS 24 ID_MOM 25 ID_BABY 26 ID_EVIL_ANGEL 27 ID_POOP 28 ID_RELAX 29 ID_OVERDOSE 30 ID_BOOMERANG 31 ID_MEGABLAST 32 ID_LAZARUS 33 ID_LAZARUS2 34 ID_LILITH 35 ID_IWATA 36 ID_APOLLYON 37 ID_BOOKWORM 38 ID_ADULTHOOD 39 ID_SPIDERBABY 40 ID_BATWING_WINGS 41 ID_HUGE_GROWTH 42 ID_ERA_WALK 43 ID_SACRIFICIAL_ALTAR 44 ID_FORGOTTEN 45 ID_BRIMSTONE2 46 ID_HOLY_CARD 47 ID_KEEPER 48 ID_CAMO_BOOST 49 ID_LAZARUS_BOOST 50 ID_SPIN_TO_WIN 51 ID_BETHANY 52 ID_JACOB 53 ID_ESAU 54 ID_BLOOD_OATH 55 ID_INTRUDER 56 ID_SOL 57 ID_IT_HURTS 58 ID_MARS 59 ID_TOOTH_AND_NAIL 60 ID_REVERSE_MAGICIAN 61 ID_REVERSE_HIGH_PRIESTESS 62 ID_REVERSE_EMPRESS 63 ID_REVERSE_CHARIOT 64 ID_REVERSE_STRENGTH 65 ID_REVERSE_HANGED_MAN 66 ID_REVERSE_SUN 67 ID_REVERSE_DEVIL 68 ID_REVERSE_CHARIOT_ALT 69 ID_REVERSE_TEMPERANCE 70 ID_REVERSE_STARS 71 ID_WAVY_CAP_1 72 ID_WAVY_CAP_2 73 ID_WAVY_CAP_3 74 ID_LUNA 75 ID_JUPITER_BODY 76 ID_JUPITER_BODY_ANGEL 77 ID_JUPITER_BODY_PONY 78 ID_JUPITER_BODY_WHITEPONY 79 ID_ISAAC_B 80 ID_MAGDALENE_B 81 ID_CAIN_B 82 ID_JUDAS_B 83 ID_BLUEBABY_B 84 ID_EVE_B 85 ID_SAMSON_B 86 ID_AZAZEL_B 87 ID_LAZARUS_B 88 ID_EDEN_B 89 ID_LOST_B 90 ID_LILITH_B 91 ID_KEEPER_B 92 ID_APOLLYON_B 93 ID_FORGOTTEN_B 94 ID_BETHANY_B 95 ID_JACOB_B 96 ID_AZAZELS_RAGE_1 97 ID_AZAZELS_RAGE_2 98 ID_AZAZELS_RAGE_3 99 ID_AZAZELS_RAGE_4 100 ID_ESAU_JR 101 ID_SPIRIT_SHACKLES_SOUL 102 ID_SPIRIT_SHACKLES_DISABLED 103 ID_BERSERK_SAMSON 104 ID_LAZARUS2_B 105 ID_SOUL_B 106 ID_FORGOTTEN_BOMB 107 ID_EXTRA_BIG_FAN 108 ID_JACOB2_B 109 ID_JACOBS_CURSE 110 ID_BLOODY_BABYLON 111 ID_DARK_ARTS 112 ID_LOST_CURSE 113 ID_LAZARUS_SOUL_REVIVE 114 ID_SOUL_MAGDALENE 115 ID_SOUL_BLUEBABY 116 ID_MIRROR_DEATH 117 ID_HEMOPTYSIS 118 ID_I_FOUND_HORSE_PILLS 119 ID_HORSE_PUBERTY 120 ID_SOUL_FORGOTTEN 121 ID_SOUL_JACOB 122 ID_BETHANY_B_BIRTHRIGHT 123 ID_JUDAS_BIRTHRIGHT 124 ID_JUDAS_BIRTHRIGHT_TIMED 125 ID_DOUBLE_GUPPYS_EYE 126 ID_DOUBLE_GLASS_EYE 127 ID_HEMOPTYSIS_BOOST 128 ID_SOUL_JUDAS 129 ID_JUDAS_BIRTHRIGHT_STAGE 130 ID_JUDAS_BIRTHRIGHT_PERMANENT 131 ID_ESAU_JR_FAMILIAR 132 NUM_NULLITEMS","tags":["Enum"]},{"location":"enums/PickupPrice.html","title":"Enum \"PickupPrice\"","text":"DLC Value Enumerator Comment -1 PRICE_ONE_HEART -2 PRICE_TWO_HEARTS -3 PRICE_THREE_SOULHEARTS -4 PRICE_ONE_HEART_AND_TWO_SOULHEARTS -5 PRICE_SPIKES -6 PRICE_SOUL -7 PRICE_ONE_SOUL_HEART -8 PRICE_TWO_SOUL_HEARTS -9 PRICE_ONE_HEART_AND_ONE_SOUL_HEART -1000 PRICE_FREE","tags":["Enum"]},{"location":"enums/PickupVariant.html","title":"Enum \"PickupVariant\"","text":"DLC Value Enumerator Comment 0 PICKUP_NULL 10 PICKUP_HEART 20 PICKUP_COIN 30 PICKUP_KEY 40 PICKUP_BOMB 41 PICKUP_THROWABLEBOMB 42 PICKUP_POOP 50 PICKUP_CHEST 51 PICKUP_BOMBCHEST 52 PICKUP_SPIKEDCHEST 53 PICKUP_ETERNALCHEST 54 PICKUP_MIMICCHEST 55 PICKUP_OLDCHEST 56 PICKUP_WOODENCHEST 57 PICKUP_MEGACHEST 58 PICKUP_HAUNTEDCHEST 60 PICKUP_LOCKEDCHEST 69 PICKUP_GRAB_BAG 70 PICKUP_PILL 90 PICKUP_LIL_BATTERY 100 PICKUP_COLLECTIBLE 110 PICKUP_BROKEN_SHOVEL 150 PICKUP_SHOPITEM 300 PICKUP_TAROTCARD 340 PICKUP_BIGCHEST 350 PICKUP_TRINKET 360 PICKUP_REDCHEST 370 PICKUP_TROPHY 380 PICKUP_BED 390 PICKUP_MOMSCHEST","tags":["Enum"]},{"location":"enums/PillColor.html","title":"Enum \"PillColor\"","text":"DLC Value Enumerator Comment 0 PILL_NULL 1 PILL_BLUE_BLUE 2 PILL_WHITE_BLUE 3 PILL_ORANGE_ORANGE 4 PILL_WHITE_WHITE 5 PILL_REDDOTS_RED 6 PILL_PINK_RED 7 PILL_BLUE_CADETBLUE 8 PILL_YELLOW_ORANGE 9 PILL_ORANGEDOTS_WHITE 10 PILL_WHITE_AZURE 11 PILL_BLACK_YELLOW 12 PILL_WHITE_BLACK 13 PILL_WHITE_YELLOW 14 NUM_STANDARD_PILLS 14 PILL_GOLD 15 NUM_PILLS 1 &lt;&lt; 11 PILL_GIANT_FLAG 2048 (1 &lt;&lt; 11) - 1 PILL_COLOR_MASK 2047, Used for horsepills","tags":["Enum"]},{"location":"enums/PillEffect.html","title":"Enum \"PillEffect\"","text":"DLC Value Enumerator Comment -1 PILLEFFECT_NULL 0 PILLEFFECT_BAD_GAS 1 PILLEFFECT_BAD_TRIP 2 PILLEFFECT_BALLS_OF_STEEL 3 PILLEFFECT_BOMBS_ARE_KEYS 4 PILLEFFECT_EXPLOSIVE_DIARRHEA 5 PILLEFFECT_FULL_HEALTH 6 PILLEFFECT_HEALTH_DOWN 7 PILLEFFECT_HEALTH_UP 8 PILLEFFECT_I_FOUND_PILLS 9 PILLEFFECT_PUBERTY 10 PILLEFFECT_PRETTY_FLY 11 PILLEFFECT_RANGE_DOWN 12 PILLEFFECT_RANGE_UP 13 PILLEFFECT_SPEED_DOWN 14 PILLEFFECT_SPEED_UP 15 PILLEFFECT_TEARS_DOWN 16 PILLEFFECT_TEARS_UP 17 PILLEFFECT_LUCK_DOWN 18 PILLEFFECT_LUCK_UP 19 PILLEFFECT_TELEPILLS 20 PILLEFFECT_48HOUR_ENERGY 21 PILLEFFECT_HEMATEMESIS 22 PILLEFFECT_PARALYSIS 23 PILLEFFECT_SEE_FOREVER 24 PILLEFFECT_PHEROMONES 25 PILLEFFECT_AMNESIA 26 PILLEFFECT_LEMON_PARTY 27 PILLEFFECT_WIZARD 28 PILLEFFECT_PERCS 29 PILLEFFECT_ADDICTED 30 PILLEFFECT_RELAX 31 PILLEFFECT_QUESTIONMARK 32 PILLEFFECT_LARGER 33 PILLEFFECT_SMALLER 34 PILLEFFECT_INFESTED_EXCLAMATION 35 PILLEFFECT_INFESTED_QUESTION 36 PILLEFFECT_POWER 37 PILLEFFECT_RETRO_VISION 38 PILLEFFECT_FRIENDS_TILL_THE_END 39 PILLEFFECT_X_LAX 40 PILLEFFECT_SOMETHINGS_WRONG 41 PILLEFFECT_IM_DROWSY 42 PILLEFFECT_IM_EXCITED 43 PILLEFFECT_GULP 44 PILLEFFECT_HORF 45 PILLEFFECT_SUNSHINE 46 PILLEFFECT_VURP 47 PILLEFFECT_SHOT_SPEED_DOWN 48 PILLEFFECT_SHOT_SPEED_UP 49 PILLEFFECT_EXPERIMENTAL 50 NUM_PILL_EFFECTS","tags":["Enum"]},{"location":"enums/PlayerForm.html","title":"Enum \"PlayerForm\"","text":"DLC Value Enumerator Comment 0 PLAYERFORM_GUPPY 1 PLAYERFORM_LORD_OF_THE_FLIES 2 PLAYERFORM_MUSHROOM 3 PLAYERFORM_ANGEL 4 PLAYERFORM_BOB 5 PLAYERFORM_DRUGS 6 PLAYERFORM_MOM 7 PLAYERFORM_BABY 8 PLAYERFORM_EVIL_ANGEL 9 PLAYERFORM_POOP 10 PLAYERFORM_BOOK_WORM 11 PLAYERFORM_ADULTHOOD 12 PLAYERFORM_SPIDERBABY 13 PLAYERFORM_STOMPY 14 PLAYERFORM_FLIGHT AB+, unused 15 NUM_PLAYER_FORMS","tags":["Enum"]},{"location":"enums/PlayerSpriteLayer.html","title":"Enum \"PlayerSpriteLayer\"","text":"DLC Value Enumerator Comment 0 SPRITE_GLOW 1 SPRITE_BODY 2 SPRITE_BODY0 3 SPRITE_BODY1 4 SPRITE_HEAD 5 SPRITE_HEAD0 6 SPRITE_HEAD1 7 SPRITE_HEAD2 8 SPRITE_HEAD3 9 SPRITE_HEAD4 10 SPRITE_HEAD5 11 SPRITE_TOP0 12 SPRITE_EXTRA 13 SPRITE_GHOST 14 SPRITE_BACK 15 NUM_SPRITE_LAYERS","tags":["Enum"]},{"location":"enums/PlayerType.html","title":"Enum \"PlayerType\"","text":"DLC Value Enumerator Comment -1 PLAYER_POSSESSOR 0 PLAYER_ISAAC 1 PLAYER_MAGDALENE (ab+: PLAYER_MAGDALENA) 2 PLAYER_CAIN 3 PLAYER_JUDAS 4 PLAYER_BLUEBABY (ab+: PLAYER_XXX) 5 PLAYER_EVE 6 PLAYER_SAMSON 7 PLAYER_AZAZEL 8 PLAYER_LAZARUS 9 PLAYER_EDEN 10 PLAYER_THELOST 11 PLAYER_LAZARUS2 12 PLAYER_BLACKJUDAS 13 PLAYER_LILITH 14 PLAYER_KEEPER 15 PLAYER_APOLLYON 16 PLAYER_THEFORGOTTEN 17 PLAYER_THESOUL 18 PLAYER_BETHANY 19 PLAYER_JACOB 20 PLAYER_ESAU 21 PLAYER_ISAAC_B 22 PLAYER_MAGDALENE_B (legacy: PLAYER_MAGDALENA_B) 23 PLAYER_CAIN_B 24 PLAYER_JUDAS_B 25 PLAYER_BLUEBABY_B (legacy: PLAYER_XXX_B) 26 PLAYER_EVE_B 27 PLAYER_SAMSON_B 28 PLAYER_AZAZEL_B 29 PLAYER_LAZARUS_B 30 PLAYER_EDEN_B 31 PLAYER_THELOST_B 32 PLAYER_LILITH_B 33 PLAYER_KEEPER_B 34 PLAYER_APOLLYON_B 35 PLAYER_THEFORGOTTEN_B 36 PLAYER_BETHANY_B 37 PLAYER_JACOB_B 38 PLAYER_LAZARUS2_B 39 PLAYER_JACOB2_B 40 PLAYER_THESOUL_B 41 NUM_PLAYER_TYPES","tags":["Enum"]},{"location":"enums/PoopPickupSubType.html","title":"Enum \"PoopPickupSubType\"","text":"DLC Value Enumerator Comment 0 POOP_SMALL 1 POOP_BIG","tags":["Enum"]},{"location":"enums/PoopSpellType.html","title":"Enum \"PoopSpellType\"","text":"DLC Value Enumerator Comment 0 SPELL_NONE 1 SPELL_POOP 2 SPELL_CORNY 3 SPELL_BURNING 4 SPELL_STONE 5 SPELL_STINKY 6 SPELL_BLACK 7 SPELL_HOLY 8 SPELL_LIQUID 9 SPELL_FART 10 SPELL_BOMB 11 SPELL_DIARRHEA 12 NUM_POOP_SPELLS DLC Value Enumerator Comment 20 SPELL_BAG_SIZE 6 SPELL_QUEUE_SIZE","tags":["Enum"]},{"location":"enums/ProjectileFlags.html","title":"Enum \"ProjectileFlags\"","text":"Bitset Calculator DLC Value Enumerator Comment 1 &lt;&lt; 0 SMART follow player 1 &lt;&lt; 1 EXPLODE explode on impact 1 &lt;&lt; 2 ACID_GREEN acid splat on impact 1 &lt;&lt; 3 GOO goo splat on impact 1 &lt;&lt; 4 GHOST slide through solid entities 1 &lt;&lt; 5 WIGGLE 1 &lt;&lt; 6 BOOMERANG come back 1 &lt;&lt; 7 HIT_ENEMIES can hit enemies 1 &lt;&lt; 8 ACID_RED blood acid 1 &lt;&lt; 9 GREED Greed projectiles have same effect as Greed enemy's bullets. 1 &lt;&lt; 10 RED_CREEP Bullet leaves a red creep 1 &lt;&lt; 11 ORBIT_CW Bullet orbits a point clockwise and passes through walls similar to Tiny Planet 1 &lt;&lt; 12 ORBIT_CCW Bullet orbits a point counter-clockwise and passes through walls similar to Tiny Planet 1 &lt;&lt; 13 NO_WALL_COLLIDE 1 &lt;&lt; 14 CREEP_BROWN Bullet leaves a brown creep 1 &lt;&lt; 15 FIRE Projectile was cast by a fireplace 1 &lt;&lt; 16 BURST Bursts into more bullets 1 &lt;&lt; 17 ANY_HEIGHT_ENTITY_HIT Bullets that can hit at any height 1 &lt;&lt; 18 CURVE_LEFT Bullets curve slightly on a circular path 1 &lt;&lt; 19 CURVE_RIGHT Bullets curve slightly on a circular path 1 &lt;&lt; 20 TURN_HORIZONTAL Bullets turn and go horizontally and increase in speed when they pass the const static uint64_t player on either side 1 &lt;&lt; 21 SINE_VELOCITY Bullet velocity varies over time as a function of a wave 1 &lt;&lt; 22 MEGA_WIGGLE Like wiggle worm but the wiggling increases in amplitude over time 1 &lt;&lt; 23 SAWTOOTH_WIGGLE Bullets travel on a sawtooth shaped path 1 &lt;&lt; 24 SLOWED 1 &lt;&lt; 25 TRIANGLE 1 &lt;&lt; 26 MOVE_TO_PARENT 1 &lt;&lt; 27 ACCELERATE 1 &lt;&lt; 28 DECELERATE 1 &lt;&lt; 29 BURST3 1 &lt;&lt; 30 CONTINUUM Bullets reappear from the opposite side as they leave the screen 1 &lt;&lt; 31 CANT_HIT_PLAYER 1 &lt;&lt; 32 CHANGE_FLAGS_AFTER_TIMEOUT \"Change\" flags will change the bullet's behavior after a timeout. change m_ProjectileFlags to m_TimeoutProjectileFlags. 1 &lt;&lt; 33 CHANGE_VELOCITY_AFTER_TIMEOUT \"Change\" flags will change the bullet's behavior after a timeout. 1 &lt;&lt; 34 STASIS 1 &lt;&lt; 35 FIRE_WAVE 1 &lt;&lt; 36 FIRE_WAVE_X 1 &lt;&lt; 37 ACCELERATE_EX 1 &lt;&lt; 38 BURST8 1 &lt;&lt; 39 FIRE_SPAWN 1 &lt;&lt; 40 ANTI_GRAVITY 1 &lt;&lt; 41 TRACTOR_BEAM 1 &lt;&lt; 42 BOUNCE 1 &lt;&lt; 43 BOUNCE_FLOOR 1 &lt;&lt; 44 SHIELDED 1 &lt;&lt; 45 BLUE_FIRE_SPAWN 1 &lt;&lt; 46 LASER_SHOT 1 &lt;&lt; 47 GODHEAD 1 &lt;&lt; 48 SMART_PERFECT 1 &lt;&lt; 49 BURSTSPLIT 1 &lt;&lt; 50 WIGGLE_ROTGUT 1 &lt;&lt; 51 FREEZE 1 &lt;&lt; 52 ACCELERATE_TO_POSITION 1 &lt;&lt; 53 BROCCOLI 1 &lt;&lt; 54 BACKSPLIT 1 &lt;&lt; 55 SIDEWAVE 1 &lt;&lt; 56 ORBIT_PARENT 1 &lt;&lt; 57 FADEOUT","tags":["Enum"]},{"location":"enums/ProjectileVariant.html","title":"Enum \"ProjectileVariant\"","text":"DLC Value Enumerator Comment 0 PROJECTILE_NORMAL 1 PROJECTILE_BONE 2 PROJECTILE_FIRE 3 PROJECTILE_PUKE 4 PROJECTILE_TEAR 5 PROJECTILE_CORN 6 PROJECTILE_HUSH 7 PROJECTILE_COIN 8 PROJECTILE_GRID rocks thrown by Polties 9 PROJECTILE_ROCK stone shot 10 PROJECTILE_RING unused 11 PROJECTILE_MEAT globin shot 12 PROJECTILE_FCUK steven shot 13 PROJECTILE_WING feather shot (from Dogma) 14 PROJECTILE_LAVA lava ball (from Beast boss fight) 15 PROJECTILE_HEAD dead gaper flung by Mother 16 PROJECTILE_PEEP eye shot","tags":["Enum"]},{"location":"enums/RenderMode.html","title":"Enum \"RenderMode\"","text":"DLC Value Enumerator Comment 0 RENDER_NULL Currently not rendering room entities 1 RENDER_NORMAL Rendering room entities normally (in a dry room) 2 RENDER_SKIP 3 RENDER_WATER_ABOVE Rendering room entities above the water in a flooded room 4 RENDER_WATER_REFRACT Rendering room entities below the water in a flooded room 5 RENDER_WATER_REFLECT Rendering the reflection of room entities in a flooded room","tags":["Enum"]},{"location":"enums/RoomDescriptor.html","title":"Enum \"RoomDescriptor\"","text":"<p>The \"RoomDescriptor\" Class has separate Enums that are used for special information handling.</p> <p>Even though they have different prefixes, all enums on this page are part of the \"RoomDescriptor\" enum.</p> DLC Value Enumerator Comment 0 DISPLAY_NONE 1 DISPLAY_BOX 2 DISPLAY_LOCK 3 DISPLAY_ICON 4 DISPLAY_ALL DLC Value Enumerator Comment 1 &lt;&lt; 0 FLAG_CLEAR Room is clear, don't spawn enemies when visiting 1 &lt;&lt; 1 FLAG_PRESSURE_PLATES_TRIGGERED All pressure plates have been triggered in this room. This won't be set if there are no trigger pressure plates in the first place. 1 &lt;&lt; 2 FLAG_SACRIFICE_DONE Sacrifice room has paid out 1 &lt;&lt; 3 FLAG_CHALLENGE_DONE Challenge room finished 1 &lt;&lt; 4 FLAG_SURPRISE_MINIBOSS Load Greed/Krampus instead of the room specified by Type, Variant 1 &lt;&lt; 5 FLAG_HAS_WATER Pits in this room contain water 1 &lt;&lt; 6 FLAG_ALT_BOSS_MUSIC Play alternate boss music in this room 1 &lt;&lt; 7 FLAG_NO_REWARD Don't pay out with a reward when clearing this room, used for traps that lock the player in the room when triggered 1 &lt;&lt; 8 FLAG_FLOODED Was flooded by an item (i.e. Flush) 1 &lt;&lt; 9 FLAG_PITCH_BLACK Complete darkness 1 &lt;&lt; 10 FLAG_RED_ROOM Room spawned by Red Key 1 &lt;&lt; 11 FLAG_DEVIL_TREASURE Treasure room transformed by Devil's Crown 1 &lt;&lt; 12 FLAG_USE_ALTERNATE_BACKDROP Use an alternate backdrop (this is used by some floors such as Dross and Ashpit) 1 &lt;&lt; 13 FLAG_CURSED_MIST Room is covered in cursed mist, player is temporarily reduced to base items and stats 1 &lt;&lt; 14 FLAG_MAMA_MEGA Mama Mega has activated in this room 1 &lt;&lt; 15 FLAG_NO_WALLS Don't generate walls (for Beast arena) 1 &lt;&lt; 16 FLAG_ROTGUT_CLEARED Rotgut's heart was killed, immediately play Rotgut's death animation when reentering this room 1 &lt;&lt; 17 FLAG_PORTAL_LINKED A portal spawned by Lil Portal now links to this room, don't create more portals that link to it 1 &lt;&lt; 18 FLAG_BLUE_REDIRECT If walking into this room through a door, redirect to a Blue Womb room instead (this is used by Blue Key)","tags":["Enum"]},{"location":"enums/RoomShape.html","title":"Enum \"RoomShape\"","text":"DLC Value Enumerator Preview Possible Gridindicies Comment 1 ROOMSHAPE_1x1 0-134 2 ROOMSHAPE_IH 0-134 3 ROOMSHAPE_IV 0-134 4 ROOMSHAPE_1x2 0-239 5 ROOMSHAPE_IIV 0-239 6 ROOMSHAPE_2x1 0-251 7 ROOMSHAPE_IIH 0-251 8 ROOMSHAPE_2x2 0-447 9 ROOMSHAPE_LTL 0-447 10 ROOMSHAPE_LTR 0-447 11 ROOMSHAPE_LBL 0-447 12 ROOMSHAPE_LBR 0-447 13 NUM_ROOMSHAPES","tags":["Enum"]},{"location":"enums/RoomTransitionAnim.html","title":"Enum \"RoomTransitionAnim\"","text":"DLC Value Enumerator Comment 0 WALK Mostly when using doors. Will play the correct walk animation regardless of the direction you use, as long as the direction is in the same axis as the room you're traveling too. So if the room is on the left, it'll play the correct animation whether you use Direction.LEFT or Direction.RIGHT. If you put in the wrong direction, it'll just fade to the next room (not fade to black, just fade). If you put in Direction.NO_DIRECTION it'll play a fade to black regardless. 1 FADE Fadein/fadout used for Mom's Hand. Will play a fade to black regardless of the direction. If the direction is Direction.NO_DIRECTION the fade will be shorter. 2 PIXELATION Fade+pixelation effect used for secret item dungeon. Will play the usual pixelation regardless of the direction. 3 TELEPORT Will play the teleport animation and sound, then it'll play the walk animation using the direction you inputted. If Direction.NO_DIRECTION is used, it'll play a short fade to white instead of the walk animation. 4 MAZE For curse of the maze. Like RoomTransitionAnim.WALK but better, as it will always play the walk animation you put into it. Using Direction.NO_DIRECTION will play a short fade to black. 5 ANKH Works like RoomTransitionAnim.MAZE. 6 DEAD_CAT Works like RoomTransitionAnim.MAZE. 7 ONE_UP Works like RoomTransitionAnim.MAZE but plays the one up sound upon entering the room. 8 COLLAR Works like RoomTransitionAnim.MAZE. 9 JUDAS_SHADOW Works like RoomTransitionAnim.MAZE. 10 LAZARUS Works like RoomTransitionAnim.MAZE. 11 WOMB_TELEPORT For Ventricle razor teleport. Makes the player invisible and plays a fade to black. If used to change into the same room, the player's visibility won't be restored. If Direction.NO_DIRECTION is used, it'll play a shorter fade to black. 12 GLOWING_HOURGLASS For glowing hourglass teleport. Basically the same as using the glowing hourglass item, further testing should be done to see if there are any differences. Ignores the direction and the room index inputted. 13 D7 The same as RoomTransitionAnim.TELEPORT, but on Direction.NO_DIRECTION it'll play a fade to black, instead of a fade to white. 14 MISSING_POSTER Works like RoomTransitionAnim.MAZE. 15 BOSS_FORCED No transition, goes directly to boss intro (for backasswards challenge). Plays a walk animation twice. If used with Direction.NO_DIRECTION plays a short fade to black. Doesnt even skip the boss vs screen. 16 PORTAL_TELEPORT For card reading teleport. Works like RoomTransitionAnim.WOMB_TELEPORT. 17 FORGOTTEN_TELEPORT For the Forgotten's birthright. Works like RoomTransitionAnim.FADE. 18 FADE_MIRROR Plays the mirror exit sound and a fade to white animation. If used with Direction.NO_DIRECTION, the fade to white is shorter. 19 MINECART Works like RoomTransitionAnim.FADE. 20 DEATH_CERTIFICATE The player lies down, then there's a fade to black and the player appears lying down again and gets up. Ignores the direction, but using Direction.NO_DIRECTION will make the fade shorter. The game is paused during the lying down and getting up animation.","tags":["Enum"]},{"location":"enums/RoomType.html","title":"Enum \"RoomType\"","text":"DLC Value Enumerator Icon Comment 0 ROOM_NULL 1 ROOM_DEFAULT 2 ROOM_SHOP 3 ROOM_ERROR 4 ROOM_TREASURE 5 ROOM_BOSS 6 ROOM_MINIBOSS 7 ROOM_SECRET 8 ROOM_SUPERSECRET 9 ROOM_ARCADE 10 ROOM_CURSE 11 ROOM_CHALLENGE Normal Challenge:  Boss Challenge:  12 ROOM_LIBRARY 13 ROOM_SACRIFICE 14 ROOM_DEVIL 15 ROOM_ANGEL 16 ROOM_DUNGEON a.k.a. Crawlspaces 17 ROOM_BOSSRUSH 18 ROOM_ISAACS 19 ROOM_BARREN 20 ROOM_CHEST 21 ROOM_DICE 22 ROOM_BLACK_MARKET 23 ROOM_GREED_EXIT 24 ROOM_PLANETARIUM 25 ROOM_TELEPORTER Mausoleum teleporter entrance, currently unused 26 ROOM_TELEPORTER_EXIT Mausoleum teleporter exit, currently unused 27 ROOM_SECRET_EXIT Trapdoor room to the alt path floors 28 ROOM_BLUE Blue Womb rooms spawned by Blue Key 29 ROOM_ULTRASECRET Red secret rooms 30 NUM_ROOMTYPES","tags":["Enum"]},{"location":"enums/SackSubType.html","title":"Enum \"SackSubType\"","text":"DLC Value Enumerator Comment 1 SACK_NORMAL 2 SACK_BLACK","tags":["Enum"]},{"location":"enums/SeedEffect.html","title":"Enum \"SeedEffect\"","text":"DLC Value Enumerator Comment 0 SEED_NORMAL 1 SEED_MOVEMENT_PITCH 2 SEED_HEALTH_PITCH 3 SEED_CAMO_ISAAC 4 SEED_CAMO_ENEMIES 5 SEED_CAMO_PICKUPS 6 SEED_CAMO_EVERYTHING 7 SEED_FART_SOUNDS 8 SEED_OLD_TV 9 SEED_DYSLEXIA 10 SEED_NO_HUD 11 SEED_PICKUPS_SLIDE 12 SEED_CONTROLS_REVERSED 13 SEED_ALL_CHAMPIONS 14 SEED_INVISIBLE_ISAAC 15 SEED_INVISIBLE_ENEMIES 16 SEED_INFINITE_BASEMENT 17 SEED_ALWAYS_CHARMED 18 SEED_ALWAYS_CONFUSED 19 SEED_ALWAYS_AFRAID 20 SEED_ALWAYS_ALTERNATING_FEAR 21 SEED_ALWAYS_CHARMED_AND_AFRAID 23 SEED_EXTRA_BLOOD 24 SEED_POOP_TRAIL 25 SEED_PACIFIST 26 SEED_DAMAGE_WHEN_STOPPED 27 SEED_DAMAGE_ON_INTERVAL 28 SEED_DAMAGE_ON_TIME_LIMIT 29 SEED_PILLS_NEVER_IDENTIFY 30 SEED_MYSTERY_TAROT_CARDS 32 SEED_ENEMIES_RESPAWN 33 SEED_ITEMS_COST_MONEY 35 SEED_BIG_HEAD 36 SEED_SMALL_HEAD 37 SEED_BLACK_ISAAC 38 SEED_GLOWING_TEARS 41 SEED_SLOW_MUSIC 42 SEED_ULTRA_SLOW_MUSIC 43 SEED_FAST_MUSIC 44 SEED_ULTRA_FAST_MUSIC 46 SEED_NO_FACE 47 SEED_ISAAC_TAKES_HIGH_DAMAGE 48 SEED_ISAAC_TAKES_MASSIVE_DAMAGE 52 SEED_ICE_PHYSICS 53 SEED_KAPPA 54 SEED_CHRISTMAS 55 SEED_KIDS_MODE 56 SEED_PERMANENT_CURSE_DARKNESS 57 SEED_PERMANENT_CURSE_LABYRINTH 58 SEED_PERMANENT_CURSE_LOST 59 SEED_PERMANENT_CURSE_UNKNOWN 60 SEED_PERMANENT_CURSE_MAZE 61 SEED_PERMANENT_CURSE_BLIND 62 SEED_PERMANENT_CURSE_CURSED 63 SEED_PREVENT_CURSE_DARKNESS 64 SEED_PREVENT_CURSE_LABYRINTH 65 SEED_PREVENT_CURSE_LOST 66 SEED_PREVENT_CURSE_UNKNOWN 67 SEED_PREVENT_CURSE_MAZE 68 SEED_PREVENT_CURSE_BLIND 70 SEED_PREVENT_ALL_CURSES 71 SEED_NO_BOSS_ROOM_EXITS 72 SEED_PICKUPS_TIMEOUT 73 SEED_INVINCIBLE 74 SEED_SHOOT_IN_MOVEMENT_DIRECTION 75 SEED_SHOOT_OPPOSITE_MOVEMENT_DIRECTION 76 SEED_AXIS_ALIGNED_CONTROLS 77 SEED_SUPER_HOT 78 SEED_RETRO_VISION 79 SEED_G_FUEL 80 NUM_SEEDS","tags":["Enum"]},{"location":"enums/SkinColor.html","title":"Enum \"SkinColor\"","text":"DLC Value Enumerator Comment -1 SKIN_PINK 0 SKIN_WHITE 1 SKIN_BLACK 2 SKIN_BLUE 3 SKIN_RED 4 SKIN_GREEN 5 SKIN_GREY 6 SKIN_SHADOW","tags":["Enum"]},{"location":"enums/SortingLayer.html","title":"Enum \"SortingLayer\"","text":"DLC Value Enumerator Comment 0 SORTING_BACKGROUND Background level, behind grid entities (creep, pitfalls) 1 SORTING_DOOR Used by door Xray animation 2 SORTING_NORMAL Uses Y position to determine Z sorting","tags":["Enum"]},{"location":"enums/SoundEffect.html","title":"Enum \"SoundEffect\"","text":"DLC Value Enumerator Sound Comment 0 SOUND_NULL 1 SOUND_1UP 2 SOUND_BIRD_FLAP 3 SOUND_BLOBBY_WIGGLE 4 SOUND_INSECT_SWARM_LOOP 5 SOUND_BLOOD_LASER 6 SOUND_BLOOD_LASER_SMALL 7 SOUND_BLOOD_LASER_LARGE 8 SOUND_BOOK_PAGE_TURN_12 9 SOUND_BOSS_BUG_HISS 10 SOUND_BLOOD_LASER_LARGER 11 SOUND_BOSS_GURGLE_ROAR 12 SOUND_BOSS_LITE_GURGLE 13 SOUND_BOSS_LITE_HISS 14 SOUND_BOSS_LITE_ROAR 15 SOUND_BOSS_LITE_SLOPPY_ROAR 16 SOUND_BOSS_SPIT_BLOB_BARF 17 SOUND_PAPER_IN 18 SOUND_PAPER_OUT 21 SOUND_CHEST_DROP 22 SOUND_CHEST_OPEN 23 SOUND_CHOIR_UNLOCK 24 SOUND_COIN_SLOT 25 SOUND_CUTE_GRUNT 27 SOUND_DEATH_BURST_BONE 28 SOUND_DEATH_BURST_LARGE 29 SOUND_DEATH_REVERSE 30 SOUND_DEATH_BURST_SMALL 33 SOUND_DEATH_CARD 34 SOUND_DEVIL_CARD 35 SOUND_DOOR_HEAVY_CLOSE 36 SOUND_DOOR_HEAVY_OPEN 37 SOUND_FART 38 SOUND_FETUS_JUMP 40 SOUND_FETUS_LAND 43 SOUND_FIREDEATH_HISS 44 SOUND_FLOATY_BABY_ROAR 45 SOUND_COIN_INSERT 46 SOUND_METAL_DOOR_CLOSE 47 SOUND_METAL_DOOR_OPEN 48 SOUND_FORESTBOSS_STOMPS 49 SOUND_SCYTHE_BREAK 50 SOUND_STONE_WALKER 51 SOUND_GASCAN_POUR 52 SOUND_HELLBOSS_GROUNDPOUND 53 SOUND_GLASS_BREAK 54 SOUND_HOLY 55 SOUND_ISAAC_HURT_GRUNT 56 SOUND_CHILD_HAPPY_ROAR_SHORT 57 SOUND_CHILD_ANGRY_ROAR 58 SOUND_KEYPICKUP_GAUNTLET 59 SOUND_KEY_DROP0 60 SOUND_BABY_HURT 64 SOUND_MAGGOT_BURST_OUT 66 SOUND_MAGGOT_ENTER_GROUND 68 SOUND_MEAT_FEET_SLOW0 69 SOUND_MEAT_IMPACTS 72 SOUND_MEAT_JUMPS 77 SOUND_MEATY_DEATHS 78 SOUND_POT_BREAK_2 79 SOUND_MUSHROOM_POOF_2 80 SOUND_BLACK_POOF 81 SOUND_STATIC 82 SOUND_MOM_VOX_DEATH 84 SOUND_MOM_VOX_EVILLAUGH 85 SOUND_MOM_VOX_FILTERED_DEATH_1 86 SOUND_MOM_VOX_FILTERED_EVILLAUGH 87 SOUND_MOM_VOX_FILTERED_HURT 90 SOUND_MOM_VOX_FILTERED_ISAAC 93 SOUND_MOM_VOX_GRUNT 97 SOUND_MOM_VOX_HURT 101 SOUND_MOM_VOX_ISAAC 104 SOUND_MONSTER_GRUNT_0 106 SOUND_MONSTER_GRUNT_1 108 SOUND_MONSTER_GRUNT_2 112 SOUND_MONSTER_GRUNT_4 114 SOUND_MONSTER_GRUNT_5 115 SOUND_MONSTER_ROAR_0 116 SOUND_MONSTER_ROAR_1 117 SOUND_MONSTER_ROAR_2 118 SOUND_MONSTER_ROAR_3 119 SOUND_MONSTER_YELL_A 122 SOUND_MONSTER_YELL_B 128 SOUND_POWERUP1 129 SOUND_POWERUP2 130 SOUND_POWERUP3 132 SOUND_POWERUP_SPEWER 133 SOUND_REDLIGHTNING_ZAP 134 SOUND_REDLIGHTNING_ZAP_WEAK 135 SOUND_REDLIGHTNING_ZAP_STRONG 136 SOUND_REDLIGHTNING_ZAP_BURST 137 SOUND_ROCK_CRUMBLE 138 SOUND_POT_BREAK 139 SOUND_MUSHROOM_POOF 141 SOUND_ROCKET_BLAST_DEATH 142 SOUND_SMB_LARGE_CHEWS_4 143 SOUND_SCARED_WHIMPER 146 SOUND_SHAKEY_KID_ROAR 149 SOUND_SINK_DRAIN_GURGLE 150 SOUND_TEARIMPACTS 153 SOUND_TEARS_FIRE 156 SOUND_UNLOCK00 157 SOUND_VAMP_GULP 158 SOUND_WHEEZY_COUGH 159 SOUND_SPIDER_COUGH 160 SOUND_PORTAL_OPEN 161 SOUND_PORTAL_LOOP 162 SOUND_PORTAL_SPAWN 163 SOUND_TAR_LOOP 165 SOUND_ZOMBIE_WALKER_KID 166 SOUND_ANIMAL_SQUISH 167 SOUND_ANGRY_GURGLE 169 SOUND_BAND_AID_PICK_UP 170 SOUND_BATTERYCHARGE 171 SOUND_BEEP 172 SOUND_LIGHTBOLT 173 SOUND_LIGHTBOLT_CHARGE 175 SOUND_BLOODBANK_SPAWN 178 SOUND_BLOODSHOOT 181 SOUND_BOIL_HATCH 182 SOUND_BOSS1_EXPLOSIONS 183 SOUND_EXPLOSION_WEAK 184 SOUND_EXPLOSION_STRONG 185 SOUND_BOSS2_BUBBLES 186 SOUND_EXPLOSION_DEBRIS 187 SOUND_BOSS2INTRO_ERRORBUZZ 190 SOUND_CASTLEPORTCULLIS 194 SOUND_CHARACTER_SELECT_LEFT 195 SOUND_CHARACTER_SELECT_RIGHT 197 SOUND_DERP 198 SOUND_DIMEDROP 199 SOUND_DIMEPICKUP 200 SOUND_LUCKYPICKUP 201 SOUND_FETUS_FEET 204 SOUND_GOLDENKEY 205 SOUND_GOOATTACH0 207 SOUND_GOODEATH 211 SOUND_HAND_LASERS 212 SOUND_HEARTIN 213 SOUND_HEARTOUT 214 SOUND_HELL_PORTAL1 215 SOUND_HELL_PORTAL2 217 SOUND_ISAACDIES 218 SOUND_ITEMRECHARGE 219 SOUND_KISS_LIPS1 221 SOUND_LEECH 224 SOUND_MAGGOTCHARGE 226 SOUND_MEATHEADSHOOT 229 SOUND_METAL_BLOCKBREAK 231 SOUND_NICKELDROP 232 SOUND_NICKELPICKUP 233 SOUND_PENNYDROP 234 SOUND_PENNYPICKUP 237 SOUND_PLOP 238 SOUND_SATAN_APPEAR 239 SOUND_SATAN_BLAST 240 SOUND_SATAN_CHARGE_UP 241 SOUND_SATAN_GROW 242 SOUND_SATAN_HURT 243 SOUND_SATAN_RISE_UP 245 SOUND_SATAN_SPIT 246 SOUND_SATAN_STOMP 249 SOUND_SCAMPER 252 SOUND_SHELLGAME 255 SOUND_SLOTSPAWN 258 SOUND_SPLATTER 261 SOUND_STEAM_HALFSEC 262 SOUND_STONESHOOT 263 SOUND_WEIRD_WORM_SPIT 265 SOUND_SUMMONSOUND 266 SOUND_SUPERHOLY 267 SOUND_THUMBS_DOWN 268 SOUND_THUMBSUP 269 SOUND_FIRE_BURN 270 SOUND_HAPPY_RAINBOW 271 SOUND_LASERRING new (ab) 272 SOUND_LASERRING_WEAK new (ab) 273 SOUND_LASERRING_STRONG new (ab) 274 SOUND_CASH_REGISTER new (ab+) 275 SOUND_ANGEL_WING 276 SOUND_ANGEL_BEAM 277 SOUND_HOLY_MANTLE 278 SOUND_MEGA_BLAST_START 279 SOUND_MEGA_BLAST_LOOP 280 SOUND_MEGA_BLAST_END 281 SOUND_BLOOD_LASER_LOOP 282 SOUND_MENU_SCROLL 283 SOUND_MENU_NOTE_APPEAR 284 SOUND_MENU_NOTE_HIDE 285 SOUND_MENU_CHARACTER_SELECT 286 SOUND_SUMMON_POOF 300 SOUND_BOO_MAD 301 SOUND_FART_GURG 302 SOUND_FAT_GRUNT 303 SOUND_FAT_WIGGLE 304 SOUND_FIRE_RUSH 305 SOUND_GHOST_ROAR 306 SOUND_GHOST_SHOOT 307 SOUND_GRROOWL 308 SOUND_GURG_BARF 309 SOUND_INHALE 310 SOUND_LOW_INHALE 311 SOUND_MEGA_PUKE 312 SOUND_MOUTH_FULL 313 SOUND_MULTI_SCREAM 314 SOUND_SKIN_PULL 315 SOUND_WHISTLE 316 SOUND_DEVILROOM_DEAL 317 SOUND_SPIDER_SPIT_ROAR 318 SOUND_WORM_SPIT 319 SOUND_LITTLE_SPIT 320 SOUND_SATAN_ROOM_APPEAR 321 SOUND_HEARTBEAT 322 SOUND_HEARTBEAT_FASTER 323 SOUND_HEARTBEAT_FASTEST 324 SOUND_48_HR_ENERGY 325 SOUND_ALGIZ 326 SOUND_AMNESIA 327 SOUND_ANZUS 328 SOUND_BAD_GAS 329 SOUND_BAD_TRIP 330 SOUND_BALLS_OF_STEEL 331 SOUND_BERKANO 332 SOUND_BOMBS_ARE_KEY 333 SOUND_CARD_VS_HUMAN 334 SOUND_CHAOS_CARD 335 SOUND_CREDIT_CARD 336 SOUND_DAGAZ 337 SOUND_DEATH 338 SOUND_EHWAZ 339 SOUND_EXPLOSIVE_DIAH 340 SOUND_FULL_HP 341 SOUND_HAGALAZ 342 SOUND_HP_DOWN 343 SOUND_HP_UP 344 SOUND_HEMATEMISIS 345 SOUND_I_FOUND_PILLS 346 SOUND_JERA 347 SOUND_JOKER 348 SOUND_JUDGEMENT 349 SOUND_JUSTICE 350 SOUND_LEMON_PARTY 351 SOUND_LUCK_DOWN 352 SOUND_LUCK_UP 353 SOUND_PARALYSIS 354 SOUND_PERTHRO 355 SOUND_PHEROMONES 356 SOUND_PRETTY_FLY 357 SOUND_PUBERTY 358 SOUND_RUA_WIZ 359 SOUND_RANGE_DOWN 360 SOUND_RANGE_UP 361 SOUND_RULES_CARD 362 SOUND_SEE_4EVER 363 SOUND_SPEED_DOWN 364 SOUND_SPEED_UP 365 SOUND_STRENGTH 366 SOUND_SUICIDE_KING 367 SOUND_TEARS_DOWN 368 SOUND_TEARS_UP 369 SOUND_TELEPILLS 370 SOUND_TEMPERANCE 371 SOUND_THE_CHARIOT 372 SOUND_THE_DEVIL 373 SOUND_THE_EMPEROR 374 SOUND_EMPRESS 375 SOUND_FOOL 376 SOUND_HANGED_MAN 377 SOUND_HERMIT 378 SOUND_HIEROPHANT 379 SOUND_HIGHT_PRIESTESS 380 SOUND_THE_LOVERS 381 SOUND_MAGICIAN 382 SOUND_MOON 383 SOUND_STARS 384 SOUND_SUN 385 SOUND_TOWER 386 SOUND_WORLD 387 SOUND_TWO_CLUBS 388 SOUND_TWO_DIAMONDS 389 SOUND_TWO_HEARTS 390 SOUND_TWO_SPADES 391 SOUND_WHEEL_OF_FORTUNE 392 SOUND_RAGMAN_1 393 SOUND_RAGMAN_2 394 SOUND_RAGMAN_3 395 SOUND_RAGMAN_4 396 SOUND_FLUSH 397 SOUND_WATER_DROP 398 SOUND_WET_FEET 399 SOUND_ADDICTED 400 SOUND_DICE_SHARD 401 SOUND_EMERGENCY 402 SOUND_INFESTED_EXCL 403 SOUND_INFESTED_QUEST 404 SOUND_JAIL_CARD 405 SOUND_LARGER 406 SOUND_PERCS 407 SOUND_POWER_PILL 408 SOUND_QUESTION_MARK 409 SOUND_RELAX 410 SOUND_RETRO 411 SOUND_SMALL 412 SOUND_QQQ ??? pill 413 SOUND_DANGLE_WHISTLE 414 SOUND_LITTLE_HORN_COUGH 415 SOUND_LITTLE_HORN_GRUNT_1 416 SOUND_LITTLE_HORN_GRUNT_2 417 SOUND_THE_FORSAKEN_LAUGH 418 SOUND_THE_FORSAKEN_SCREAM 419 SOUND_THE_STAIN_BURST 420 SOUND_BROWNIE_LAUGH 421 SOUND_HUSH_ROAR 422 SOUND_HUSH_GROWL 423 SOUND_HUSH_LOW_ROAR 424 SOUND_FRAIL_CHARGE 425 SOUND_HUSH_CHARGE 426 SOUND_MAW_OF_VOID 427 SOUND_ULTRA_GREED_COIN_DESTROY 428 SOUND_ULTRA_GREED_COINS_FALLING 429 SOUND_ULTRA_GREED_DEATH_SCREAM 430 SOUND_ULTRA_GREED_TURN_GOLD_1 431 SOUND_ULTRA_GREED_TURN_GOLD_2 432 SOUND_ULTRA_GREED_ROAR_1 433 SOUND_ULTRA_GREED_ROAR_2 434 SOUND_ULTRA_GREED_SPIT 435 SOUND_ULTRA_GREED_PULL_SLOT 436 SOUND_ULTRA_GREED_SLOT_SPIN_LOOP 437 SOUND_ULTRA_GREED_SLOT_STOP 438 SOUND_ULTRA_GREED_SLOT_WIN_LOOP_END 439 SOUND_ULTRA_GREED_SLOT_WIN_LOOP 440 SOUND_ULTRA_GREED_SPINNING 441 SOUND_DOG_BARK 442 SOUND_DOG_HOWELL 443 SOUND_X_LAX 444 SOUND_WRONG 445 SOUND_VURP 446 SOUND_SUNSHINE 447 SOUND_SPADES 448 SOUND_HORF 449 SOUND_HOLY_CARD 450 SOUND_HEARTS 451 SOUND_GULP 452 SOUND_FRIENDS 453 SOUND_EXCITED 454 SOUND_DROWSY 455 SOUND_DIAMONDS 456 SOUND_CLUBS 457 SOUND_BLACK_RUNE 458 SOUND_PING_PONG 459 SOUND_SPEWER 460 SOUND_MOM_FOOTSTEPS 461 SOUND_BONE_HEART 462 SOUND_BONE_SNAP 463 SOUND_SHOVEL_DROP 464 SOUND_SHOVEL_DIG 465 SOUND_GOLD_HEART 466 SOUND_GOLD_HEART_DROP 467 SOUND_BONE_DROP 468 SOUND_UNHOLY 469 SOUND_BUTTON_PRESS 470 SOUND_GOLDENBOMB 471 SOUND_CANDLE_LIGHT 472 SOUND_THUNDER 473 SOUND_WATER_FLOW_LOOP 474 SOUND_BOSS2_DIVE 475 SOUND_BOSS2INTRO_PIPES_TURNON 476 SOUND_WATER_FLOW_LARGE 477 SOUND_DEMON_HIT 478 SOUND_PUNCH 479 SOUND_FLUTE 480 SOUND_LAVA_LOOP 481 SOUND_WOOD_PLANK_BREAK 482 SOUND_BULLET_SHOT 483 SOUND_FLAME_BURST 484 SOUND_INFLATE 485 SOUND_CLAP 486 SOUND_BOSS2INTRO_WATER_EXPLOSION 487 SOUND_STONE_IMPACT 488 SOUND_BOSS2_WATERTHRASHING 489 SOUND_FART_MEGA 490 SOUND_MATCHSTICK 491 SOUND_FORTUNE_COOKIE 492 SOUND_BULB_FLASH 493 SOUND_BATTERYDISCHARGE 494 SOUND_WHIP 495 SOUND_WHIP_HIT 496 SOUND_FREEZE 497 SOUND_ROTTEN_HEART 498 SOUND_FREEZE_SHATTER 499 SOUND_BONE_BOUNCE 500 SOUND_BONE_BREAK 501 SOUND_BISHOP_HIT 502 Does not exist anymore 503 SOUND_CHAIN_LOOP 504 SOUND_CHAIN_BREAK 505 SOUND_MINECART_LOOP 506 SOUND_TOOTH_AND_NAIL 507 SOUND_TOOTH_AND_NAIL_TICK 508 SOUND_STATIC_BUILDUP 509 SOUND_THREAD_SNAP 510 SOUND_BIG_LEECH 511 SOUND_REVERSE_EXPLOSION 512 SOUND_REVERSE_FOOL 513 SOUND_REVERSE_MAGICIAN 514 SOUND_REVERSE_HIGH_PRIESTESS 515 SOUND_REVERSE_EMPRESS 516 SOUND_REVERSE_EMPEROR 517 SOUND_REVERSE_HIEROPHANT 518 SOUND_REVERSE_LOVERS 519 SOUND_REVERSE_CHARIOT 520 SOUND_REVERSE_JUSTICE 521 SOUND_REVERSE_HERMIT 522 SOUND_REVERSE_WHEEL_OF_FORTUNE 523 SOUND_REVERSE_STRENGTH 524 SOUND_REVERSE_HANGED_MAN 525 SOUND_REVERSE_DEATH 526 SOUND_REVERSE_TEMPERANCE 527 SOUND_REVERSE_DEVIL 528 SOUND_REVERSE_TOWER 529 SOUND_REVERSE_STARS 530 SOUND_REVERSE_MOON 531 SOUND_REVERSE_SUN 532 SOUND_REVERSE_JUDGEMENT 533 SOUND_REVERSE_WORLD 534 SOUND_FLAMETHROWER_START 535 SOUND_FLAMETHROWER_LOOP 536 SOUND_FLAMETHROWER_END 537 SOUND_ROCKET_LAUNCH 538 SOUND_SWORD_SPIN 539 SOUND_BABY_BRIM 540 SOUND_KNIFE_PULL 541 SOUND_DOGMA_APPEAR_SCREAM 542 SOUND_DOGMA_DEATH 543 SOUND_DOGMA_BLACKHOLE_CHARGE 544 SOUND_DOGMA_BLACKHOLE_SHOOT 545 SOUND_DOGMA_BLACKHOLE_OPEN 546 SOUND_DOGMA_BLACKHOLE_CLOSE 547 SOUND_DOGMA_BRIMSTONE_CHARGE 548 SOUND_DOGMA_BRIMSTONE_SHOOT 549 SOUND_DOGMA_GODHEAD 550 SOUND_DOGMA_JACOBS 551 SOUND_DOGMA_JACOBS_ZAP 552 SOUND_DOGMA_SCREAM 553 SOUND_DOGMA_PREACHER 554 SOUND_DOGMA_RING_START 555 SOUND_DOGMA_RING_LOOP 556 SOUND_DOGMA_FEATHER_SPRAY 557 SOUND_DOGMA_JACOBS_DOT 558 SOUND_DOGMA_BLACKHOLE_LOOP 559 SOUND_DOGMA_ANGEL_TRANSFORM 560 SOUND_DOGMA_ANGEL_TRANSFORM_END 561 SOUND_DOGMA_LIGHT_APPEAR 562 SOUND_DOGMA_LIGHT_BALL_THROW 563 SOUND_DOGMA_LIGHT_RAY_CHARGE 564 SOUND_DOGMA_LIGHT_RAY_FIRE 565 SOUND_DOGMA_SPIN_ATTACK 566 SOUND_DOGMA_WING_FLAP 567 SOUND_DOGMA_TV_BREAK 568 SOUND_DIVINE_INTERVENTION 569 SOUND_MENU_FLIP_LIGHT 570 SOUND_MENU_FLIP_DARK 571 SOUND_MENU_RIP 572 SOUND_URN_OPEN 573 SOUND_URN_CLOSE 574 SOUND_RECALL 575 SOUND_LARYNX_SCREAM_LO 576 SOUND_LARYNX_SCREAM_MED 577 SOUND_LARYNX_SCREAM_HI 578 SOUND_GROUND_TREMOR 579 SOUND_SOUL_PICKUP 580 SOUND_BALL_AND_CHAIN_LOOP 581 SOUND_BALL_AND_CHAIN_HIT 582 SOUND_LAZARUS_FLIP_DEAD 583 SOUND_LAZARUS_FLIP_ALIVE 584 SOUND_RECALL_FINISH 585 SOUND_ROCKET_LAUNCH_SHORT 586 SOUND_ROCKET_LAUNCH_TINY 587 SOUND_ROCKET_EXPLOSION 588 SOUND_JELLY_BOUNCE 589 SOUND_POOP_LASER 590 SOUND_POISON_WARN 591 SOUND_POISON_HURT 592 SOUND_BERSERK_START 593 SOUND_BERSERK_TICK 594 SOUND_BERSERK_END 595 SOUND_EDEN_GLITCH 596 SOUND_RAILROAD_TRACK_RAISE 597 SOUND_RAILROAD_TRACK_RAISE_FAR 598 SOUND_MOM_AND_DAD_1 599 SOUND_MOM_AND_DAD_2 600 SOUND_MOM_AND_DAD_3 601 SOUND_MOM_AND_DAD_4 602 SOUND_THUMBSUP_AMPLIFIED 603 SOUND_THUMBSDOWN_AMPLIFIED 604 SOUND_POWERUP_SPEWER_AMPLIFIED 605 SOUND_POOPITEM_THROW 606 SOUND_POOPITEM_STORE 607 SOUND_POOPITEM_HOLD 608 SOUND_MIRROR_ENTER 609 SOUND_MIRROR_EXIT 610 SOUND_MIRROR_BREAK 611 SOUND_ANIMA_TRAP 612 SOUND_ANIMA_RATTLE 613 SOUND_ANIMA_BREAK 614 SOUND_VAMP_DOUBLE 615 SOUND_FLASHBACK 616 SOUND_DARK_ESAU_OPEN 617 SOUND_DARK_ESAU_DEATH_OPEN 618 SOUND_MOTHER_DEATH1 619 SOUND_MOTHER_DEATH2 620 SOUND_MOTHER_FISTPOUND1 621 SOUND_MOTHER_FISTPOUND2 622 SOUND_MOTHER_FISTPOUND3 623 SOUND_MOTHER_FISTULA 624 SOUND_MOTHER_APPEAR1 625 SOUND_MOTHER_APPEAR2 626 SOUND_MOTHER_KNIFE_START 627 SOUND_MOTHER_KNIFE_THROW 628 SOUND_MOTHER_SUMMON_ISAACS_START 629 SOUND_MOTHER_SUMMON_ISAACS_END 630 SOUND_MOTHER_HAND_BOIL_START 631 SOUND_MOTHER_GRUNT1 632 SOUND_MOTHER_GRUNT5 633 SOUND_MOTHER_GRUNT6 634 SOUND_MOTHER_GRUNT7 635 SOUND_MOTHER_LAUGH 636 SOUND_MOTHER_SPIN_START 637 SOUND_MOTHER_WALL_SHOT_START 638 SOUND_MOTHER_MISC 639 SOUND_MOTHER_SHOOT 640 SOUND_MOTHER_SUCTION 641 SOUND_MOTHER_ISAAC_RISE 642 SOUND_MOTHER_ISAAC_HIT 643 SOUND_MOTHER_WRIST_SWELL 644 SOUND_MOTHER_WRIST_EXPLODE 645 SOUND_MOTHER_DEATH_MELT 646 SOUND_MOTHER_ANGER_SHAKE 647 SOUND_MOTHER_CHARGE1 648 SOUND_MOTHER_CHARGE2 649 SOUND_MOTHER_LAND_SMASH 650 SOUND_ISAAC_ROAR 651 SOUND_FAMINE_APPEAR 652 SOUND_FAMINE_DEATH_1 653 SOUND_FAMINE_DEATH_2 654 SOUND_FAMINE_DASH_START 655 SOUND_FAMINE_DASH 656 SOUND_FAMINE_SHOOT 657 SOUND_FAMINE_BURST 658 SOUND_FAMINE_GURGLE 659 SOUND_PESTILENCE_MAGGOT_START 660 SOUND_PESTILENCE_MAGGOT_SHOOT 661 SOUND_PESTILENCE_MAGGOT_RETURN 662 SOUND_PESTILENCE_BODY_SHOOT 663 SOUND_PESTILENCE_HEAD_DEATH 664 SOUND_PESTILENCE_DEATH 665 SOUND_PESTILENCE_COUGH 666 SOUND_PESTILENCE_BARF 667 SOUND_PESTILENCE_APPEAR 668 SOUND_PESTILENCE_HEAD_EXPLODE 669 SOUND_PESTILENCE_MAGGOT_ENTER 670 SOUND_PESTILENCE_MAGGOT_POPOUT 671 SOUND_PESTILENCE_MAGGOT_SHOOT2 672 SOUND_PESTILENCE_NECK_PUKE 673 SOUND_PESTILENCE_PUKE_START 674 SOUND_WAR_APPEAR 675 SOUND_WAR_APPEAR_LAVA 676 SOUND_WAR_BOMB_TOSS 677 SOUND_WAR_DASH_START 678 SOUND_WAR_DASH 679 SOUND_WAR_HORSE_DEATH 680 SOUND_WAR_DEATH 681 SOUND_WAR_FIRE_SCREEM 682 SOUND_WAR_GRAB_PLAYER 683 SOUND_WAR_BOMB_HOLD 684 SOUND_WAR_BOMB_PULL_OUT 685 SOUND_WAR_CHASE 686 SOUND_WAR_BOMB_TICK 687 SOUND_WAR_FLAME 688 SOUND_WAR_LAVA_SPLASH 689 SOUND_WAR_LAVA_DASH 690 SOUND_DEATH_DIES 691 SOUND_DEATH_DESTROY_SKULLS 692 SOUND_DEATH_GROWL 693 SOUND_DEATH_SWIPE_START 694 SOUND_DEATH_SWIPE 695 SOUND_DEATH_SUMMON_SCYTHES 696 SOUND_DEATH_SUMMON_SKULLS 697 SOUND_BEAST_DEATH 698 SOUND_BEAST_LASER 699 SOUND_BEAST_BACKGROUND_DIVE 700 SOUND_BEAST_FIRE_RING 701 SOUND_BEAST_GHOST_DASH 702 SOUND_BEAST_GHOST_RISE 703 SOUND_BEAST_LAVA_BALL_SPLASH 704 SOUND_BEAST_LAVA_RISE 705 SOUND_BEAST_SUCTION_LOOP 706 SOUND_BEAST_FIRE_BARF 707 SOUND_BEAST_GHOST_ROAR 708 SOUND_BEAST_INTRO_SCREAM 709 SOUND_BEAST_SUCTION_END 710 SOUND_BEAST_SUCTION_START 711 SOUND_BEAST_SPIT 712 SOUND_BEAST_SURFACE_GROWL 713 SOUND_BEAST_SWITCH_SIDES 714 SOUND_MOTHERSHADOW_APPEAR 715 SOUND_MOTHERSHADOW_CHARGE_UP 716 SOUND_MOTHERSHADOW_DASH 717 SOUND_MOTHERSHADOW_END 718 SOUND_MOTHERSHADOW_INTRO 719 SOUND_BUMBINO_DEATH 720 SOUND_BUMBINO_DIZZY 721 SOUND_BUMBINO_HIT_WALL 722 SOUND_BUMBINO_MISC 723 SOUND_BUMBINO_PUNCH 724 SOUND_BUMBINO_RAM 725 SOUND_BUMBINO_SLAM 726 SOUND_BUMBINO_SNAP_OUT 727 SOUND_SIREN_SCREAM 728 SOUND_SIREN_SING 729 SOUND_DEATH_SKULL_SUMMON_LOOP 730 SOUND_DEATH_SKULL_SUMMON_END 731 SOUND_BEAST_DEATH_2 732 SOUND_BEAST_ANGELIC_BLAST 733 SOUND_ANCIENT_RECALL 734 SOUND_ERA_WALK 735 SOUND_HUGE_GROWTH 736 SOUND_RUNE_SHARD 737 SOUND_SHOT_SPEED_DOWN 738 SOUND_SHOT_SPEED_UP 739 SOUND_EXPERIMENTAL_PILL 740 SOUND_CRACKED_KEY 741 SOUND_QUEEN_OF_HEARTS 742 SOUND_WILD_CARD 743 SOUND_SOUL_OF_ISAAC 744 SOUND_SOUL_OF_MAGDALENE 745 SOUND_SOUL_OF_CAIN 746 SOUND_SOUL_OF_JUDAS 747 SOUND_SOUL_OF_XXX 748 SOUND_SOUL_OF_EVE 749 SOUND_SOUL_OF_SAMSON 750 SOUND_SOUL_OF_AZAZEL 751 SOUND_SOUL_OF_LAZARUS 752 SOUND_SOUL_OF_EDEN 753 SOUND_SOUL_OF_THE_LOST 754 SOUND_SOUL_OF_LILITH 755 SOUND_SOUL_OF_THE_KEEPER 756 SOUND_SOUL_OF_APOLLYON 757 SOUND_SOUL_OF_THE_FORGOTTEN 758 SOUND_SOUL_OF_BETHANY 759 SOUND_SOUL_OF_JACOB_AND_ESAU 760 SOUND_MEGA_BAD_GAS 761 SOUND_MEGA_BAD_TRIP 762 SOUND_MEGA_BALLS_OF_STEEL 763 SOUND_MEGA_BOMBS_ARE_KEY 764 SOUND_MEGA_EXPLOSIVE_DIARRHEA 765 SOUND_MEGA_FULL_HEALTH 766 SOUND_MEGA_HEALTH_UP 767 SOUND_MEGA_HEALTH_DOWN 768 SOUND_MEGA_I_FOUND_PILLS 769 SOUND_MEGA_PUBERTY 770 SOUND_MEGA_PRETTY_FLY 771 SOUND_MEGA_RANGE_DOWN 772 SOUND_MEGA_RANGE_UP 773 SOUND_MEGA_SPEED_DOWN 774 SOUND_MEGA_SPEED_UP 775 SOUND_MEGA_TEARS_DOWN 776 SOUND_MEGA_TEARS_UP 777 SOUND_MEGA_LUCK_DOWN 778 SOUND_MEGA_LUCK_UP 779 SOUND_MEGA_TELEPILLS 780 SOUND_MEGA_48_HR_ENERGY 781 SOUND_MEGA_HEMATEMESIS 782 SOUND_MEGA_PARALYSIS 783 SOUND_MEGA_I_CAN_SEE_FOREVER 784 SOUND_MEGA_PHEROMONES 785 SOUND_MEGA_AMNESIA 786 SOUND_MEGA_LEMON_PARTY 787 SOUND_MEGA_ARE_YOU_A_WIZARD 788 SOUND_MEGA_PERCS 789 SOUND_MEGA_ADDICTED 790 SOUND_MEGA_RELAX 791 SOUND_MEGA_TRIPLE_QUESTION_MARK 792 SOUND_MEGA_ONE_MAKES_YOU_LARGER 793 SOUND_MEGA_ONE_MAKES_YOU_SMALL 794 SOUND_MEGA_INFESTED 795 SOUND_MEGA_INFESTED_1 796 SOUND_MEGA_POWER_PILL 797 SOUND_MEGA_RETRO_VISION 798 SOUND_MEGA_FRIENDS_TIL_THE_END 799 SOUND_MEGA_EXLAX 800 SOUND_MEGA_SOMETHINGS_WRONG 801 SOUND_MEGA_IM_DROWSY 802 SOUND_MEGA_IM_EXCITED 803 SOUND_MEGA_GULP 804 SOUND_MEGA_HORF 805 SOUND_MEGA_SUNSHINE 806 SOUND_MEGA_VURP 807 SOUND_MEGA_SHOT_SPEED_DOWN 808 SOUND_MEGA_SHOT_SPEED_UP 809 SOUND_MEGA_EXPERIMENTAL_PILL 810 SOUND_SIREN_LUNGE 811 SOUND_SIREN_MINION_SMOKE 812 SOUND_SIREN_SCREAM_ATTACK 813 SOUND_SIREN_SING_STAB 814 SOUND_BEAST_LAVABALL_RISE 815 SOUND_BEAST_GROWL 816 SOUND_BEAST_GRUMBLE 817 SOUND_FAMINE_GRUNT 818 SOUND_GFUEL_1 819 SOUND_GFUEL_2 820 SOUND_GFUEL_3 821 SOUND_GFUEL_4 822 SOUND_GFUEL_EXPLOSION 823 SOUND_GFUEL_EXPLOSION_BIG 824 SOUND_GFUEL_GUNSHOT 825 SOUND_GFUEL_GUNSHOT_SMALL 826 SOUND_GFUEL_GUNSHOT_LARGE 827 SOUND_GFUEL_GUNSHOT_SPREAD 828 SOUND_GFUEL_AIR_HORN 829 SOUND_GFUEL_ITEM_APPEAR 830 SOUND_GFUEL_GUNSHOT_MINI 831 SOUND_GFUEL_RICOCHET 832 SOUND_GFUEL_ROCKETLAUNCHER 833 NUM_SOUND_EFFECTS","tags":["Enum"]},{"location":"enums/StageType.html","title":"Enum \"StageType\"","text":"DLC Value Enumerator Comment 0 STAGETYPE_ORIGINAL 1 STAGETYPE_WOTL 2 STAGETYPE_AFTERBIRTH 3 STAGETYPE_GREEDMODE Rep: deprecated, Greed Mode no longer has its own stages 4 STAGETYPE_REPENTANCE Non-alt Repentance stages, such as Downpour or Mines 5 STAGETYPE_REPENTANCE_B Alt repentance stages, such as Dross or Ashpit","tags":["Enum"]},{"location":"enums/TearFlags.html","title":"Enum \"TearFlags\"","text":"<p>Tearflag is defined as: <pre><code>local function TEARFLAG(x)\n    return x &gt;= 64 and BitSet128(0,1&lt;&lt;(x-64)) or BitSet128(1&lt;&lt;x,0)\nend\n</code></pre></p> Bitset Calculator <p></p> DLC Value Enumerator Ingame Color Comment BitSet128(0,0) TEAR_NORMAL <code>Color(1, 1, 1, 1, 0, 0, 0)</code> Range 0-255: <code>Color(255, 255, 255, 255, 0, 0, 0)</code> Default tear (no special effects) TEARFLAG(0) TEAR_SPECTRAL <code>Color(1.5, 2, 2, 0.5, 0, 0, 0)</code> Range 0-255: <code>Color(382, 510, 510, 127, 0, 0, 0)</code> Ouija board type tear (goes thru obstacles) TEARFLAG(1) TEAR_PIERCING No changes Cupid's arrow type tear (goes thru enemy) TEARFLAG(2) TEAR_HOMING <code>Color(0.4, 0.15, 0.38, 1, 0.27843, 0, 0.4549)</code>  Range 0-255: <code>Color(102, 38, 97, 255, 71, 0, 116)</code> Spoon bender type tear (homes to enemy) TEARFLAG(3) TEAR_SLOW <code>Color(2, 2, 2, 1, 0.196, 0.196, 0.196)</code>  Range 0-255: <code>Color(510, 510, 510, 255, 50, 50, 50)</code> Spider bite type tear (slows on contact) TEARFLAG(4) TEAR_POISON <code>Color(0.4, 0.97, 0.5, 1, 0, 0, 0)</code> Range 0-255: <code>Color(102, 247, 127, 255, 0, 0, 0)</code> Common cold type tear (poisons on contact) TEARFLAG(5) TEAR_FREEZE <code>Color(1.25, 0.05, 0.15, 1, 0, 0, 0)</code> Range 0-255: <code>Color(318, 13, 38, 255, 0, 0, 0)</code> Mom's contact type tear (freezes on contact) TEARFLAG(6) TEAR_SPLIT <code>Color(0.9, 0.3, 0.08, 1, 0, 0, 0)</code> Range 0-255: <code>Color(229, 76, 20, 255, 0, 0, 0)</code> Parasite type tear (splits on collision) TEARFLAG(7) TEAR_GROW <code>Color(0.2, 0.09, 0.06, 1, 0, 0, 0)</code> Range 0-255: <code>Color(51, 23, 17, 255, 0, 0, 0)</code> Lump of coal type tear (grows by range) TEARFLAG(8) TEAR_BOOMERANG No changes My reflection type tear (returns back)  (ab+: TearFlags.TEAR_BOMBERANG) TEARFLAG(9) TEAR_PERSISTENT No changes Polyphemus type tear (Damages the entity and if the damage is more then enemy hp it continues with less damage) TEARFLAG(10) TEAR_WIGGLE No changes Wiggle worm type tear (wiggles) TEARFLAG(11) TEAR_MULLIGAN No changes Mulligan type tear (creates fly on hit)  (ab+: TearFlags.TEAR_MIGAN) TEARFLAG(12) TEAR_EXPLOSIVE <code>Color(0.5, 0.9, 0.4, 1, 0, 0, 0)</code> Range 0-255: <code>Color(127, 229, 102, 255, 0, 0, 0)</code> IPECAC type tear (explodes on hit) TEARFLAG(13) TEAR_CHARM <code>Color(1, 0, 1, 1, 0.196, 0, 0)</code> Range 0-255: <code>Color(255, 0, 255, 255, 50, 0, 0)</code> Mom's Eyeshadow tear TEARFLAG(14) TEAR_CONFUSION <code>Color(0.5, 0.5, 0.5, 1, 0, 0, 0)</code> Range 0-255: <code>Color(127, 127, 127, 255, 0, 0, 0)</code> Iron Bar tear TEARFLAG(15) TEAR_HP_DROP No changes These tears cause enemy to drop hearts if killed (33% chance). TEARFLAG(16) TEAR_ORBIT No changes Used for Tiny Planet (orbit arounds the player) TEARFLAG(17) TEAR_WAIT No changes Anti gravity type tear (floats in place for some time before finally moving) (unset after first update) TEARFLAG(18) TEAR_QUADSPLIT No changes Cricket's Body type tear. Splits into 4 smaller tears if it hits the ground TEARFLAG(19) TEAR_BOUNCE <code>Color(1, 1, 0.8, 1, 0.1, 0.1, 0.1)</code> Range 0-255: <code>Color(255, 255, 204, 255, 25, 25, 25)</code> Bounce off of enemies, walls, rocks (Higher priority than PERSISTENT &amp; PIERCING) TEARFLAG(20) TEAR_FEAR <code>Color(1, 1, 0.455, 1, 0.169, 0.145, 0)</code> Range 0-255: <code>Color(255, 255, 116, 255, 43, 37, 0)</code> Mom's Perfume type tear of fear (fear on contact) TEARFLAG(21) TEAR_SHRINK No changes Proptosis tears start large and shrink TEARFLAG(22) TEAR_BURN <code>Color(1, 1, 1, 1, 0.3, 0, 0)</code> Range 0-255: <code>Color(255, 255, 255, 255, 76, 0, 0)</code> Fire Mind tears cause Burn effect on enemies TEARFLAG(23) TEAR_ATTRACTOR No changes Attracts enemies and pickups TEARFLAG(24) TEAR_KNOCKBACK No changes Tear impact pushes enemies back further TEARFLAG(25) TEAR_PULSE No changes Makes the tear pulse TEARFLAG(26) TEAR_SPIRAL No changes Makes the tear path spiral TEARFLAG(27) TEAR_FLAT No changes Makes the tear oval in the direction of travel TEARFLAG(28) TEAR_SAD_BOMB No changes Used by Bombs (Sad Bomb) TEARFLAG(29) TEAR_BUTT_BOMB No changes Used by Bombs (Butt Bomb) TEARFLAG(30) TEAR_SQUARE No changes Used for Hook Worm TEARFLAG(31) TEAR_GLOW No changes Used for GodHead (they will have a glow around them) TEARFLAG(32) TEAR_GISH <code>Color(0.15, 0.15, 0.15, 1, 0, 0, 0)</code> Range 0-255: <code>Color(38, 38, 38, 255, 0, 0, 0)</code> Used for Gish player tears (to color enemy black on slowing) TEARFLAG(33) TEAR_MYSTERIOUS_LIQUID_CREEP <code>Color(1, 1, 1, 1, 0, 0.2, 0)</code> Range 0-255: <code>Color(255, 255, 255, 255, 0, 51, 0)</code> Mysterious Liquid tears spawn damaging green creep when hit TEARFLAG(34) TEAR_SHIELDED No changes Lost Contact tears, block enemy projectiles TEARFLAG(35) TEAR_GLITTER_BOMB No changes Used by Bombs (Glitter Bomb) TEARFLAG(36) TEAR_SCATTER_BOMB No changes Used for Scatter bombs TEARFLAG(37) TEAR_STICKY No changes Used for Sticky bombs and Explosivo tears TEARFLAG(38) TEAR_CONTINUUM Initializes with either <code>Color(1, 1, 1, 1, 0, 0, 0)</code>or<code>Color(0, 0, 0, 1, 0, 0, 0)</code> the purple color is handled on the fly by the game Tears loop around the screen TEARFLAG(39) TEAR_LIGHT_FROM_HEAVEN No changes Create damaging light beam on hit TEARFLAG(40) TEAR_COIN_DROP No changes Used by Bumbo, spawns a coin when tear hits TEARFLAG(41) TEAR_BLACK_HP_DROP No changes Enemy drops a black hp when dies TEARFLAG(42) TEAR_TRACTOR_BEAM No changes Tear with this flag will follow parent player's beam TEARFLAG(43) TEAR_GODS_FLESH No changes God's flesh flag to minimize enemies TEARFLAG(44) TEAR_GREED_COIN No changes Greed coin tears that has a chance to generate a coin when hit TEARFLAG(45) TEAR_CROSS_BOMB No changes Bomber Boy TEARFLAG(46) TEAR_BIG_SPIRAL No changes Ouroboros Worm, big radius oscilating tears TEARFLAG(47) TEAR_PERMANENT_CONFUSION No changes Glaucoma tears, permanently confuses enemies TEARFLAG(48) TEAR_BOOGER No changes Booger tears, stick and do damage over time TEARFLAG(49) TEAR_EGG No changes Egg tears, leave creep and spawns spiders or flies TEARFLAG(50) TEAR_ACID No changes Sulfuric Acid tears, can break grid entities TEARFLAG(51) TEAR_BONE No changes Bone tears, splits in 2 TEARFLAG(52) TEAR_BELIAL No changes Belial tears, piecing tears gets double damage + homing TEARFLAG(53) TEAR_MIDAS No changes Midas touch tears TEARFLAG(54) TEAR_NEEDLE No changes Needle tears TEARFLAG(55) TEAR_JACOBS No changes Jacobs ladder tears TEARFLAG(56) TEAR_HORN <code>Color(0, 0, 0, 1, 0, 0, 0)</code> Range 0-255: <code>Color(0, 0, 0, 255, 0, 0, 0)</code> Little Horn tears TEARFLAG(57) TEAR_LASER No changes Technology Zero TEARFLAG(58) TEAR_POP No changes Pop! TEARFLAG(59) TEAR_ABSORB No changes Lachryphagy like tears. Hungry Tears TEARFLAG(60) TEAR_LASERSHOT No changes Trisagion, generates a laser on top of the tear TEARFLAG(61) TEAR_HYDROBOUNCE No changes Flat Stone TEARFLAG(62) TEAR_BURSTSPLIT No changes Haemolacria TEARFLAG(63) TEAR_CREEP_TRAIL No changes Bob's Bladder TEARFLAG(64) TEAR_PUNCH No changes Knockout Drops TEARFLAG(65) TEAR_ICE No changes Uranus TEARFLAG(66) TEAR_MAGNETIZE No changes Lodestone TEARFLAG(67) TEAR_BAIT <code>Color(0.7, 0.14, 0.1, 1, 0.3, 0, 0)</code> Range 0-255: <code>Color(178, 35, 25, 255, 76, 0, 0)</code> Rotten Tomato TEARFLAG(68) TEAR_OCCULT No changes Eye of the Occult TEARFLAG(69) TEAR_ORBIT_ADVANCED No changes Orbiting tears with a more narrow and stable orbit (used by Saturnus and Immaculate Heart) TEARFLAG(70) TEAR_ROCK No changes Rock tears, chance to break rocks, deal extra damage to rock type enemies TEARFLAG(71) TEAR_TURN_HORIZONTAL No changes Brain Worm, tears turn and go horizontally when moving past an enemy TEARFLAG(72) TEAR_BLOOD_BOMB No changes Blood Bombs, leave blood creep on the ground TEARFLAG(73) TEAR_ECOLI No changes E. Coli tears, turn enemies into poop TEARFLAG(74) TEAR_COIN_DROP_DEATH No changes Killed enemies have a chance to drop a random coin (Reverse Hanged Man) TEARFLAG(75) TEAR_BRIMSTONE_BOMB No changes Brimstone Bombs, explosion creates a brimstone cross TEARFLAG(76) TEAR_RIFT <code>Color(0, 0, 0, 1, 0, 0, 0)</code> Range 0-255: <code>Color(0, 0, 0, 255, 0, 0, 0)</code> Rift tears, creates a black hole on impact TEARFLAG(77) TEAR_SPORE No changes Spore tears, stick to enemies and multiply on enemy death TEARFLAG(78) TEAR_GHOST_BOMB No changes Ghost bombs TEARFLAG(79) TEAR_CARD_DROP_DEATH No changes Killed enemies will drop a random tarot card TEARFLAG(80) TEAR_RUNE_DROP_DEATH No changes Killed enemies will drop a random rune TEARFLAG(81) TEAR_TELEPORT No changes Hit enemies will teleport to a different part of the room TEARFLAG(82) TEAR_DECELERATE No changes Decelerate over time TEARFLAG(83) TEAR_ACCELERATE No changes Accelerate over time 84 TEAR_EFFECT_COUNT No changes <p>The following flags are reserved at the top end of the bitset, and cannot be selected randomly by any items that may attempt to do so.</p> DLC Value Enumerator Comment TEARFLAG(104) TEAR_BOUNCE_WALLSONLY Similar to TEAR_BOUNCE but only bounces off walls, not enemies TEARFLAG(105) TEAR_NO_GRID_DAMAGE Cannot deal damage to grid entities (used by Saturnus to prevent unfair damage in some rooms) TEARFLAG(106) TEAR_BACKSTAB Deals extra damage from behind and inflicts bleeding TEARFLAG(107) TEAR_FETUS_SWORD Fetuses whack their target with a sword and perform spin attacks TEARFLAG(108) TEAR_FETUS_BONE Fetuses whack their target with a bone club instead of ramming into them TEARFLAG(109) TEAR_FETUS_KNIFE Fetuses carry a knife TEARFLAG(110) TEAR_FETUS_TECHX Fetuses have a Tech X ring around them TEARFLAG(111) TEAR_FETUS_TECH Fetuses keep their distance and occasionally shoot tech lasers at their target TEARFLAG(112) TEAR_FETUS_BRIMSTONE Fetuses shoot a brimstone beam at the first enemy they hit TEARFLAG(113) TEAR_FETUS_BOMBER Fetuses drop a bomb on their first impact with an enemy TEARFLAG(114) TEAR_FETUS Base flag for C Section fetuses TEARFLAG(115) TEAR_REROLL_ROCK_WISP TEARFLAG(116) TEAR_MOM_STOMP_WISP TEARFLAG(117) TEAR_ENEMY_TO_WISP TEARFLAG(118) TEAR_REROLL_ENEMY D10 Wisps, chance to reroll enemy on hit TEARFLAG(119) TEAR_GIGA_BOMB Causes giant explosions that create holes in the ground (for Giga Bombs) TEARFLAG(120) TEAR_EXTRA_GORE Causes enemies to explode into more gibs on death (for Donkey Jawbone) TEARFLAG(121) TEAR_RAINBOW Causes lasers to visually cycle between rainbow colors TEARFLAG(122) TEAR_DETONATE Can be detonated by Remote Detonator TEARFLAG(123) TEAR_CHAIN Akeldama tears, stick to each other and form a chain that can be swung around TEARFLAG(124) TEAR_DARK_MATTER Used to identify Dark Matter tears TEARFLAG(125) TEAR_GOLDEN_BOMB Used to identify bombs dropped while having a golden bomb TEARFLAG(126) TEAR_FAST_BOMB Used to identify bombs dropped while having Fast Bombs TEARFLAG(127) TEAR_LUDOVICO Used as a weapon for Ludovico Technique","tags":["Enum"]},{"location":"enums/TearVariant.html","title":"Enum \"TearVariant\"","text":"DLC Value Enumerator Comment 0 BLUE 1 BLOOD 2 TOOTH 3 METALLIC 4 BOBS_HEAD 5 FIRE_MIND 6 DARK_MATTER 7 MYSTERIOUS 8 SCHYTHE 9 CHAOS_CARD 10 LOST_CONTACT 11 CUPID_BLUE 12 CUPID_BLOOD 13 NAIL 14 PUPULA 15 PUPULA_BLOOD 16 GODS_FLESH 17 GODS_FLESH_BLOOD 18 DIAMOND 19 EXPLOSIVO 20 COIN 21 MULTIDIMENSIONAL 22 STONE 23 NAIL_BLOOD 24 GLAUCOMA 25 GLAUCOMA_BLOOD 26 BOOGER 27 EGG 28 RAZOR 29 BONE 30 BLACK_TOOTH 31 NEEDLE 32 BELIAL 33 EYE 34 EYE_BLOOD 35 BALLOON 36 HUNGRY 37 BALLOON_BRIMSTONE 38 BALLOON_BOMB 39 FIST 40 GRIDENT 41 ICE 42 ROCK 43 KEY 44 KEY_BLOOD 45 ERASER 46 FIRE 47 SWORD_BEAM 48 SPORE 49 TECH_SWORD_BEAM 50 FETUS","tags":["Enum"]},{"location":"enums/TrinketType.html","title":"Enum \"TrinketType\"","text":"DLC Value Enumerator Comment 0 TRINKET_NULL 1 TRINKET_SWALLOWED_PENNY 2 TRINKET_PETRIFIED_POOP 3 TRINKET_AAA_BATTERY 4 TRINKET_BROKEN_REMOTE 5 TRINKET_PURPLE_HEART 6 TRINKET_BROKEN_MAGNET 7 TRINKET_ROSARY_BEAD 8 TRINKET_CARTRIDGE 9 TRINKET_PULSE_WORM 10 TRINKET_WIGGLE_WORM 11 TRINKET_RING_WORM 12 TRINKET_FLAT_WORM 13 TRINKET_STORE_CREDIT 14 TRINKET_CALLUS 15 TRINKET_LUCKY_ROCK 16 TRINKET_MOMS_TOENAIL 17 TRINKET_BLACK_LIPSTICK 18 TRINKET_BIBLE_TRACT 19 TRINKET_PAPER_CLIP 20 TRINKET_MONKEY_PAW 21 TRINKET_MYSTERIOUS_PAPER 22 TRINKET_DAEMONS_TAIL 23 TRINKET_MISSING_POSTER 24 TRINKET_BUTT_PENNY 25 TRINKET_MYSTERIOUS_CANDY 26 TRINKET_HOOK_WORM 27 TRINKET_WHIP_WORM 28 TRINKET_BROKEN_ANKH 29 TRINKET_FISH_HEAD 30 TRINKET_PINKY_EYE 31 TRINKET_PUSH_PIN 32 TRINKET_LIBERTY_CAP 33 TRINKET_UMBILICAL_CORD 34 TRINKET_CHILDS_HEART 35 TRINKET_CURVED_HORN 36 TRINKET_RUSTED_KEY 37 TRINKET_GOAT_HOOF 38 TRINKET_MOMS_PEARL 39 TRINKET_CANCER 40 TRINKET_RED_PATCH 41 TRINKET_MATCH_STICK 42 TRINKET_LUCKY_TOE 43 TRINKET_CURSED_SKULL 44 TRINKET_SAFETY_CAP 45 TRINKET_ACE_SPADES 46 TRINKET_ISAACS_FORK 47 TRINKET_POLAROID_OBSOLETE 48 TRINKET_MISSING_PAGE 49 TRINKET_BLOODY_PENNY 50 TRINKET_BURNT_PENNY 51 TRINKET_FLAT_PENNY 52 TRINKET_COUNTERFEIT_PENNY 53 TRINKET_TICK 54 TRINKET_ISAACS_HEAD 55 TRINKET_MAGGYS_FAITH 56 TRINKET_JUDAS_TONGUE 57 TRINKET_SOUL 58 TRINKET_SAMSONS_LOCK 59 TRINKET_CAINS_EYE 60 TRINKET_EVES_BIRD_FOOT 61 TRINKET_LEFT_HAND 62 TRINKET_SHINY_ROCK 63 TRINKET_SAFETY_SCISSORS 64 TRINKET_RAINBOW_WORM 65 TRINKET_TAPE_WORM 66 TRINKET_LAZY_WORM 67 TRINKET_CRACKED_DICE 68 TRINKET_SUPER_MAGNET 69 TRINKET_FADED_POLAROID 70 TRINKET_LOUSE 71 TRINKET_BOBS_BLADDER 72 TRINKET_WATCH_BATTERY 73 TRINKET_BLASTING_CAP 74 TRINKET_STUD_FINDER 75 TRINKET_ERROR 76 TRINKET_POKER_CHIP 77 TRINKET_BLISTER 78 TRINKET_SECOND_HAND 79 TRINKET_ENDLESS_NAMELESS 80 TRINKET_BLACK_FEATHER 81 TRINKET_BLIND_RAGE 82 TRINKET_GOLDEN_HORSE_SHOE 83 TRINKET_STORE_KEY 84 TRINKET_RIB_OF_GREED 85 TRINKET_KARMA 86 TRINKET_LIL_LARVA 87 TRINKET_MOMS_LOCKET 88 TRINKET_NO 89 TRINKET_CHILD_LEASH 90 TRINKET_BROWN_CAP 91 TRINKET_MECONIUM 92 TRINKET_CRACKED_CROWN 93 TRINKET_USED_DIAPER 94 TRINKET_FISH_TAIL 95 TRINKET_BLACK_TOOTH 96 TRINKET_OUROBOROS_WORM 97 TRINKET_TONSIL 98 TRINKET_NOSE_GOBLIN 99 TRINKET_SUPER_BALL 100 TRINKET_VIBRANT_BULB 101 TRINKET_DIM_BULB 102 TRINKET_FRAGMENTED_CARD 103 TRINKET_EQUALITY 104 TRINKET_WISH_BONE 105 TRINKET_BAG_LUNCH 106 TRINKET_LOST_CORK 107 TRINKET_CROW_HEART 108 TRINKET_WALNUT 109 TRINKET_DUCT_TAPE 110 TRINKET_SILVER_DOLLAR 111 TRINKET_BLOODY_CROWN 112 TRINKET_PAY_TO_WIN 113 TRINKET_LOCUST_OF_WRATH 114 TRINKET_LOCUST_OF_PESTILENCE 115 TRINKET_LOCUST_OF_FAMINE 116 TRINKET_LOCUST_OF_DEATH 117 TRINKET_LOCUST_OF_CONQUEST 118 TRINKET_BAT_WING 119 TRINKET_STEM_CELL 120 TRINKET_HAIRPIN Booster pack #1  121 TRINKET_WOODEN_CROSS 122 TRINKET_BUTTER 123 TRINKET_FILIGREE_FEATHERS Booster pack #2  124 TRINKET_DOOR_STOP Booster pack #3  125 TRINKET_EXTENSION_CORD Booster pack #4  126 TRINKET_ROTTEN_PENNY Booster pack #5  127 TRINKET_BABY_BENDER 128 TRINKET_FINGER_BONE 129 TRINKET_JAW_BREAKER 130 TRINKET_CHEWED_PEN 131 TRINKET_BLESSED_PENNY 132 TRINKET_BROKEN_SYRINGE 133 TRINKET_SHORT_FUSE (legacy: TRINKET_FIRECRACKER) 134 TRINKET_GIGANTE_BEAN (legacy: TRINKET_GIANT_BEAN) 135 TRINKET_LIGHTER 136 TRINKET_BROKEN_PADLOCK 137 TRINKET_MYOSOTIS 138 TRINKET_M 139 TRINKET_TEARDROP_CHARM 140 TRINKET_APPLE_OF_SODOM 141 TRINKET_FORGOTTEN_LULLABY 142 TRINKET_BETHS_FAITH 143 TRINKET_OLD_CAPACITOR 144 TRINKET_BRAIN_WORM 145 TRINKET_PERFECTION 146 TRINKET_DEVILS_CROWN 147 TRINKET_CHARGED_PENNY 148 TRINKET_FRIENDSHIP_NECKLACE 149 TRINKET_PANIC_BUTTON 150 TRINKET_BLUE_KEY 151 TRINKET_FLAT_FILE 152 TRINKET_TELESCOPE_LENS 153 TRINKET_MOMS_LOCK 154 TRINKET_DICE_BAG 155 TRINKET_HOLY_CROWN 156 TRINKET_MOTHERS_KISS 157 TRINKET_TORN_CARD 158 TRINKET_TORN_POCKET 159 TRINKET_GILDED_KEY 160 TRINKET_LUCKY_SACK 161 TRINKET_WICKED_CROWN 162 TRINKET_AZAZELS_STUMP 163 TRINKET_DINGLE_BERRY 164 TRINKET_RING_CAP 165 TRINKET_NUH_UH 166 TRINKET_MODELING_CLAY 167 TRINKET_POLISHED_BONE 168 TRINKET_HOLLOW_HEART 169 TRINKET_KIDS_DRAWING 170 TRINKET_CRYSTAL_KEY 171 TRINKET_KEEPERS_BARGAIN 172 TRINKET_CURSED_PENNY 173 TRINKET_YOUR_SOUL 174 TRINKET_NUMBER_MAGNET 175 TRINKET_STRANGE_KEY 176 TRINKET_LIL_CLOT 177 TRINKET_TEMPORARY_TATTOO 178 TRINKET_SWALLOWED_M80 179 TRINKET_RC_REMOTE 180 TRINKET_FOUND_SOUL 181 TRINKET_EXPANSION_PACK 182 TRINKET_BETHS_ESSENCE 183 TRINKET_THE_TWINS 184 TRINKET_ADOPTION_PAPERS 185 TRINKET_CRICKET_LEG 186 TRINKET_APOLLYONS_BEST_FRIEND 187 TRINKET_BROKEN_GLASSES 188 TRINKET_ICE_CUBE 189 TRINKET_SIGIL_OF_BAPHOMET 190 NUM_TRINKETS 1 &lt;&lt; 15 TRINKET_GOLDEN_FLAG 32768 Used for Golden Trinkets (1 &lt;&lt; 15) - 1 TRINKET_ID_MASK 32767","tags":["Enum"]},{"location":"enums/UseFlag.html","title":"Enum \"UseFlag\"","text":"Bitset Calculator DLC Value Enumerator Comment 1 &lt;&lt; 0 USE_NOANIM Don't play use animations 1 &lt;&lt; 1 USE_NOCOSTUME Don't add costume 1 &lt;&lt; 2 USE_OWNED Effect was triggered by an active item owned by the player 1 &lt;&lt; 3 USE_ALLOWNONMAIN Allow the effect to trigger on non-main players (i.e. coop babies) 1 &lt;&lt; 4 USE_REMOVEACTIVE D4 only: Reroll the player's active item 1 &lt;&lt; 5 USE_CARBATTERY Effect was triggered a second time by Car Battery (or Tarot Cloth for cards) 1 &lt;&lt; 6 USE_VOID Effect was triggered by Void 1 &lt;&lt; 7 USE_MIMIC Effect was mimicked by an active item (Blank Card, Placebo) 1 &lt;&lt; 8 USE_NOANNOUNCER Never play announcer voice 1 &lt;&lt; 9 USE_ALLOWWISPSPAWN This allows an item to spawn wisps when called from another item usage as the wisps generator checks for NOANIM, so usually you want to use this with NOANIM call 1 &lt;&lt; 10 USE_CUSTOMVARDATA If set, forces UseActiveItem to use the CustomVarData argument instead of the active item's stored VarData 1 &lt;&lt; 11 USE_NOHUD Don't display text in the HUD (this is currently only used by Echo Chamber)","tags":["Enum"]},{"location":"enums/WeaponType.html","title":"Enum \"WeaponType\"","text":"DLC Value Enumerator Comment 1 WEAPON_TEARS 2 WEAPON_BRIMSTONE 3 WEAPON_LASER Technology 4 WEAPON_KNIFE Mom's Knife 5 WEAPON_BOMBS Dr. Fetus 6 WEAPON_ROCKETS Epic Fetus 7 WEAPON_MONSTROS_LUNGS 8 WEAPON_LUDOVICO_TECHNIQUE 9 WEAPON_TECH_X 10 WEAPON_BONE Forgotten's Bone Club 11 WEAPON_NOTCHED_AXE 12 WEAPON_URN_OF_SOULS 13 WEAPON_SPIRIT_SWORD 14 WEAPON_FETUS C Section 15 WEAPON_UMBILICAL_WHIP Tainted Lilith's Fetus whip 16 NUM_WEAPON_TYPES","tags":["Enum"]},{"location":"faq/faq.html","title":"The Binding of Isaac: Repentance Modding FAQ","text":"","tags":["FAQ"]},{"location":"faq/faq.html#general","title":"General","text":"","tags":["FAQ"]},{"location":"faq/faq.html#do-mods-disable-achievements","title":"Do mods disable achievements?","text":"<p>Mods do not disable achievements, as long as you have killed Mom (i.e. the boss of Depths II) at least once on the save file. Killing Mom on challenges or daily runs does not count.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-install-a-mod","title":"How do I install a mod?","text":"<p>Simply press the \"Subscribe\" button on the mod's Steam Workshop page. This will automatically download and install the mod. Just start your game again afterwards, and the mod will be listed in the \"Mods\" menu in the main menu where it can be activated/deactivated.</p>","tags":["FAQ"]},{"location":"faq/faq.html#do-i-need-to-have-all-of-the-dlcs-installed-to-use-mods","title":"Do I need to have all of the DLCs installed to use mods?","text":"<p>You must have at least the base game (Rebirth), the first DLC (Afterbirth), and the second DLC (Afterbirth+) installed to use mods.</p> <p>The third DLC (Repentance) is not required, but it is recommended, as since it adds new modding features, many new mods are not backwards compatible with Afterbirth+.</p>","tags":["FAQ"]},{"location":"faq/faq.html#do-rebirth-afterbirth-mods-work-with-afterbirth-repentance","title":"Do Rebirth / Afterbirth mods work with Afterbirth+ / Repentance?","text":"<p>This depends on the mod. However, in most cases, they do not work.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-open-the-debug-console","title":"How do I open the debug console?","text":"<p>In Afterbirth+, the debug console is enabled as long as you have at least one mod activated.</p> <p>In Repentance, the debug console is enabled according to the \"EnableDebugConsole\" setting in the options.ini file. By default, it is set to \"0\", so if you want to use the debug console, you must change it from \"0\" to \"1\". (By default, the options.ini file is located at <code>C:\\Users\\[username]\\Documents\\My Games\\Binding of Isaac Repentance\\options.ini</code>.)</p> <p>To open the console, press the grave/tilde (~) key while in a run. If you are on a non-English keyboard, see the wiki page on the debug console for more information.</p> <p>The wiki also has a list of every console command.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-get-started-modding-isaac-getting-started","title":"How do I get started modding Isaac? (getting started)","text":"<p>We generally recommend that people watch the Lytebringr's series of video tutorials on YouTube. These videos were made after the Afterbirth+ DLC was released, but not much has changed now that Repentance DLC is out, so they are still your best bet for learning the ropes.</p> <p>The main difference is that the location of the mods directory has changed.</p> <p>Other resources:</p> <ul> <li>Written tutorials</li> <li>Collection of useful tools</li> <li>AgentCucco's Video Tutorials (playlist)</li> <li>IsaacScript \"Green Candle\" tutorial</li> </ul>","tags":["FAQ"]},{"location":"faq/faq.html#i-am-trying-to-make-a-basic-mod-and-it-doesnt-work-i-am-trying-to-make-a-characterfamiliarenemy-and-the-sprites-are-invisible","title":"I am trying to make a basic mod and it doesn't work. I am trying to make a character/familiar/enemy and the sprites are invisible.","text":"<p>Files must go into specific directories, or they won't work. Note that in Repentance, the location of the mods directory is different from where it was located in Afterbirth+.</p> <p>Even if you know the right \"mods\" directory, the files inside of them have to go in really specific places. Thus, you might be not putting your files in exactly the right place. Start by following the Lytebringr video tutorial on YouTube that roughly corresponds to the thing you want to do (e.g. character/familiar/enemy/whatever). Next, don't change anything that he is doing (besides using the right \"mods\" directory. Once you have verified that your character/familiar/enemy/whatever works in exactly the same way that it does in the video, then start to change things one thing at a time until it breaks. Then, you will see where the problem is, and you can go on to ask a much more specific question, if needed.</p>","tags":["FAQ"]},{"location":"faq/faq.html#where-can-i-see-the-code-for-some-vanilla-item-or-some-vanilla-mechanic","title":"Where can I see the code for [some vanilla item] or [some vanilla mechanic]?","text":"<p>You can't. The game is programmed in the C++ programming language and the source code is proprietary.</p> <p>This means that if you want to make a custom item that works in a similar way to a vanilla item, you will have to completely re-implement it yourself from scratch. (You can often use the wiki as an implementation reference.)</p> <p>This also means that if you want to change the way a vanilla item works, you will often have to re-implement the item from scratch.</p>","tags":["FAQ"]},{"location":"faq/faq.html#who-can-i-hirecommission-to-program-an-isaac-mod-for-me","title":"Who can I hire/commission to program an Isaac mod for me?","text":"<p>Some members of the community can be hired to create mods. For specific recommendations, you can ask in the  official Discord server.</p>","tags":["FAQ"]},{"location":"faq/faq.html#assets","title":"Assets","text":"","tags":["FAQ"]},{"location":"faq/faq.html#where-is-the-directoryfolder-for-mods-located","title":"Where is the directory/folder for mods located?","text":"<p>All mods are located in this location:</p> Windows Mac OS Linux <pre><code>Repentance:\nC:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\mods\\\n\nAfterbirth+:\nC:\\Users\\[username]\\Documents\\My Games\\Binding of Isaac Afterbirth+ Mods\\\n</code></pre> <pre><code>Afterbirth+:\n/Users/[username]/Library/Application Support/Binding of Isaac Afterbirth+ Mods\n</code></pre> <pre><code>Afterbirth+:\n/Steam/steamapps/compatdata/250900/pfx/drive_c/users/steamuser/Documents/My Games/Binding of Isaac Afterbirth+ Mods\n</code></pre>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-unpack-the-game-files-how-do-i-use-the-resource-extractor","title":"How do I unpack the game files? How do I use the resource extractor?","text":"<p>By default, the game's resources are located here:</p> <pre><code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\resources\n</code></pre> <p>However, this directory will be mostly empty unless you run the provided resource extractor. It is located here:</p> <pre><code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\tools\\ResourceExtractor\\ResourceExtractor.exe\n</code></pre> <p>Once you run the extractor, the resources directory will fill up with all of the XML files, ANM2 files, images, and other various files that the game uses.</p> <p>Note that you also have to re-run the resource extractor every time that there is a vanilla patch.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-make-sprites-in-the-isaac-style","title":"How do I make sprites in the Isaac style?","text":"<p>Watch this video by LeatherIceCream who explains the process.</p>","tags":["FAQ"]},{"location":"faq/faq.html#what-is-the-id-of-the-sound-effect-that-i-care-about","title":"What is the ID of [the sound effect that I care about]?","text":"<p>Use this mod, which will tell you what the ID of any currently playing sound effect is.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-overwrite-vanilla-music","title":"How do I overwrite vanilla music?","text":"<ul> <li>For normal music replacement, you can blow away the respective vanilla resource files.</li> <li>For dynamic replacement, use Taz's Music Mod Callback.</li> </ul>","tags":["FAQ"]},{"location":"faq/faq.html#what-are-anm2-files","title":"What are ANM2 files?","text":"<ul> <li>In Isaac, animations are represented by anm2 files in the <code>resources/gfx</code> folder.</li> <li>Each entity in the game has an associated anm2 file.</li> <li>Additionally, UI elements are rendered using various anm2 files (in the <code>resources/gfx/ui</code> folder).</li> <li>anm2 files are XML files with a different file extension.</li> <li>To edit the vanilla animations or add new animations, you can:</li> <li>Edit the files directly using a text editor. (Kilburn does this.)</li> <li>Edit the files using the provided Isaac Animation Editor, which is located at: <code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\tools\\IsaacAnimationEditor\\IsaacAnimationEditor.exe</code></li> </ul>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-edit-rooms","title":"How do I edit rooms?","text":"<p>The official room editor is provided with the game and is located at:</p> <pre><code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\tools\\RoomEditor\\RoomEditor.exe\n</code></pre> <p>This was the tool that Edmund used to create all of the rooms for Rebirth and Afterbirth. However, the official editor is not very good and does not work properly with any Repentance rooms.</p> <p>In 2014, Chronometrics made a 3rd party room editor called Basement Renovator to improve upon the official editor. It is open-source and is located on GitHub. Since Basement Renovator is so much better than the official room editor, even the official developers now use Basement Renovator. (This is why none of the Repentance rooms will work in the official editor.)</p> <p>Basement Renovator is written in Python, so you can either run it from source or download a pre-bundled exe file from the releases page.</p>","tags":["FAQ"]},{"location":"faq/faq.html#troubleshooting","title":"Troubleshooting","text":"","tags":["FAQ"]},{"location":"faq/faq.html#why-is-my-sprite-showing-up-in-game-as-a-black-or-red-square","title":"Why is my sprite showing up in-game as a black or red square?","text":"<p>This happens when the sprite is saved with the wrong bit depth. Set it at 32-bit depth specifically. (Don't set it to be \"Automatic\".)</p> Paint.NET Photoshop <p></p> <p></p>","tags":["FAQ"]},{"location":"faq/faq.html#why-is-a-mod-that-i-subscribed-to-not-visible-in-the-mods-menu","title":"Why is a mod that I subscribed to not visible in the \"mods\" menu?","text":"<p>If mods are not visible in the mods folder even after you subscribed to the mod on the Steam Workshop, it could be caused by the following:</p> <ol> <li> <p>You do not own Afterbirth and Afterbirth+. All Steam Workshop mods require those two DLCs to be installed in order for them to work correctly.</p> </li> <li> <p>(Only in Afterbirth+) Your Windows / Mac username contains characters that are not part of the standard English alphabet. Since the game is not able to interpret those correctly, it will not be able to find the mods folder. In order to fix this issue, you have to create a new user on your computer which name only contains English characters.</p> </li> </ol>","tags":["FAQ"]},{"location":"faq/faq.html#a-mod-does-not-work-correctly","title":"A mod does not work correctly.","text":"<ol> <li>Check if the mod is listed and enabled in the \"mods\" menu.</li> <li>Follow the steps for purging a mod found in this question.</li> <li>Check if the log.txt contains any error messages. (By default, the log.txt is located at <code>C:\\Users\\james\\Documents\\My Games\\Binding of Isaac Repentance\\log.txt</code>.) If you have an error along the lines of <code>... attempt to call a nil value (global 'RegisterMod')</code>, your game files are corrupt and you need to verify the game's integrity (see below).</li> <li>Disable all other mods you have installed in order to see if they are causing any errors.</li> <li>Use Steam to \"Verify integrity of game files\". For more information, see this guide.</li> </ol>","tags":["FAQ"]},{"location":"faq/faq.html#a-mod-has-invisible-enemies-or-other-missing-content","title":"A mod has invisible enemies or other missing content.","text":"<p>It is likely that this is due to Steam not downloading all of the mod's files. You can purge the mod by performing the following steps:</p> <ol> <li>Close the game.</li> <li>Unsubscribe from the mod on the Steam Workshop.</li> <li>Next, delete the mod directory in the real \"mods\" directory. (By default, this is located at <code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\mods</code>.)</li> <li>Delete the mod directory in the Steam cached mods directory. (By default, this is located at <code>C:\\Program Files (x86)\\Steam\\userdata\\[Steam ID]\\250900\\remote</code>.</li> <li>Open the game.</li> <li>Close the game after the intro cutscene begins to play.</li> <li>Resubscribe to the mod on the Steam Workshop.</li> <li>Open the game again. DO NOT close the game when it seems to not respond anymore.</li> </ol>","tags":["FAQ"]},{"location":"faq/faq.html#why-isnt-my-code-working-how-do-i-know-when-errors-occur-where-is-the-logtxt-file-located","title":"Why isn't my code working? How do I know when errors occur? Where is the log.txt file located?","text":"<p>Lua is an interpreted language, which means that if you make a typo or have otherwise bad code, you will only be able to discover it once the program actually runs. If the Lua interpreters encounters an error, it will write it to the game's log.txt file.</p> <p>By default, this file is located at:</p> <pre><code>C:\\Users\\[username]\\Documents\\My Games\\Binding of Isaac Repentance\\log.txt\n</code></pre> <p>Open this file and search it carefully for Lua-related errors. (Ctrl + f for \"error\" is a good start.) This will often tell you the line number that you messed up on.</p> <p>It is also recommended to set <code>FadedConsoleDisplay=1</code> in the options.ini file so that it is a little bit more easy to discover errors while you play. By default, the options.ini file is located at:</p> <pre><code>C:\\Users\\james\\Documents\\My Games\\Binding of Isaac Repentance\\options.ini\n</code></pre> <p>For people comfortable with command-line applications, use Zamiel's isaac-log-viewer and have it running on a second monitor as you code &amp; test.</p>","tags":["FAQ"]},{"location":"faq/faq.html#when-is-the-logtxt-cleared","title":"When is the log.txt cleared?","text":"<p>Every time that you open the game, all of the contents of the log.txt is deleted. Thus, if you need information from the log after a bug occurs, make sure that you do not re-launch the game.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-troubleshoot-my-code","title":"How do I troubleshoot my code?","text":"<p>When you write programs, they may not work right away. Your first reaction should not be to paste a bunch of code into Discord and ask \"why doesn't this work?\". Doing that means you aren't putting forth very much effort to try and solve the problem on your own.</p> <p>The tried-and-true method to figure out almost any bug is called \"print debugging\". In Isaac, this means printing out a bunch of messages to the log.txt file so that you can view it and see which parts of your code are being executed, and which are not. So, go to a bunch of places in your code and add <code>Isaac.DebugString(\"GETTING HERE 1\")</code>, <code>Isaac.DebugString(\"GETTING HERE 2\")</code>, and so on. Then, run your code (i.e. walk around in-game and trigger the bug), and study the log.txt file to try and see what is happening.</p> <p>Often times, the reason that your code is not working is that your variables are not what you think they are. So, print out what the variables are at each step of the way so that you can confirm that they are what you think they are. Use something along the lines of: <code>Isaac.DebugString(\"GETTING HERE - FOO IS: \" .. tostring(foo))</code></p> <p>You might also want to use a log viewer like this one.</p>","tags":["FAQ"]},{"location":"faq/faq.html#i-modified-an-xml-file-and-the-game-crashes-when-i-open-it-or-when-i-go-into-a-new-run","title":"I modified an XML file and the game crashes when I open it or when I go into a new run.","text":"<p>A crash means that the XML file is invalid, meaning that you messed up somewhere while editing the file. Start over from scratch and make tiny edits one at a time until you find the exact part that crashes the game.</p> <p>Another helpful troubleshooting tool is validators like xmlvalidation.com.</p>","tags":["FAQ"]},{"location":"faq/faq.html#i-enabled-a-mod-and-now-my-game-is-crashing-how-can-i-fix-this","title":"I enabled a mod and now my game is crashing. How can I fix this?","text":"<p>You can try looking through the log.txt file to see if anything interesting is there. However, in the vast majority of cases, the log will not show any helpful information when the game crashes.</p> <p>Instead, you can find the problem by disabling your mods one by one until you find the exact mod that is causing the crash. Then, you can report it to the developer of the mod, or try to manually fix the code yourself.</p> <p>Note that whenever you enable or disable a mod, you should completely close and re-open the game (because the game does not load resources properly when you enable/disable a mod via the in-game menu).</p>","tags":["FAQ"]},{"location":"faq/faq.html#my-mod-is-causing-the-game-to-crash-how-do-i-figure-out-which-line-of-code-is-causing-the-crash","title":"My mod is causing the game to crash. How do I figure out which line of code is causing the crash?","text":"<p>First, check out the log.txt file for clues as to why the game is crashing. However, in the vast majority of cases, the log will not show any helpful information when the game crashes.</p> <p>If you are programming your mod in Lua, then your only option is to insert a lot of print statements to try and narrow down where the crash is occurring.</p> <p>If you are programming your mod in TypeScript using the IsaacScript framework, then you can use this crash debug plugin that will put the exact line that the mod is crashing at in the log.txt, which is extremely handy.</p>","tags":["FAQ"]},{"location":"faq/faq.html#coding","title":"Coding","text":"","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-do-x-how-do-i-code-x","title":"How do I do X? How do I code X?","text":"<p>The fastest way to figure out how to do something is to download a few mods that provide similar functionality to what you want to do, and then study the code.</p>","tags":["FAQ"]},{"location":"faq/faq.html#what-is-a-callback","title":"What is a callback?","text":"<p>Mods affect the game by putting code inside of callbacks. Each callback fires when a particular event happens in the game. There are 72 different callbacks to choose from, so you have to choose the right one depending on what you want to do.</p> <p>For example, the most basic callback is <code>MC_POST_GAME_STARTED</code>, which fires once at the beginning of a new run. You would put code in here to do something custom at the beginning of every run.</p> <p>Another common callback that mods use is <code>MC_POST_UPDATE</code>, which fires on every single update frame (i.e. 30 times per second). You would put code in this callback for custom items that have constant effects.</p> <p>Go through the ModCallbacks page and read what all of the callbacks do so that you can get familiar with them.</p>","tags":["FAQ"]},{"location":"faq/faq.html#what-is-single-line-responsibility-slr","title":"What is Single Line Responsibility (SLR)?","text":"<p>When writing code, put some effort into making it look nice and be easy to read for others, especially if you are showing it to other people or asking for help. In this vein, it is a good idea to follow the \"single line responsibility\" rule - meaning that one line should only do one thing. Read this blog for more details about why SLR is great.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-apply-a-costume-to-my-character","title":"How do I apply a costume to my character?","text":"<p>This is called a \"null costume\" and it is accomplished via the <code>EntityPlayer.AddNullCostume()</code> method. For more information, see Lytebringr's 8th video.</p> Example code <p>The follow is an example of a mod adding a null costume:</p> <pre><code>local MOD_NAME = \"My Mod\"\n\n-- For EntityType.ENTITY_PLAYER (1)\nlocal PlayerVariant = {\n  PLAYER = 0,\n  COOP_BABY = 1,\n}\n\nlocal PlayerTypeCustom = {\n  FOO = Isaac.GetPlayerTypeByName(\"Foo\"),\n}\n\nlocal NullItemIDCustom = {\n  BAR = Isaac.GetCostumeIdByPath(\"gfx/characters/bar.anm2\"),\n}\n\nlocal mod = RegisterMod(MOD_NAME, 1)\n\nfunction mod:postPlayerInit(player)\n  local character = player:GetPlayerType()\n\n  if (\n    player.Variant == PlayerVariant.PLAYER\n    and character == PlayerTypeCustom.FOO\n  ) then\n    player:AddNullCostume(NullItemIDCustom.BAR)\n  end\nend\nmod:AddCallback(ModCallbacks.MC_POST_PLAYER_INIT, mod.postPlayerInit)\n</code></pre>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-make-the-costume-on-my-custom-character-persistent","title":"How do I make the costume on my custom character persistent?","text":"<p>Use Sanio's \"Character Costume Protector\" library for this, or study the source code and re-implement it yourself.</p> <p>For a reference implementation, see Andrew the Bunny Knight.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-create-a-new-floorlevelstage","title":"How do I create a new floor/level/stage?","text":"<p>Unfortunately, Isaac does not natively support modded custom floors. BudJMT and DeadInfinity have built a custom system called StageAPI that allows mods to add custom floors in a hacky way. However, StageAPI is not easy to use, so unless you are already an experienced Isaac modder &amp; coder, you should stick to more simple projects.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-modify-the-devil-room-angel-room-chances","title":"How do I modify the Devil Room / Angel Room chances?","text":"<p>There is no built-in way to do this, so you will have to get inventive. For the most control, you can delete all vanilla Devil/Angel doors and completely re-implement the system from scratch. Otherwise, you can temporarily give items to the player such as Goat Head or Rosary Bead, or use things like Game.SetLastDevilRoomStage() or Level.SetRedHeartDamage(). You also might want to use LevelStateFlags.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-get-a-familiar-to-follow-the-player-like-brother-bobby-does","title":"How do I get a familiar to follow the player like Brother Bobby does?","text":"Lua TypeScript <pre><code>function postFamiliarInitMyFamiliar(familiar)\n  familiar:AddToFollowers()\nend\n\nfunction postFamiliarUpdateMyFamiliar(familiar)\n  familiar:FollowParent()\nend\n</code></pre> <pre><code>function postFamiliarInitMyFamiliar(familiar: EntityFamiliar) {\nfamiliar.AddToFollowers();\n}\n\nfunction postFamiliarUpdateMyFamiliar(familiar: EntityFamiliar) {\nfamiliar.FollowParent();\n}\n</code></pre>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-you-use-stageapi-to-add-new-bosses","title":"How do you use StageAPI to add new bosses?","text":"<p>This is an example code snippet from Xalum:</p> <pre><code>mod.StageAPIBosses = {\n    StageAPI.AddBossData(\"The Baron\", {\n        Name = \"The Baron\",\n        Portrait = \"gfx/bosses/baron/portrait_baron.png\",\n        Bossname = \"gfx/bosses/baron/name_baron.png\",\n        Rooms = StageAPI.RoomsList(\"BaronBossRooms\", include(\"resources.luarooms.boss_baron\"))\n    }),\n\n    StageAPI.AddBossData(\"High Amon\", {\n        Name = \"High Amon\",\n        Portrait = \"gfx/bosses/amon/portrait_amon.png\",\n        Bossname = \"gfx/bosses/amon/name_amon.png\",\n        Rooms = StageAPI.RoomsList(\"AmonBossRooms\", include(\"resources.luarooms.boss_amon\"))\n    }),\n}\n\nStageAPI.AddBossToBaseFloorPool({BossID = \"The Baron\", Weight = 1.5}, LevelStage.STAGE3_1, StageType.STAGETYPE_AFTERBIRTH)\nStageAPI.AddBossToBaseFloorPool({BossID = \"High Amon\", AlwaysReplaceSubtype = 83, OnlyReplaceSubtype = 83}, LevelStage.STAGE2_1, StageType.STAGETYPE_REPENTANCE_B)\n</code></pre>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-make-my-custom-character-start-with-a-smelted-gulped-trinket","title":"How do I make my custom character start with a smelted / gulped trinket?","text":"<p>You cannot do this via editing the XML file. Thus, you must accomplish this via Lua or TypeScript code.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-know-when-a-player-has-picked-up-a-collectible-item","title":"How do I know when a player has picked up a collectible item?","text":"<p>There is no vanilla callback for this. As a workaround, you can check <code>EntityPlayer.IsItemQueueEmpty()</code> on every PostUpdate frame, and then check <code>EntityPlayer.QueuedItem</code> when it is not empty. Obviously, this will not work for items that never get queued.</p> <p>For IsaacScript users, you can use the provided MC_POST_ITEM_PICKUP callback.</p> <p>If you want to implement this callback yourself, the source code / algorithm is provided here.</p>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-you-tell-what-the-entity-type-variant-or-subtype-of-a-particular-entity-is","title":"How do you tell what the entity type, variant, or subtype of a particular entity is?","text":"<p>You can:</p> <ol> <li>Type \"spawn x\" into the in-game console. For example, \"spawn confessional\" would show that the Confessional entity has an identifier of 6.17. This means that it has an entity type of 6 and a variant of 17.</li> <li>Or, you can ctrl+f in the \"resources-dlc3/entities2.xml\" file for the entity you want.</li> </ol>","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-blindfold-the-player","title":"How do I blindfold the player?","text":"Lua TypeScript <pre><code>--- Written by Zamiel, technique created by im_tem\n-- @param player EntityPlayer\n-- @param enabled boolean\n-- @param modifyCostume boolean\nfunction setBlindfold(player, enabled, modifyCostume)\n  local game = Game()\n  local character = player:GetPlayerType()\n  local challenge = Isaac.GetChallenge()\n\n  if enabled then\n    game.Challenge = Challenge.CHALLENGE_SOLAR_SYSTEM -- This challenge has a blindfold\n    player:ChangePlayerType(character)\n    game.Challenge = challenge\n\n    -- The costume is applied automatically\n    if not modifyCostume then\n      player:TryRemoveNullCostume(NullItemID.ID_BLINDFOLD)\n    end\n  else\n    game.Challenge = Challenge.CHALLENGE_NULL\n    player:ChangePlayerType(character)\n    game.Challenge = challenge\n\n    if modifyCostume then\n      player:TryRemoveNullCostume(NullItemID.ID_BLINDFOLD)\n    end\n  end\nend\n</code></pre> <p>If you are using IsaacScript, then all you have to do is call the <code>setBlindfold</code> function, like so:</p> <pre><code>const player = Isaac.GetPlayer();\nsetBlindfold(player, true);\n</code></pre>","tags":["FAQ"]},{"location":"faq/faq.html#what-is-the-difference-between-an-api-and-a-library","title":"What is the difference between an API and a library?","text":"<p>Some mods on the workshop package functionality together as an abstraction for other people to use. In software, this is what is typically known as a \"library\". As a programmer, it is usually a lot easier to leverage other people's battle-tested libraries than to roll your own from scratch.</p> <p>On the other hand, an API is short for application programming interface, and it is exactly what it sounds like. An application might want to expose some functionality to external users and software, and it would do that through an explicitly defined interface. Libraries expose an API so that end-users can consume them. But note that any software can have an API, not just a library. For example, the Revelations Mod is a popular mod that adds new floors, bosses, and items to the game. But it also exposes an API so that it can be made compatible with other mods.</p> <p>Historically, Isaac libraries have labeled themselves as \"APIs\", but this is a misnomer. Some examples of this include StageAPI and MinimapAPI. On the other hand, an example of a library that is correctly named is Sanio's Character Costume Protector.</p> <p>If you are creating a new library, please use the correct terminology to name your project, which helps prevent confusion for newcomers to the Isaac modding scene.</p>","tags":["FAQ"]},{"location":"faq/faq.html#what-is-a-micro-optimization-should-i-optimize-my-mod","title":"What is a micro-optimization? Should I optimize my mod?","text":"","tags":["FAQ"]},{"location":"faq/faq.html#definition","title":"Definition","text":"<p>As programmers, we are often concerned with the speed of our programs.</p> <p>When beginner programmers start to think about \"performance\", they often make bad adjustments to their code in the hopes that it will speed it up. These are called micro-optimizations (or premature optimizations). For example, a beginner might start with some code that is neatly organized into separate functions, like this:</p> <pre><code>local function main()\n  -- Do some stuff with foo\n  foo()\n\n  -- Do some stuff with bar\n  bar()\nend\n\nlocal function foo()\n  -- TODO\nend\n\nlocal function bar()\n  -- TODO\nend\n</code></pre> <p>In the previous code, we have two functions that are small, named well (theoretically), and are easy to read and understand. But a beginner might be tempted to transform the code to this:</p> <pre><code>local function main()\n  -- Do some stuff with foo\n  -- TODO\n\n  -- Do some stuff with bar\n  -- TODO\nend\n</code></pre> <p>The idea here is that since we got rid of two function calls, the program should theoretically speed up. (Because under the hood, what functions do when they are called is put values on the stack, and then pop them back off of the stack when they are done.)</p> <p>But in reality, compilers can often optimize the code to perform this speed-up automatically (without the programmer having to actually modify their source code). So in this case, the beginner programmer is making their source code worse in exchange for byte-code that will run identically. Bad!</p> <p>Furthermore, even if the compiler does not optimize the function call automatically, the simple act of calling a function can happen in few short nanoseconds. You would never be able to meaningfully measure a difference in the run-time performance of the program with a few extra function calls. So it's still the same as before: the beginner programmer is making their source code worse for no measurable benefit.</p> <p>Micro-optimziation is a trap that many beginners fall into. The time spent on performing micro-optimizations should instead be spent on measuring real bottlenecks in the code, and then optimizing those. Or fixing real bugs! Or adding real features!</p> <p>This is the reason why programmers have the maxim: \"Premature optimization is the root of all evil.\" It comes from Donald Knuth, who is one of the most renown computer scientests of all time. In his paper \"Structured Programming with go to Statements\", he famously writes:</p> <p>Programmers waste enormous amounts of time thinking about, or worrying about, the speed of noncritical parts of their programs, and these attempts at efficiency actually have a strong negative impact when debugging and maintenance are considered. We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%.</p>","tags":["FAQ"]},{"location":"faq/faq.html#measuring","title":"Measuring","text":"<p>In the example above, the beginner programmer assumed that removing function calls would speed up the program. But these kinds of assumptions could be about any type of code, not just function calls. You might \"know\" that coding in a certain way will be faster than in another way.</p> <p>But in real life programs, it is extremely difficult to predict what kinds of code transformations will actually affect the performance of the program. Sometimes, you can make a change that you think will speed up the program, but it really makes it slower! And sometimes, you can make a change that you think will make the program slower, but it really speeds it up! The compiler does all kinds of crazy things under-the-hood.</p> <p>This is why when we talk about optimization, the most important thing to discuss is measuring. Measuring the run-time of a piece of code is calling profiling. (It can also be called benchmarking.)</p> <p>Memorize the three rules of optimization from the C2 wiki:</p> <ol> <li>Don't.</li> <li>Don't... yet.</li> <li>Profile before optimization.</li> </ol> <p>The idea behind these 3 rules is that in real life programs, you almost never need to optimize. But if you really do, you must measure both before and after. Based on what you measure, it will tell you if the code change is worth the costs of making the code longer, more complicated, or harder to understand. Sometimes, it will be worth it. But often, it won't.</p>","tags":["FAQ"]},{"location":"faq/faq.html#code-clarity","title":"Code Clarity","text":"<p>So, if you should not generally be concerned with performance, what should you be concerned with? The answer is code clarity.</p> <p>First and foremost, the goal of code is to make it neat and easy to read for others. (And even if you are writing code that is never going to be read by anyone else, you should still make it neat and easy to read for future-you, who might have to read this code months or years from now and have to figure out what it does in order to fix some bug.)</p> <p>You might think it is silly to rank \"code clarity\" as being more important than having \"code that works\". And that's certainly debatable. But consider this:</p> <ul> <li>Code that doesn't work, but is easy to understand, can be modified to be made to work.</li> <li>Code that works, but is indecipherable, is going to be very difficult to modify. And this means that we probably can't fix any bugs or add new features.</li> </ul> <p>One of the key insights of Guido van Rossum, the creator of the Python programming language, was that code is read much more often than it is written. Python was designed to be concise, clean, and readable. It had standard ways of doing things and recommends that everyone follow the PEP-8 coding standard. Now, Python is the most popular programming language in the world. The readability of the code isn't the only reason for Python's rise, but it is one of the more important ones.</p>","tags":["FAQ"]},{"location":"faq/faq.html#lua","title":"Lua","text":"","tags":["FAQ"]},{"location":"faq/faq.html#how-do-i-iterate-over-a-list-object-from-the-api","title":"How do I iterate over a list object from the API?","text":"<p>For example, in Lua:</p>  Lua TypeScript <pre><code>local game = Game()\nlocal level = game:GetLevel()\nlocal rooms = level:GetRooms()\nfor i = 0, rooms.Size - 1 do\n  local room = rooms:Get(i)\n  -- Do something with the room\nend\n</code></pre> <p>In IsaacScript, you could implement the code on the Lua tab in the exact same way. However, for this specific case, you can simply use a helper function to iterate over the rooms directly:</p> <pre><code>for (const roomDescriptor of getRooms()) {\n// Do something with the room\n}\n</code></pre>","tags":["FAQ"]},{"location":"faq/faq.html#what-is-the-difference-between-require-and-include","title":"What is the difference between <code>require</code> and <code>include</code>?","text":"<p>See the tutorial on using additional Lua files.</p>","tags":["FAQ"]},{"location":"faq/faq.html#what-is-the-difference-between-pairs-and-ipairs","title":"What is the difference between <code>pairs</code> and <code>ipairs</code>?","text":"<ul> <li><code>pairs</code> is for iterating over Lua tables that represent a map. In other words, something with key/value associations.</li> <li><code>ipairs</code> is for iterating over Lua tables that represent an array. In other words, something that contains a list of elements.</li> </ul> <p>Code speaks louder than words:</p> <pre><code>local map = {\n  foo = \"bar\",\n  baz = 123,\n}\n\nfor key, value in pairs(map) do\n  print(key) -- Prints foo, baz\n  print(value) -- Prints bar, 123\nend\n</code></pre> <pre><code>local array = {\n  123,\n  456,\n  789,\n}\n\nfor i, element in ipairs(array) do\n  print(i) -- Prints 1, 2, 3\n  print(element) -- Prints 123, 456, 789\nend\n</code></pre> <p>Since Lua is untyped and uses tables to represent multiple different data structures, <code>pairs</code> and <code>ipairs</code> serve as a flag to tell the reader what the underlying data structure really is.</p>","tags":["FAQ"]},{"location":"faq/faq.html#what-does-the-colon-operator-in-lua-do","title":"What does the colon operator in Lua do?","text":"<p>In Lua, you can invoke module functions (i.e. functions that are attached to a table) in two different ways:</p> <pre><code>foo.bar()\nfoo:bar()\n</code></pre> <p>A period invokes the function in the \"normal\" way. A colon invokes the function in a special way that is syntactic sugar for passing the module as the first argument. For example, the following two function calls are equivalent:</p> <pre><code>foo.bar(foo, arg1, arg2)\nfoo:bar(arg1, arg2)\n</code></pre> <p>The point of using the colon is that it is a convenience to save you from typing out the longer function call, at the cost of some obfuscation for those not familiar with Lua. This feature is included in the language since doing this is such a common task. (Lua modules are often used to emulate Java-style classes.)</p> <p>It is idiomatic in Lua to invoke any function that is part of a module with a colon, and you should follow this convention when writing your own code. Additionally, most API class methods should be invoked with a colon. However, there are exceptions; methods marked as \"static\", or from object-independant classes (e.g. <code>Isaac</code>, <code>Input</code>, <code>Options</code>), are not invoked with a colon.</p> <pre><code>-- This is the normal case, illustrated with the `EntityPlayer` class.\nlocal player = Isaac.GetPlayer()\nplayer.AddCollectible(CollectibleType.COLLECTIBLE_SAD_ONION) -- Fails because the method expects the class as the first argument.\nplayer:AddCollectible(CollectibleType.COLLECTIBLE_SAD_ONION) -- Works.\n\n-- This is the special case, illustrated with the `Isaac` class.\nIsaac.DebugString(\"foo\") -- Works.\nIsaac:DebugString(\"foo\") -- Fails because the method does not expect the class as the first argument.\n\n-- Another special case is with static methods.\n-- Imagine that we have a laser already, provided by the `MC_POST_LASER_UPDATE` callback.\n-- Like most classes, we are supposed to use a colon.\nlaser.SetMaxDistance(50) -- Fails because the method expects the class as the first argument.\nlaser:SetMaxDistance(50) -- Works.\n-- But static methods are different.\nlaser.ShootAngle(...) -- Works (because `ShootAngle` is a static method).\nlaser:ShootAngle(...) -- Fails because the method does not expect the class as the first argument.\n-- Obviously, you can also invoke static methods without an instantiated class. (That's the point of them being static.)\nEntityLaser.ShootAngle(...) -- Works.\nEntityLaser:ShootAngle(...) -- Fails because the method does not expect the class as the first argument.\n</code></pre> <p>It can be pretty annoying to swap back and forth between using periods and colons. If this part of Lua bothers you, you can try programming mods in TypeScript using the IsaacScript framework. (In TypeScript, you invoke every function with a period, which is consistent and impossible to mess up.)</p>","tags":["FAQ"]},{"location":"faq/faq.html#what-does-the-info-warn-item-pool-ran-out-of-repicks-message-mean-in-the-logtxt-file","title":"What does the \"[INFO] - [warn] item pool ran out of repicks\" message mean in the \"log.txt\" file?","text":"<p>This message means that the game attempted to get a new random collectible type from an item pool, but the item pool was all out of items. When an item pool is depleted like this, the game reverts to getting a random collectible from the Treasure Room pool instead, since that is the default pool. In the case that the Treasure Room pool itself was depleted, then the game will return <code>CollectibleType.COLLECTIBLE_BREAKFAST</code> instead.</p> <p>If your mod is causing this message, it is likely a sign that you have a problem in your logic somewhere. Perhaps you are spawning a ton of random collectibles by accident, which would subsequently deplete the room's item pool. You might also want to examine the logic in any <code>MC_PRE_GET_COLLECTIBLE</code> or <code>MC_POST_GET_COLLECTIBLE</code> callbacks.</p>","tags":["FAQ"]},{"location":"faq/faq.html#communication","title":"Communication","text":"<p>These are some tips on how to improve communication.</p>","tags":["FAQ"]},{"location":"faq/faq.html#read-the-docs","title":"Read the Docs","text":"<p>A lot of basic questions about Isaac modding can be answered by \"reading the manual\". In this case, the \"manual\" is the unofficial community documentation website, created by famous Isaac modder Wofsauge. (The community documentation website is much better than the \"normal\" documentation that comes included with the game, which is incomplete, hard to search, and buggy.)</p> <p>In fact, the website you are on right now is the community docs. Welcome! Use the search bar in the top right hand corner to easily look up the information you need. For example, if you wanted to know how to get the soul hearts of a player, you could search for \"soul hearts\", and then you would find the <code>EntityPlayer.GetSoulHearts</code> method.</p> <p>Now that you know about the docs, please remember to search the docs before asking a question in the Isaac community Discord server. By asking questions that can be easily answered by searching the docs, it is not being very respectful to the volunteers who spend their time answering questions.</p>","tags":["FAQ"]},{"location":"faq/faq.html#use-discord-syntax-highlighting","title":"Use Discord Syntax Highlighting","text":"<p>When pasting code into Discord, make sure to paste it in a \"code block\" by using triple backticks. And make sure to use syntax highlighting for the language, by typing the name of the language next to the backticks.</p>  Lua Example TypeScript Example <pre><code>```lua\nlocal foo = \"bar\"\nIsaac.DebugString(foo)\n```\n</code></pre> <pre><code>```ts\nconst foo = \"bar\";\nIsaac.DebugString(foo);\n```\n</code></pre>","tags":["FAQ"]},{"location":"faq/faq.html#format-code","title":"Format Code","text":"<p>When asking for help, it is common to post a code-snippet. Before posting code, please format it with an auto-formatter so that it can be easily understood by others.</p> <ul> <li>In  Lua, use Lua Beautifier, LuaFormatter, or lua-fmt.</li> <li>In  TypeScript, use Prettier.</li> </ul>","tags":["FAQ"]},{"location":"faq/faq.html#avoid-posting-screenshots","title":"Avoid Posting Screenshots","text":"<p>When asking for help, it is common to post a screenshot of your code. Don't do this, because it isn't editable, or copy-pasteable, or searchable. Instead, post the actual text of the code. Also see the section on Discord syntax highlighting.</p>","tags":["FAQ"]},{"location":"faq/faq.html#use-minimal-reproducible-examples","title":"Use Minimal, Reproducible Examples","text":"<p>When asking for help, it is common to post a bunch of code that is unrelated to the problem. This makes questions hard to understand and usually means that the person asking the question is putting forth very little effort.</p> <p>Please read this StackOverflow post on how to create minimal, reproducible examples.</p>","tags":["FAQ"]},{"location":"faq/faq.html#avoid-using-link-previews","title":"Avoid Using Link Previews","text":"<p>Link previews can clutter the conversion, turning a tiny message into a massive wall of text. It is courteous to enclose all links in &lt;&gt;, which will disable the feature.</p> <p>For example:</p> <pre><code>Here's a link to my code: &lt;https://github.com/IsaacScript/isaacscript-common/blob/main/src/functions/array.ts#L3-L16&gt;\n</code></pre>","tags":["FAQ"]},{"location":"faq/interactive_FAQ.html","title":"Interactive Mod installation fixing","text":"<p>This page provides an interactive debugging tool, which helps you to find out how to fix the most common issues that cause a mod to not work correctly.</p>","tags":["FAQ"]},{"location":"faq/interactive_FAQ.html#interactive-faq","title":"Interactive FAQ","text":"<p>Back  Restart Questionnaire </p>","tags":["FAQ"]},{"location":"snippets/EntityClassDiagram.html","title":"EntityClassDiagram","text":"<pre><code>    classDiagram\n    class Entity:::diagramCurrentPage\n    class EntityBomb\n    class EntityEffect\n    class EntityFamiliar\n    class EntityKnife\n    class EntityLaser\n    class EntityNPC\n    class EntityPickup\n    class EntityPlayer\n    class EntityProjectile\n    class EntityTear\n    Entity &lt;|-- EntityBomb\n    Entity &lt;|-- EntityEffect\n    Entity &lt;|-- EntityFamiliar\n    Entity &lt;|-- EntityKnife\n    Entity &lt;|-- EntityLaser\n    Entity &lt;|-- EntityNPC\n    Entity &lt;|-- EntityPickup\n    Entity &lt;|-- EntityPlayer\n    Entity &lt;|-- EntityProjectile\n    Entity &lt;|-- EntityTear\n    link Entity \"Entity.html\" \"Go to page for 'Entity' class\"\n    link EntityBomb \"EntityBomb.html\" \"Go to page for 'EntityBomb' class\"\n    link EntityEffect \"EntityEffect.html\" \"Go to page for 'EntityEffect' class\"\n    link EntityFamiliar \"EntityFamiliar.html\" \"Go to page for 'EntityFamiliar' class\"\n    link EntityKnife \"EntityKnife.html\" \"Go to page for 'EntityKnife' class\"\n    link EntityLaser \"EntityLaser.html\" \"Go to page for 'EntityLaser' class\"\n    link EntityNPC \"EntityNPC.html\" \"Go to page for 'EntityNPC' class\"\n    link EntityPickup \"EntityPickup.html\" \"Go to page for 'EntityPickup' class\"\n    link EntityPlayer \"EntityPlayer.html\" \"Go to page for 'EntityPlayer' class\"\n    link EntityProjectile \"EntityProjectile.html\" \"Go to page for 'EntityProjectile' class\"\n    link EntityTear \"EntityTear.html\" \"Go to page for 'EntityTear' class\"</code></pre>"},{"location":"snippets/GridEntityClassDiagram.html","title":"GridEntityClassDiagram","text":"<pre><code>    classDiagram\n    class GridEntity:::diagramCurrentPage\n    class GridEntityDoor\n    class GridEntityPit\n    class GridEntityPoop\n    class GridEntityPressurePlate\n    class GridEntityRock\n    class GridEntitySpikes\n    class GridEntityTNT\n    GridEntity &lt;|-- GridEntityDoor\n    GridEntity &lt;|-- GridEntityPit\n    GridEntity &lt;|-- GridEntityPoop\n    GridEntity &lt;|-- GridEntityPressurePlate\n    GridEntity &lt;|-- GridEntityRock\n    GridEntity &lt;|-- GridEntitySpikes\n    GridEntity &lt;|-- GridEntityTNT\n    link GridEntity \"GridEntity.html\" \"Go to page for 'GridEntity' class\"\n    link GridEntityDoor \"GridEntityDoor.html\" \"Go to page for 'GridEntityDoor' class\"\n    link GridEntityPit \"GridEntityPit.html\" \"Go to page for 'GridEntityPit' class\"\n    link GridEntityPoop \"GridEntityPoop.html\" \"Go to page for 'GridEntityPoop' class\"\n    link GridEntityPressurePlate \"GridEntityPressurePlate.html\" \"Go to page for 'GridEntityPressurePlate' class\"\n    link GridEntityRock \"GridEntityRock.html\" \"Go to page for 'GridEntityRock' class\"\n    link GridEntitySpikes \"GridEntitySpikes.html\" \"Go to page for 'GridEntitySpikes' class\"\n    link GridEntityTNT \"GridEntityTNT.html\" \"Go to page for 'GridEntityTNT' class\"</code></pre>"},{"location":"tutorials/AddingCostumesWithoutLUA.html","title":"[\u6559\u7a0b] \u5728\u4e0d\u4f7f\u7528LUA\u7684\u60c5\u51b5\u4e0b\u4e3a\u9053\u5177\u6dfb\u52a0\u5916\u89c2","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/AddingCostumesWithoutLUA.html#_1","title":"\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u793a\u4f8b\u6a21\u7ec4\u548c\u4ee3\u7801\uff1a","text":"<p>\u2192 \u4e0b\u8f7d\u672c\u6559\u7a0b\u7684\u793a\u4f8b\u6a21\u7ec4 \u2190</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/AddingCostumesWithoutLUA.html#_2","title":"\u9ed8\u8ba4\u7684\u5916\u89c2\u7c7b\u578b","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/AddingCostumesWithoutLUA.html#_3","title":"\u5b9a\u4e49\u9053\u5177","text":"<p>\u5728\u4e3a\u9053\u5177\u6216\u9970\u54c1\u6dfb\u52a0\u5916\u89c2\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u5b9a\u4e49\u9053\u5177\u3002\u53ef\u4ee5\u5728\u60a8\u7684\u6a21\u7ec4\u7684\u201ccontent\u201d\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u201citems.xml\u201d\u6587\u4ef6\u6765\u5b8c\u6210\u8fd9\u4e2a\u6b65\u9aa4\u3002\u5982\u679c\u8be5\u6587\u4ef6\u5939\u5c1a\u4e0d\u5b58\u5728\uff0c\u8bf7\u521b\u5efa\u5b83\u3002</p> <p>\u7136\u540e\u5728\u60a8\u7684items.xml\u6587\u4ef6\u4e2d\u6dfb\u52a0\u6240\u9700\u6570\u91cf\u7684\u9053\u5177\u3002\u5b83\u53ef\u80fd\u4f1a\u50cf\u8fd9\u6837\uff1a <pre><code>&lt;items gfxroot=\"gfx/items/\" version=\"1\"&gt;\n&lt;passive id=\"1\" name=\"\u6d4b\u8bd5\u9053\u51771\" description=\"\u67d0\u4e2a\u88ab\u52a8\u9053\u5177\" gfx=\"testitem_1.png\" /&gt;\n&lt;active id=\"2\" name=\"\u6d4b\u8bd5\u9053\u51772\" description=\"\u67d0\u4e2a\u4e3b\u52a8\u9053\u5177\" gfx=\"testitem_2.png\" /&gt;\n&lt;passive id=\"999\" name=\"\u6d4b\u8bd5\u9053\u5177999\" description=\"\u67d0\u4e2a\u9ad8ID\u88ab\u52a8\u9053\u5177\" gfx=\"testitem_999.png\" /&gt;\n&lt;familiar id=\"3\" name=\"\u6d4b\u8bd5\u8ddf\u73ed3\" description=\"\u67d0\u4e2a\u8ddf\u73ed\" gfx=\"testitem_3.png\" /&gt;\n&lt;trinket id=\"4\" name=\"\u6d4b\u8bd5\u9970\u54c14\" description=\"\u67d0\u4e2a\u9970\u54c1\" gfx=\"testitem_4.png\" /&gt;\n&lt;/items&gt;\n</code></pre> \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u8fd8\u4e3a\u6bcf\u4e2a\u9053\u5177\u5b9a\u4e49\u4e86ID\u3002\u8fd9\u4e9bID\u7528\u4e8e\u5c06\u9053\u5177\u5206\u914d\u5230\u5b83\u4eec\u7684\u5916\u89c2\u4e2d\uff01</p> <p>\u5728\u201ccontent/items.xml\u201d\u6587\u4ef6\u4e2d\u627e\u5230\u7684ID\u4ec5\u7531\u6a21\u7ec4\u5728\u672c\u5730\u4f7f\u7528\u3002\u5b83\u4eec\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u6a21\u7ec4\uff0c\u4e5f\u4e0d\u4f1a\u8986\u76d6\u73b0\u6709\u7684\u539f\u7248\u9053\u5177\uff01\u5b83\u4eec\u4e5f\u4e0d\u4f1a\u5b9a\u4e49\u5b83\u4eec\u5728\u6e38\u620f\u5185\u7684ID\uff01</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/AddingCostumesWithoutLUA.html#_4","title":"\u5b9a\u4e49\u5916\u89c2","text":"<p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u4e00\u4e9b\u9053\u5177\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u201ccostumes2.xml\u201d\u6587\u4ef6\u4e2d\u5b9a\u4e49\u6211\u4eec\u7684\u5916\u89c2\u3002</p> <p>\u91cd\u8981\u63d0\u793a\uff1a\u5916\u89c2ID\u548c\u5916\u89c2\u7c7b\u578b\u5fc5\u987b\u7b49\u4e8e\u9053\u5177ID\u548c\u9053\u5177\u7c7b\u578b\uff01 <pre><code>&lt;costumes anm2root=\"gfx/\"&gt;\n&lt;!-- \u8f7d\u5165\u987a\u5e8f\u662f\u4ece\u4e0a\u5230\u4e0b\u3002\u4e0d\u662f\u57fa\u4e8eID --&gt;\n&lt;costume id=\"1\" anm2path=\"characters/test_costume_1.anm2\" type=\"passive\" /&gt;\n&lt;costume id=\"2\" anm2path=\"characters/test_costume_2.anm2\" type=\"active\" /&gt;\n&lt;costume id=\"999\" anm2path=\"characters/test_costume_999.anm2\" type=\"passive\" /&gt;\n&lt;costume id=\"3\" anm2path=\"characters/test_costume_3.anm2\" type=\"familiar\" /&gt;\n&lt;costume id=\"4\" anm2path=\"characters/test_costume_4.anm2\" type=\"trinket\" /&gt;\n&lt;/costumes&gt;\n</code></pre></p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/AddingCostumesWithoutLUA.html#_5","title":"\u9053\u5177\u7c7b\u578b\u5bf9\u5916\u89c2\u7684\u5f71\u54cd\uff1a","text":"\u9053\u5177\u7c7b\u578b \u5f71\u54cd \u88ab\u52a8(passive) \u5f53\u62fe\u53d6\u52a8\u753b\u64ad\u653e\u5b8c\u6bd5\u65f6\uff0c\u5916\u89c2\u4f1a\u88ab\u6dfb\u52a0\u3002\u5f53\u9053\u5177\u88ab\u79fb\u9664\u65f6\uff0c\u5916\u89c2\u4f1a\u88ab\u79fb\u9664\u3002 \u4e3b\u52a8(active) \u5f53\u9053\u5177\u88ab\u4f7f\u7528\u65f6\uff0c\u5916\u89c2\u4f1a\u88ab\u6dfb\u52a0\u3002\u5f53\u4f60\u6539\u53d8\u623f\u95f4\u65f6\uff0c\u5916\u89c2\u4f1a\u88ab\u79fb\u9664\u3002 \u9970\u54c1(trinket) \u5f53\u62fe\u53d6\u52a8\u753b\u64ad\u653e\u5b8c\u6bd5\u65f6\uff0c\u5916\u89c2\u4f1a\u88ab\u6dfb\u52a0\u3002\u5f53\u9970\u54c1\u88ab\u79fb\u9664\u65f6\uff0c\u5916\u89c2\u4f1a\u88ab\u79fb\u9664\u3002 \u8ddf\u73ed(familiar) \u5f53\u62fe\u53d6\u52a8\u753b\u64ad\u653e\u5b8c\u6bd5\u65f6\uff0c\u5916\u89c2\u4f1a\u88ab\u6dfb\u52a0\u3002\u5f53\u9053\u5177\u88ab\u79fb\u9664\u65f6\uff0c\u5916\u89c2\u4f1a\u88ab\u79fb\u9664\u3002","tags":["\u6559\u7a0b"]},{"location":"tutorials/AddingCostumesWithoutLUA.html#_6","title":"\u66f4\u591a\u4fe1\u606f\uff1a","text":"<ul> <li>\u5982\u679c\u4e00\u4e2a\u5916\u89c2ID\u4e0d\u80fd\u4e0e\u4e00\u4e2a\u9053\u5177ID\u76f8\u5173\u8054\uff0c\u6e38\u620f\u5c06\u5d29\u6e83\u3002</li> <li>\u7c7b\u578b\u4e3anone\u7684\u5916\u89c2\u5b9e\u9645\u4e0a\u4e0e\u4e00\u4e2aNull\u9053\u5177\u76f8\u5173\u8054\u3002\u8fd9\u4e9bNull\u5916\u89c2\u53ef\u4ee5\u4f7f\u7528LUA\u6dfb\u52a0\u3002</li> <li>\u5957\u88c5\u4ecd\u7136\u5fc5\u987b\u4f7f\u7528Null\u5916\u89c2\u65b9\u6cd5\uff08\u57fa\u4e8eLUA\uff09\u6dfb\u52a0\u3002</li> </ul>","tags":["\u6559\u7a0b"]},{"location":"tutorials/AddingCostumesWithoutLUA.html#null","title":"\u6dfb\u52a0Null\u5916\u89c2","text":"<p>Null\u5916\u89c2\u662f\u6ca1\u6709\u5b9e\u9645\u9053\u5177\u9644\u52a0\u7684\u5916\u89c2\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u53ef\u4ee5\u7528\u4e8e\u6dfb\u52a0\u4e34\u65f6\u5916\u89c2\uff0c\u4f8b\u5982\u5957\u88c5\u3002</p> <p>\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u5411\u73a9\u5bb6\u6dfb\u52a0Null\u5916\u89c2\u3002\u9009\u62e9\u9002\u5408\u4f60\u9700\u8981\u7684\u65b9\u5f0f\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/AddingCostumesWithoutLUA.html#costumes2xml","title":"costumes2.xml","text":"<p>\u5728\u201ccostumes2.xml\u201d\u6587\u4ef6\u4e2d\uff0c\u901a\u8fc7\u5c06\u7c7b\u578b\u8bbe\u7f6e\u4e3a\u201cnone\u201d\u6765\u5b9a\u4e49\u4e00\u4e2aNull\u5916\u89c2\u3002\u4e0d\u8981\u8bbe\u7f6eID\uff01</p> <pre><code>&lt;costumes anm2root=\"gfx/\"&gt;\n&lt;costume anm2path=\"characters/some_null_costume.anm2\" type=\"none\" /&gt;\n&lt;/costumes&gt;\n</code></pre>","tags":["\u6559\u7a0b"]},{"location":"tutorials/AddingCostumesWithoutLUA.html#mainlua","title":"main.lua","text":"<p>\u83b7\u53d6Null\u5916\u89c2\u7684\u81ea\u52a8\u751f\u6210\u7684ID\uff0c\u7136\u540e\u5c06\u5176\u5e94\u7528\u4e8e\u73a9\u5bb6\u3002</p> <pre><code>-- \u83b7\u53d6\u5185\u90e8\u5916\u89c2ID\nNullItemID.ID_SOME_NULL_COSTUME = Isaac.GetCostumeIdByPath(\"gfx/characters/some_null_costume.anm2\")\n\n-- \u4f7f\u7528 \"AddNullCostume\" \u6dfb\u52a0\u4e00\u4e2a Null\u5916\u89c2\uff08\u6c38\u4e45\uff0c\u76f4\u5230\u5176\u88ab\u79fb\u9664\u6216\u91cd\u65b0\u5f00\u59cb\u4e00\u5c40\u6e38\u620f\uff09\nfunction mod:myFunction1(player)\n    print(\"\u6dfb\u52a0Null\u5916\u89c2\")\n    if(somethingHappend) then\n        player:AddNullCostume (NullItemID.ID_SOME_NULL_COSTUME)\n    end\n    -- \u79fb\u9664Null\u5916\u89c2\n    if(somethingDifferentHappend) then\n        player:TryRemoveNullCostume(NullItemID.ID_SOME_NULL_COSTUME)\n    end\nend\nmod:AddCallback(ModCallbacks.MC_POST_PLAYER_UPDATE, mod.myFunction1, 0)\n\n-- \u4f7f\u7528 \"NullEffects\" \u6dfb\u52a0\u4e00\u4e2a Nullcostume\uff08\u5728\u5f53\u524d\u623f\u95f4\u4e2d\u6301\u7eed\u5b58\u5728\uff0c\u7136\u540e\u88ab\u79fb\u9664\uff09\nfunction mod:myFunction2(player)\n    if not player:GetEffects():HasNullEffect(NullItemID.ID_SOME_NULL_COSTUME) then\n        print(\"\u6dfb\u52a0Null\u5916\u89c2\") --\u6bcf\u6b21\u66f4\u6362\u623f\u95f4\u65f6\u90fd\u4f1a\u89e6\u53d1\n        player:GetEffects():AddNullEffect(NullItemID.ID_SOME_NULL_COSTUME, true)\n    end\nend\nmod:AddCallback(ModCallbacks.MC_POST_PLAYER_UPDATE, mod.myFunction2, 0)\n</code></pre> <p>\u7279\u522b\u611f\u8c22 Piber20 \u548c JSG \u627e\u51fa\u8fd9\u4e9b\u65b9\u6cd5\uff01</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/CustomCallbacks.html","title":"[\u6559\u7a0b] \u4f7f\u7528\u81ea\u5b9a\u4e49\u56de\u8c03","text":"<p>\u5fcf\u60941.79b\u66f4\u65b0\u4e2d\u52a0\u5165\u4e86\u4e00\u4e9b\u4f9b\u56de\u8c03\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u4f7f\u7528\u5b83\u4eec\u53ef\u4ee5\u4e3amod\u4e2d\u7684\u81ea\u5b9a\u4e49\u56de\u8c03\u6dfb\u52a0\u4f18\u5148\u7ea7\u4e0e\u517c\u5bb9\u6027\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/CustomCallbacks.html#_2","title":"\u57fa\u672c\u56de\u8c03","text":"<p>\u4f60\u53ef\u4ee5\u5c06\u4efb\u610f\u4ee3\u8868\u56de\u8c03ID\u7684\u503c\u4e0e <code>mod:AddCallback</code> (\u6216\u8005 <code>Isaac.AddCallback</code>, \u4f46\u6211\u4eec\u66f4\u63a8\u8350\u4f7f\u7528mod\u8868\uff0c\u5373\u524d\u8005)\u642d\u914d\u4f7f\u7528\u3002\u8fd9\u4e9b\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff0c\u5305\u62ec\u5b57\u7b26\u4e32\u3002</p> <pre><code>MOD:AddCallback(\"TEST\", function(_, a, b, c)\n    print(\"test callback triggered\", a, b, c)\nend)\n</code></pre> <p>\u5c31\u5b9e\u9645\u60c5\u51b5\u800c\u8a00\uff0c\u6211\u4eec\u66f4\u63a8\u8350\u4f7f\u7528\u5b57\u7b26\u4e32\u800c\u975e\u6570\u5b57\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u56de\u8c03\u7684ID. \u867d\u7136\u539f\u7248\u6e38\u620f\u63d0\u4f9b\u7684mod API\u4e2d\u56de\u8c03\u6709\u5bf9\u5e94\u7684\u6570\u5b57ID, \u4f46\u4f7f\u7528\u5b57\u7b26\u4e32\u53ef\u4ee5\u907f\u514d\u4e0e\u5176\u4ed6mod\u6240\u6dfb\u52a0\u7684\u81ea\u5b9a\u4e49\u56de\u8c03\u4ea7\u751f\u51b2\u7a81\u3002</p> <p>\u4f46\u4ec5\u4ec5\u8f93\u5165\u8fd9\u4e32\u4ee3\u7801\u4e0d\u4f1a\u8d77\u5230\u4efb\u4f55\u4f5c\u7528\uff0c\u56e0\u4e3a\u6e38\u620f\u4e2d\uff08\u6216\u8005mod\u91cc\uff09\u6ca1\u6709\u4efb\u4f55\u4e8b\u4ef6\u53ef\u4ee5\u89e6\u53d1\"test\"\u56de\u8c03\u4f7f\u5176\u6267\u884c\u3002\u4e3a\u4e86\u4f7f\u8fd9\u4e00\u56de\u8c03\u6267\u884c\uff0c\u4f60\u5e94\u8be5\u8f93\u5165\uff1a</p> <pre><code>Isaac.RunCallback(\"TEST\", 1, 2, 3)\n</code></pre> <p>\u8fd9\u6761\u4ee3\u7801\u4f1a\u6309\u4f18\u5148\u7ea7\u548c\u6dfb\u52a0\u7684\u5148\u540e\u987a\u5e8f\uff08\u9996\u5148\u5224\u65ad\u4f18\u5148\u7ea7\uff0c\u7136\u540e\u5224\u65ad\u5148\u540e\uff09\u6267\u884c\u6240\u6709ID\u4e3a\"test\"\u7684\u81ea\u5b9a\u4e49\u56de\u8c03\u3002</p> <p>\u6ce8\u610f\u4e00\u70b9\uff1a\u5728\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u6211\u4eec\u4e0d\u5fc5\u201c\u5b9a\u4e49\u201d\u6dfb\u52a0\u7684\u56de\u8c03\u3002mod\u53ef\u4ee5\u4ec5\u901a\u8fc7\u4f7f\u7528\u81ea\u5b9a\u4e49\u56de\u8c03\u5bf9\u5e94\u7684ID\u7684\u503c\u6765\u5c06\u5176\u6267\u884c\uff0c\u65e0\u9700\u4efb\u4f55\u524d\u7f6e\u5b9a\u4e49\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/CustomCallbacks.html#_3","title":"\u8fd4\u56de\u503c","text":"<p>\u901a\u8fc7<code>Isaac.RunCallback</code>\u6267\u884c\u56de\u8c03\u65f6\uff0c\u82e5\u56de\u8c03\u8fd4\u56de\u4e86\u4efb\u610f\u503c\uff0c\u8be5\u51fd\u6570\u5c06\u5728\u9996\u4e2a\u8fd4\u56de\u4e86\u503c\u7684\u56de\u8c03\u5904\u7ec8\u6b62\u6267\u884c\uff0c\u5e76\u8fd4\u56de\u8be5\u503c\u3002 \u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>MOD:AddCallback(\"TEST_RETURN\", function(_, a, b)\n    return a + b\nend)\nMOD:AddCallback(ModCallbacks.MC_POST_GAME_STARTED, function()\n    local ret = Isaac.RunCallback(\"TEST_RETURN\", 1, 2)\n    print(ret)\nend)\n</code></pre> <p>\u8f93\u5165\u8fd9\u4e32\u4ee3\u7801\u540e\uff0c\u63a7\u5236\u53f0\u548c\u65e5\u5fd7\u6587\u4ef6\u5e94\u5f53\u5728\u6bcf\u6b21\u6e38\u620f\u5f00\u59cb\u65f6\u663e\u793a\"3\".</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/CustomCallbacks.html#_4","title":"\u5b9e\u4f53\u7c7b\u578b/\u53c2\u6570\u5bf9\u5e94","text":"<p>\u6e38\u620fmod API\u4e2d\u63d0\u4f9b\u7684\u56de\u8c03\u6709\u90e8\u5206\u9700\u8981\u7279\u5b9a\u53c2\u6570\u624d\u4f1a\u6267\u884c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5982\u6b64\u5bf9\u81ea\u5b9a\u4e49\u56de\u8c03\u52a0\u4ee5\u9650\u5236\u3002\u4efb\u610f\u4f60\u8bbe\u60f3\u7684\u60c5\u666f\u4e2d\u6240\u5fc5\u987b\u7684\u503c\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u7279\u5b9a\u53c2\u6570\uff0c\u5982\u5b9e\u4f53\u7c7b\u578b\u6216\u5b9e\u4f53\u53d8\u79cd\u7b49\u3002</p> <pre><code>-- \u6dfb\u52a0\u81ea\u5b9a\u4e49\u56de\u8c03\nMOD:AddCallback(\"TEST_ENTITY\", function(_, entity, a, b, c)\n    print(\"test callback triggered\", entity.Type, a, b, c)\nend)\n\n-- \u4e3a\u81ea\u5b9a\u4e49\u56de\u8c03\u6dfb\u52a0\u9650\u5236\u53c2\u6570\nMOD:AddCallback(\"TEST_ENTITY\", function(_, entity, a, b, c)\n    print(\"tears only callback triggered\", entity.Variant, a, b, c)\nend, EntityType.ENTITY_TEAR)\n\n-- \u6267\u884c\u6709\u9650\u5236\u53c2\u6570\u7684\u81ea\u5b9a\u4e49\u56de\u8c03\n\n-- \u6b64\u51fd\u6570\u5c06\u6267\u884c\u6240\u6709\u81ea\u5b9a\u4e49\u56de\u8c03\uff0c\u65e0\u89c6\u9650\u5236\u53c2\u6570\nIsaac.RunCallback(\"TEST_ENTITY\", 1, 2, 3)\n-- \u6b64\u51fd\u6570\u5c06\u4e0d\u6267\u884c\u201c\u4ec5\u773c\u6cea\u201d\uff08\u9650\u5236\u53c2\u6570\u4e3aEntityType.ENTITY_TEAR\uff09\u7684\u81ea\u5b9a\u4e49\u56de\u8c03\nIsaac.RunCallbackWithParam(\"TEST_ENTITY\", EntityType.ENTITY_PLAYER, entity, 1, 2, 3)\n-- \u6b64\u51fd\u6570\u5c06\u6267\u884c\u201c\u4ec5\u773c\u6cea\u201d\u56de\u8c03\uff0c\u800c\u975e\u4e00\u4e2aID\u4e0d\u540c\u7684\u56de\u8c03\nIsaac.RunCallbackWithParam(\"TEST_ENTITY\", EntityType.ENTITY_TEAR, entity, 4, 5, 6)\n</code></pre> <p>\u6b63\u5982\u524d\u6587\u6240\u8bf4\uff0c\u7279\u5b9a\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u610f\u503c\uff0c\u4e0d\u5fc5\u5c40\u9650\u4e8e\u5b9e\u4f53\u7c7b\u578b\u3002<code>Isaac.RunCallbackWithParam</code> \u51fd\u6570\u4f1a\u9010\u4e2a\u68c0\u67e5\u6240\u6709\u56de\u8c03\u7684\u9650\u5236\u53c2\u6570\u662f\u5426\u4e3anil\uff08\u65e0\u9650\u5236\uff09\uff0c\u82e5\u4e0d\u4e3anil\u5219\u68c0\u67e5\u5176\u662f\u5426\u4e0e\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53d8\u91cf\u76f8\u5bf9\u5e94\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/CustomCallbacks.html#mod","title":"Mod\u517c\u5bb9","text":"<p>\u4e4b\u524d\u8ba8\u8bba\u8fc7\uff0c\u81ea\u5b9a\u4e49\u56de\u8c03\u4e0d\u5fc5\u5148\u201c\u5b9a\u4e49\u201d\u540e\u4f7f\u7528\u3002\u521b\u5efa\u81ea\u5b9a\u4e49\u56de\u8c03\u53ea\u9700\u8981<code>Isaac.RunCallback</code> \u6267\u884c\u81f3\u5c11\u4e00\u6b21\u4e14\u4e0e<code>AddCallback</code>\u642d\u914d\u3002 </p> <p>\u8fd9\u4f7f\u5f97mod\u53ef\u4ee5\u5341\u5206\u8f7b\u677e\u5730\u4e3a\u5176\u4ed6mod\u63d0\u4f9b\u81ea\u5df1\u7684API: \u4f9d\u8d56\u8be5mod\u8fd0\u884c\u7684\u5176\u4ed6mod\u65e0\u9700\u7b49\u5f85\u4e3bmod\u5b8c\u5168\u52a0\u8f7d\u4fbf\u53ef\u4f7f\u7528\u5176API. \u5047\u5982\u6709\u8fd9\u4e48\u4e00\u4e2a\u5c0f\u5730\u56femod\uff0c\u6682\u4e14\u79f0\u5176\u4e3aMinimapLibrary\uff08\u5c0f\u5730\u56fe\u5e93\uff09\u3002\u73b0\u5728\u8fd9\u4e2amod\u5e0c\u671b\u5176\u4ed6\u4f9d\u8d56\u5176\u8fd0\u884c\u7684mod\u80fd\u591f\u5728\u5c0f\u5730\u56fe\u53d8\u6362\u5927\u5c0f\u540e\u6267\u884c\u7279\u5b9a\u4ee3\u7801\u3002 MinimapLibrary\u4e2d\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>-- ... \u5c0f\u5730\u56fe\u53d8\u6362\u5927\u5c0f\u65f6\u6267\u884c\u7684\u56de\u8c03\nIsaac.RunCallback(\"MINIMAPLIB_POST_MINIMAP_ENLARGE\", nil, currentSize)\n</code></pre> <p>\u4f9d\u8d56\u5176\u8fd0\u884c\u7684mod\uff08Mod 2\uff09\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>MOD2:AddCallback(\"MINIMAPLIB_POST_MINIMAP_ENLARGE\", function(_, currentSize)\n    print(\"Minimap size has changed!\", currentSize)\n    -- \u4ee5currentSize\u4e3a\u53d8\u91cf\u505a\u4e9b\u4e8b\u60c5\nend)\n</code></pre> <p>\u53ef\u4ee5\u770b\u51faMod 2\u5728\u4f7f\u7528MinimapAPI\u63d0\u4f9b\u7684mod\u65b9\u6cd5\u65f6\uff0c\u5b8c\u5168\u4e0d\u9700\u8981\u68c0\u67e5MinimapAPI\u662f\u5426\u52a0\u8f7d\u3002\u539f\u56e0\u5f88\u7b80\u5355\uff1a\u524d\u7f6emod\u5df2\u52a0\u8f7d\u5219\u6267\u884c\uff0c\u5c1a\u672a\u52a0\u8f7d\u5219\u4e0d\u6267\u884c\u3002\u5b8c\u5168\u4e0d\u9700\u8981\u7b49\u5230\u524d\u7f6e\u5e93/API mod\u5b8c\u5168\u52a0\u8f7d\u624d\u6267\u884c\u2014\u2014\u524d\u7f6emod\u5b9a\u4e49\u4e86\u5bf9\u5916\u63d0\u4f9b\u7684mod\u65b9\u6cd5\u65f6\u624d\u9700\u8981\u5148\u52a0\u8f7d\u518d\u4f7f\u7528\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/CustomCallbacks.html#_5","title":"\u6267\u884c\u6a21\u5f0f","text":"<p>\u901a\u5e38\u60c5\u51b5\u4e0b<code>Isaac.RunCallback</code>\u4f1a\u5728\u9996\u4e2a\u8fd4\u56de\u4e86\u503c\u7684\u56de\u8c03\u5904\u4e2d\u65ad\u5e76\u8fd4\u56de\u8be5\u503c\uff0c\u4f46\u5982\u679c\u4f60\u9700\u8981\u522b\u7684\u65b9\u6cd5\u5904\u7406\u56de\u8c03\u7684\u6267\u884c\u4e0e\u8fd4\u56de\u6a21\u5f0f\uff0c\u90a3\u4f60\u9700\u8981\u901a\u8fc7<code>Isaac.GetCallbacks</code>\u624b\u52a8\u4fee\u6539\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8ba9\u56de\u8c03\u7ee7\u7eed\u6267\u884c\uff0c\u5e76\u4e14\u7528\u6700\u540e\u5f97\u51fa\u7684\u8fd4\u56de\u503c\u8986\u76d6\u5176\u9996\u4e2a\u53c2\u6570\uff0c\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a</p> <pre><code>MOD:AddCallback(\"TEST_GETCALLBACKS\", function(_, arg) \n    return arg + 2\nend)\nMOD:AddCallback(\"TEST_GETCALLBACKS\", function(_, arg) \n    return arg * 2\nend)\n\nlocal thisArg = 10\nlocal callbacks = Isaac.GetCallbacks(\"TEST_GETCALLBACKS\")\nfor _, callback in ipairs(callbacks) do\n    local ret = callback.Function(callback.Mod, thisArg)\n    if ret ~= nil then\n        thisArg = ret\n    end\nend\n\nprint(thisArg) -- \u663e\u793a 24\n</code></pre> <p><code>Isaac.GetCallbacks</code>\u4f1a\u8fd4\u56de\u4e00\u5f20\u5305\u542b\u6240\u6709\u56de\u8c03\u7684\u8868\uff0c\u5e76\u6309\u56de\u8c03\u4f18\u5148\u7ea7\u4e0e\u6dfb\u52a0\u7684\u5148\u540e\u987a\u5e8f\u81ea\u52a8\u8fdb\u884c\u6392\u5e8f\uff0c\u6240\u4ee5\u65e0\u9700\u62c5\u5fc3\u5faa\u5e8f\u95ee\u9898\uff08\u9664\u975e\u4f60\u60f3\u6539\uff09\u3002\u8868\u4e2d\u5143\u7d20\u7ed3\u6784\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>{\n    Mod = &lt;mod table&gt;,\n    Function = function(mod, callback args),\n    Priority = integer (default 0),\n    Param = entity id / other param (default -1),\n}\n</code></pre> <p>\u82e5\u8be5\u56de\u8c03\u5c1a\u4e0d\u5b58\u5728\uff0c\u5411<code>Isaac.GetCallbacks</code>\u7684\u7b2c\u4e8c\u53c2\u6570\u4e2d\u4f20\u5165true\u503c\u53ef\u4ee5\u4e3a\u5176\u5206\u914d\u4e00\u5f20\u7a7a\u8868\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/CustomCallbacks.html#_6","title":"\u8fdb\u9636\u53c2\u6570","text":"<p>\u65e2\u7136\u901a\u8fc7<code>Isaac.GetCallbacks</code>\u53ef\u4ee5\u5f97\u5230\u8be5\u56de\u8c03\u5bf9\u5e94\u7684\u8868\uff0c\u90a3\u81ea\u7136\u53ef\u4ee5\u4e3a\u5176\u5206\u914d\u4e00\u5f20\u5143\u8868\u3002\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u6e38\u620f\u4e0d\u518d\u4f7f\u7528\u9ed8\u8ba4\u65b9\u5f0f\uff08\u4f7f\u7528==\u7684\u5224\u5b9a\u65b9\u5f0f\uff09\u8fdb\u884c\u68c0\u9a8c\uff0c\u800c\u662f\u7279\u522b\u4f7f\u7528\u4e00\u4e2a\u65b0\u51fd\u6570\uff0c\u4f20\u9012\u4e00\u4e2a\u4e0d\u540c\u7684\u53c2\u6570\u5e76\u8fdb\u884c\u5224\u65ad\u3002</p> <pre><code>--\u4f7f\u7528\u5e26\u81ea\u5b9a\u4e49\u53c2\u6570\u7684\u51fd\u6570\u521d\u59cb\u5316\u81ea\u5b9a\u4e49\u56de\u8c03\n--\u5728Isaac.GetCallbacks\u4e2d\u4f20\u5165true\u4f5c\u4e3a\u5176\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u82e5\u8be5\u56de\u8c03\u4e0d\u5b58\u5728\u5219\u4e3a\u5176\u5206\u914d\u4e00\u5f20\u7a7a\u8868\n--\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\uff0c\u4f46\u5728\u6b64\u4f8b\u4e2d\u6211\u4eec\u5c06\u8868\u4f5c\u4e3a\u53c2\u6570\n--\u82e5\u4efb\u610f\u53c2\u6570\u4e3anil\u5219\u603b\u662f\u5339\u914d\nsetmetatable(Isaac.GetCallbacks(\"TEST_PARAMS_2\", true), {\n    __matchParams = function(a, b)\n        return not a or not b or (type(a) == \"table\" and type(b) == \"table\" and a[1] == b[1] and a[2] == b[2])\n    end\n})\n\n--\u8be5\u56de\u8c03\u65e0\u53c2\u6570\uff0c\u6bcf\u6b21\u90fd\u4f1a\u89e6\u53d1\nMOD:AddCallback(\"TEST_PARAMS_2\", function()\n    print(\"hi!\")\nend)\n\n--\u8fd9\u4e9b\u56de\u8c03\u6709\u53c2\u6570\uff0c\u53ea\u4f1a\u5728\u53c2\u6570\u4e0e\u63d0\u4f9b\u7ed9Isaac.RunCallbackWithParam\u7684\u4e00\u81f4\u65f6\u89e6\u53d1\n--\u4f7f\u7528__matchParams\u8fd9\u4e00\u5143\u65b9\u6cd5\u68c0\u6d4b\u53c2\u6570\u662f\u5426\u5339\u914d\nMOD:AddCallback(\"TEST_PARAMS_2\", function()\n    print(\"hello world\")\nend, {\"hello\", \"world\"})\n\nMOD:AddCallback(\"TEST_PARAMS_2\", function()\n    print(\"greetings earth\")\nend, {\"greetings\", \"earth\"})\n\nMOD:AddCallback(\"TEST_PARAMS_2\", function()\n    print(\"howdy globe\")\nend, {\"howdy\", \"globe\"})\n\n--\u8fd9\u6837\u505a\u5e94\u8be5\u53ea\u4f1a\u663e\u793a\u201chi!\u201d\uff0c\u7136\u540e\u663e\u793a\u201chello world\u201d\nIsaac.RunCallbackWithParam(\"TEST_PARAMS_2\", {\"hello\", \"world\"})\n</code></pre> <p>(\u6848\u4f8b\u63d0\u4f9b\uff1a _Kilburn)</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/CustomCallbacks.html#id","title":"\u552f\u4e00\u56de\u8c03ID","text":"<p>\u5f3a\u70c8\u63a8\u8350\u5728\u81ea\u5b9a\u4e49\u56de\u8c03\u7684ID\u4e2d\u6dfb\u52a0\u72ec\u7279\u524d\u7f00\uff0c\u6700\u597d\u4e0e\u4f60\u7684mod\u76f8\u5173\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u4e0e\u5176\u4ed6mod\u7684\u81ea\u5b9a\u4e49\u56de\u8c03\u91cd\u540d\uff0c\u5bfc\u81f4\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u5982\u679cmod\u540d\u53ebAchievementLibrary\uff0c\u81ea\u5b9a\u4e49\u56de\u8c03\u5e94\u8be5\u53d6\u540d\u4e3aACHLIB_TEST_CALLBACK\uff0c\u6216\u5176\u4ed6\u7c7b\u4f3c\u7684\u547d\u540d\u3002</p> <p>\u82e5\u60f3\u8ba9\u81ea\u5b9a\u4e49\u56de\u8c03\u5373\u4f7f\u91cd\u540d\u4e5f\u5177\u6709\u552f\u4e00\u7684ID\uff0c\u6bd4\u65b9\u8bf4\u5b58\u5728\u4e8e\u5176\u4ed6mod\u4e2d\u7684\u5e93mod\uff0c\u4e14\u8be5\u56de\u8c03\u57fa\u4e8e\u5176\u903b\u8f91\u5e94\u5f53\u8fd0\u884c\u4e0d\u6b62\u4e00\u6b21\uff0c\u90a3\u5c31\u53ef\u4ee5\u4f7f\u7528\u8868\u5f15\u7528\u4f5c\u4e3a\u5176ID\uff08\u4f7f\u7528\u5b57\u7b26\u4e32ID\u4f1a\u5bfc\u81f4\u5176\u4ed6\u540c\u540d\u56de\u8c03\u4e5f\u8fd0\u884c\u4e0d\u6b62\u4e00\u6b21\uff09\u3002\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>MyLibrary.Callbacks.TEST_CALLBACK = {}\nMyLibrary.Callbacks.TEST_CALLBACK_2 = {}\n\nMOD:AddCallback(MyLibrary.Callbacks.TEST_CALLBACK, function\n() \n    print(\"TEST 1\")\nend)\nMOD:AddCallback(MyLibrary.Callbacks.TEST_CALLBACK_2, function()\n    print(\"TEST 2\")\nend)\n\nIsaac.RunCallback(MyLibrary.Callbacks.TEST_CALLBACK)\nIsaac.RunCallback(MyLibrary.Callbacks.TEST_CALLBACK_2)\n</code></pre> <p>\u7531\u4e8e\u6bcf\u4e2a\u8868\u5f15\u7528\u90fd\u662f\u552f\u4e00\u7684\uff0c\u56e0\u6b64\u6bcf\u5f20\u8868\u90fd\u4f1a\u88ab\u89c6\u4f5c\u4e0d\u540c\u7684ID\uff0c\u8fdb\u800c\u907f\u514d\u51b2\u7a81\u3002\u8fd9\u4e48\u505a\u6709\u4e2a\u4f18\u70b9\uff1a\u6bcf\u4e2a\u56de\u8c03\u90fd\u5177\u6709\u552f\u4e00\u7684\u5c40\u90e8\u5b9a\u4e49ID\uff0c\u4e0d\u4f1a\u4e0e\u53ef\u80fd\u91cd\u540d\u7684\u5b57\u7b26\u4e32\u5171\u4eab\u5168\u5c40\u7a7a\u95f4\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html","title":"[\u6559\u7a0b] \u63a7\u5236\u53f0","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#_2","title":"\u524d\u63d0\u6761\u4ef6","text":"<p>\u8981\u8bbf\u95ee\u8c03\u8bd5\u63a7\u5236\u53f0\uff0c\u60a8\u5fc5\u987b\u5728 options.ini \u6587\u4ef6\u4e2d\u542f\u7528 <code>EnableDebugConsole</code> \u9009\u9879\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8be5\u6587\u4ef6\u4f4d\u4e8e\uff1a</p> <pre><code>C:\\Users\\%USERNAME%\\Documents\\My Games\\Binding of Isaac Repentance\\options.ini\n</code></pre> <p>\uff08\u7f16\u8f91\u6b64\u6587\u4ef6\u65f6\u8bf7\u786e\u4fdd\u6e38\u620f\u5df2\u5173\u95ed\u3002\uff09</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#_3","title":"\u542f\u7528","text":"<p>\u663e\u793a\u63a7\u5236\u53f0\uff0c\u5728\u6e38\u620f\u4e2d\u6309\u4e0b <code>~</code> \u6216 ` \u952e\u3002\u5728\u5927\u591a\u6570\u82f1\u8bed\u952e\u76d8\u5e03\u5c40\u4e2d\uff0c\u8be5\u952e\u5e94\u8be5\u5728 Esc \u952e\u4e0b\u9762\u3002</p> \u8bed\u8a00 \u952e\u76d8 \u6309\u952e \u82f1\u8bed\uff08\u7f8e\u56fd\uff09 QWERTY ` \u6216 ~ \u82f1\u8bed\uff08\u82f1\u56fd\uff09 QWERTY ' \u6216 @ \u6cd5\u8bed AZERTY \u00f9 \u5fb7\u8bed QWERTZ \u00f6 \u897f\u73ed\u7259\u8bed QWERTY \u00f1 \u610f\u5927\u5229\u8bed QWERTY &gt; \u4e39\u9ea6\u8bed QWERTY \u00e6 \u8461\u8404\u7259\u8bed QWERTY \u00e7","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#_4","title":"\u9690\u85cf","text":"<p>\u9690\u85cf\u63a7\u5236\u53f0\uff0c\u53ea\u9700\u6309 Enter \u800c\u4e0d\u8f93\u5165\u4efb\u4f55\u5185\u5bb9\u3002\u8bf7\u6ce8\u610f\u5267\u900f\uff01 \u60a8\u53ef\u80fd\u4f1a\u5728\u8c03\u8bd5\u63a7\u5236\u53f0\u4e2d\u610f\u5916\u4e86\u89e3\u5230\u60a8\u672c\u60f3\u901a\u8fc7\u5e38\u89c4\u6e38\u620f\u8fc7\u7a0b\u4e2d\u8ba4\u8bc6\u7684\u5185\u5bb9\uff01</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#_5","title":"\u63cf\u8ff0","text":"<p>\u8c03\u8bd5\u63a7\u5236\u53f0\u662f\u81ea\u4ece\u300a\u91cd\u751f\u300b\u4ee5\u6765\u5c31\u4e00\u76f4\u5b58\u5728\u4e8e\u300a\u4ee5\u6492\u300b\u4e2d\u7684\u529f\u80fd\uff0c\u4f46\u5728 AB+ \u7248\u672c\u4e4b\u524d\uff0c\u5b83\u53ea\u5728\u5f00\u53d1\u7248\u672c\u4e2d\u542f\u7528\u3002\u73b0\u5728\uff0cmodder\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u91ca\u653e\u5b83\u7684\u529b\u91cf\u4e86\uff01\u5b83\u53ef\u4ee5\u5927\u5927\u8282\u7701\u5728 mod \u5f00\u53d1\u671f\u95f4\u6d4b\u8bd5\u60a8\u7684\u66f4\u6539\u6240\u9700\u7684\u65f6\u95f4\u3002</p> <p>\u8c03\u8bd5\u63a7\u5236\u53f0\u4e0d\u662f\u5b8c\u5168\u7a33\u5b9a\u7684\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u8f93\u5165\u7684\u547d\u4ee4\u8d85\u51fa\u67d0\u4e9b\u8303\u56f4\u7684\u6570\u5b57\uff0c\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5d29\u6e83\u3002\u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u5d29\u6e83\u7684\u60c5\u51b5\uff0c\u4f46\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u60c5\u51b5\u3002</p> <p>\u5982\u679c\u60a8\u6b63\u5728\u6d4b\u8bd5\u7279\u5b9a\u7684\u9053\u5177\u6216\u9053\u5177\u7ec4\u5408\uff0c\u8f93\u5165\u60a8\u7684\u547d\u4ee4\u7136\u540e\u9000\u51fa\u5e76\u7ee7\u7eed\u6e38\u620f\u662f\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u5f53\u60a8\u7ee7\u7eed\u65f6\uff0c\u60a8\u7684\u9053\u5177\u4f1a\u91cd\u65b0\u52a0\u8f7d\uff0c\u60a8\u65e0\u9700\u518d\u6b21\u8f93\u5165\u76f8\u540c\u7684\u547d\u4ee4\u3002\u6b64\u5916\uff0c\u8bd5\u8bd5\u4f7f\u7528\u526a\u8d34\u677f\uff01\u60a8\u53ef\u4ee5\u4e00\u6b21\u6027\u7c98\u8d34\u591a\u4e2a\u547d\u4ee4\u6216\u4f7f\u7528\u590d\u5236\u547d\u4ee4\u590d\u5236\u60a8\u8f93\u5165\u7684\u6700\u540e\u51e0\u4e2a\u547d\u4ee4\u3002</p> <p>\u6e38\u620f\u4e2d\u4ecd\u7136\u5b58\u5728\u4e00\u4e9b\u672a\u5217\u5728\u6b64\u5904\u7684\u547d\u4ee4\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u5bf9 Nicalis \u5f00\u53d1\u4eba\u5458\u6709\u7528\uff0c\u6216\u8005\u5df2\u4e0d\u518d\u6709\u7528\u3002\u4f8b\u5982\uff0cachievement\u548ceggs\u547d\u4ee4\u5c06\u89e3\u9501\u60a8\u7684\u6e38\u620f\u5b58\u6863\u4e2d\u7684\u5185\u5bb9\u3002\uff08achievement\u5df2\u5728\u5fcf\u6094\u88ab\u5220\u9664\uff09</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#_6","title":"\u547d\u4ee4","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#spawn","title":"spawn","text":"<p>\u751f\u6210\u4e00\u4e2a\u5b9e\u4f53\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>spawn mega maw\nspawn 20\nspawn 10.1\nspawn 10.2.0.4\n</code></pre></p> <p>\u5b9e\u4f53\u4e4b\u95f4\u6709\u76f8\u4f3c\u7684\u540d\u79f0\u662f\u5f88\u5e38\u89c1\u7684\u4e00\u4ef6\u4e8b\u60c5\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u9700\u8981\u8f93\u5165\u540d\u79f0\u7136\u540e\u67e5\u627e\u7f16\u53f7\uff0c\u7136\u540e\u624b\u52a8\u5220\u9664\u5185\u5bb9\u5e76\u8f93\u5165\u7f16\u53f7\u3002\u5c0f\u6570\u70b9\u5141\u8bb8\u6307\u5b9a\uff1a</p> <p><pre><code>\u7c7b\u578b.\u53d8\u4f53.\u5b50\u7c7b\u578b.\u7cbe\u82f1\n</code></pre> <code>spawn 10.2.0.4</code> \u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a\u88c2\u53e3\u5c38\uff08\u7f16\u53f7\u4e3a10\uff09\u7684\u71c3\u70e7\u53d8\u79cd\uff08\u7f16\u53f7\u4e3a.2\uff09\uff0c\u5e26\u6709\u84dd\u8272\u7cbe\u82f1\u7c7b\u578b\uff08\u7f16\u53f7\u4e3a.4\uff09\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#goto","title":"goto","text":"<p>\u79fb\u52a8\u5230\u4e00\u4e2a\u5730\u56fe\u4e4b\u5916\u7684\u989d\u5916\u623f\u95f4\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>goto s.boss.1010\ngoto s.error.21\ngoto d.10\ngoto x.boss.1\ngoto 9 5 1\n</code></pre> <code>s</code> \u662f\u7279\u6b8a\u623f\u95f4\u7c7b\u578b\uff0c<code>d</code> \u662f\u666e\u901a\u623f\u95f4\u7c7b\u578b\uff0c\u800c <code>x</code> \u662f\u6253\u5305\u5728\u5730\u56fe\u6587\u4ef6\u4e2d\u7684\u7279\u6b8a\u623f\u95f4\u7c7b\u578b\u3002\u623f\u95f4\u5c06\u6839\u636e\u6240\u5728\u7684\u697c\u5c42\u800c\u4e0d\u540c\uff0c\u56e0\u6b64 <code>goto d.10</code> \u5c06\u5728\u7b2c\u4e00\u5c42\u548c\u7b2c\u4e09\u5c42\u8fdb\u5165\u5230\u4e0d\u540c\u7684\u623f\u95f4\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#stage","title":"stage","text":"<p>\u79fb\u52a8\u5230\u540c\u4e00\u4e2a\u79cd\u5b50\u7684\u53e6\u4e00\u5c42\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>stage 1\nstage 10a\nstage 3b\n</code></pre></p> <p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8df3\u5230\u540e\u9762\u7684\u697c\u5c42\uff0c\u8fd4\u56de\u5230\u65e9\u671f\u7684\u697c\u5c42\uff0c\u6216\u901a\u8fc7\u8f93\u5165\u5f53\u524d\u697c\u5c42\u7684id\u6765\u91cd\u7f6e\u5f53\u524d\u697c\u5c42\u3002\u8f93\u5165\u4e0d\u5b58\u5728\u7684\u697c\u5c42\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6e38\u620f\u5d29\u6e83\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#gridspawn","title":"gridspawn","text":"<p>\u5728\u623f\u95f4\u7684\u968f\u673a\u4f4d\u7f6e\u751f\u6210\u7ed9\u5b9aID\u7684\u7f51\u683c\u5b9e\u4f53\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>gridspawn 1000    -- \u751f\u6210\u5ca9\u77f3\ngridspawn 1494    -- \u751f\u6210\u5f69\u8679\u4fbf\u4fbf\ngridspawn 9000    -- \u751f\u6210\u9677\u9631\u95e8\ngridspawn 9000.1  -- \u751f\u6210\u865a\u7a7a\u4f20\u9001\u95e8\ngridspawn 9100    -- \u751f\u6210\u697c\u68af\n</code></pre></p> <p>\u7531\u4e8e\u65e0\u6cd5\u8986\u76d6\u5176\u4ed6\u7f51\u683c\u5b9e\u4f53\u6216\u5c1d\u8bd5\u5728\u623f\u95f4\u5916\u751f\u6210\uff0c\u4e0d\u603b\u662f\u80fd\u6b63\u5e38\u751f\u6548\u3002\u6c9f\u58d1 \u4e0d\u4f1a\u6b63\u786e\u663e\u793a\uff0c\u79bb\u5f00\u623f\u95f4\u518d\u56de\u6765\u53ef\u4ee5\u4f7f\u5176\u6b63\u5e38\u663e\u793a\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#debug","title":"debug","text":"<p>\u8fd9\u662f\u4e00\u4e9b\u6709\u7528\u7684\u6d4b\u8bd5\u4f5c\u5f0a\u7801\uff0c\u4e00\u4e9b\u672a\u5728\u6b64\u5904\u5217\u51fa\u7684\u4f5c\u5f0a\u7801\u53ef\u80fd\u5df2\u8fc7\u65f6\u3001\u65e0\u7528\u6216\u6709\u95ee\u9898\u3002\u4ee5\u4e0b\u662f\u4ecd\u7136\u6709\u7528\u7684\u4f5c\u5f0a\u7801\u3002</p> <p>debug 3 \u5b8c\u5168\u65e0\u654c\u3002</p> <p>debug 4 +40 \u4f24\u5bb3\u3002\u4e0e\u8c46\u5976\u4e00\u8d77\u4f7f\u7528\u6548\u679c\u5f88\u597d\u3002\u6240\u6709\u9970\u54c1\u53d8\u4e3a\u91d1\u9970\u54c1\u3002</p> <p>debug 5 \u5728\u5c4f\u5e55\u5e95\u90e8\u663e\u793a\u5173\u4e8e\u5f53\u524d\u623f\u95f4\u7684\u6587\u672c\u3002</p> <p>debug 6 \u5728\u5c4f\u5e55\u4e0a\u753b\u51fa\u4ee3\u8868\u5b9e\u4f53\u4f24\u5bb3\u51fb\u4e2d\u6846\u7684\u5706\u5708\u3002\u5706\u5708\u7684\u989c\u8272\u53d6\u51b3\u4e8e\u5b9e\u4f53\u7684\u78b0\u649e\u3002</p> \u78b0\u649e \u989c\u8272 \u65e0 \u65e0 \u4ec5\u73a9\u5bb6 \u6a59\u8272 \u4ec5\u73a9\u5bb6\u7269\u4f53\uff08\u73a9\u5bb6\u3001\u6cea\u5f39\u3001\u8ddf\u73ed\u7b49\uff09 \u7c89\u8272 \u4ec5\u654c\u4eba \u7eff\u8272 \u5168\u90e8 \u7ea2\u8272 \u8c03\u8bd5\u5f62\u72b6 \u9ec4\u8272 \u672a\u77e5\u78b0\u649e \u9ed1\u8272 <p>debug 7 \u663e\u793a\u4f24\u5bb3\u503c\uff0c\u7c7b\u4f3c\u4e8e\u8718\u86db\u6a21\u7ec4\u9053\u5177\u3002</p> <p>debug 8 \u4e3b\u52a8\u9053\u5177\u59cb\u7ec8\u6ee1\u5145\u80fd\u3002</p> <p>debug 9 +50 \u8fd0\u6c14\uff0c\u56e0\u6b64\u50cf\u968f\u673a\u6cea\u5f39\u6548\u679c\u4e4b\u7c7b\u7684\u57fa\u4e8e\u8fd0\u6c14\u7684\u968f\u673a\u4e8b\u4ef6\u66f4\u5bb9\u6613\u53d1\u751f\u3002</p> <p>debug 10 \u6240\u6709\u654c\u4eba\u5feb\u901f\u53d7\u5230\u4f24\u5bb3\uff0c\u6240\u4ee5\u623f\u95f4\u5728\u901a\u5e38\u4e0d\u5230\u4e00\u79d2\u949f\u5185\u5c31\u88ab\u6e05\u7406\u3002</p> <p>debug 12 \u663e\u793a\u6301\u6709\u7684\u9053\u5177\u548c\u4e34\u65f6\u9053\u5177\u6548\u679c</p> <p>debug 13 \u5728\u5c4f\u5e55\u4e0a\u753b\u51fa\u4ee3\u8868\u5b9e\u4f53\u7f51\u683c\u78b0\u649e\u6846\u7684\u70b9\u5706\u5708\u3002\u5706\u5708\u7684\u989c\u8272\u53d6\u51b3\u4e8e\u5b9e\u4f53\u7684\u7f51\u683c\u78b0\u649e\u7c7b\u578b\u3002\u70b9\u7684\u6570\u91cf\u53d6\u51b3\u4e8e\u4e3a\u5b9e\u4f53\u8bbe\u7f6e\u7684<code>numGridCollisionPoint</code>\u5c5e\u6027\u3002</p> \u78b0\u649e \u989c\u8272 \u65e0 \u65e0 \u6c34\u5e73\u5899 \u6df1\u7ea2 \u5782\u76f4\u5899 \u6df1\u7eff \u4efb\u610f\u5899 \u9ec4\u8272 \u5b50\u5f39\u79fb\u52a8 \u6a59\u8272 \u5730\u9762\u79fb\u52a8 \u7ea2\u8272 \u9664\u4e86\u5751\u4ee5\u5916\u7684\u969c\u788d\u7269 \u9752\u8272 \u5751\u5185\u79fb\u52a8 \u6d45\u7d2b \u672a\u77e5\u78b0\u649e \u9ed1\u8272","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#giveitem","title":"giveitem","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#g","title":"\u522b\u540d\uff1a<code>g</code>","text":"<p>\u7ed9\u4e88\u89d2\u8272\u9053\u5177\u3001\u9970\u54c1\u3001\u5361\u724c\u6216\u80f6\u56ca\u3002</p> <p>\u9053\u5177\u548c\u9970\u54c1\u7684\u8bed\u6cd5\uff1a <pre><code>giveitem dr. fetus\ngiveitem c15\ngiveitem Petrified Poop\ngiveitem t15\ngiveitem ipec\ng mutant sp\ng soy milk\n</code></pre> \u9053\u5177\u540d\u79f0\u4e4b\u95f4\u7684\u51b2\u7a81\u6bd4\u8f83\u5e38\u89c1\uff0c\u56e0\u6b64\u60a8\u53ef\u80fd\u9700\u8981\u8f93\u5165\u540d\u79f0\u4ee5\u627e\u51fa\u7f16\u53f7\uff0c\u7136\u540e\u624b\u52a8\u5220\u9664\u5e76\u8f93\u5165\u7f16\u53f7\u3002</p> <p>\u5bf9\u4e8e\u9053\u5177\uff0c\u4f7f\u7528\u201cc15\u201d\u800c\u4e0d\u662f\u540d\u79f0\u6765\u7ed9\u51fa\u9053\u5177\u7f16\u53f7\u3002</p> <p>\u5bf9\u4e8e\u9970\u54c1\uff0c\u4f7f\u7528\u201ct15\u201d\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u8f93\u5165\u5b8c\u6574\u540d\u79f0\uff0c\u5219\u5b83\u53ef\u4ee5\u81ea\u52a8\u8865\u5168\u3002\u5bf9\u4e8e\u4e00\u4e9b\u5947\u602a\u7684\u9053\u5177\u540d\u79f0\uff08\u4f8b\u5982\u201c&lt;3\u201d\uff09\uff0c\u5b83\u65e0\u6cd5\u5de5\u4f5c\uff0c\u56e0\u6b64\u60a8\u5fc5\u987b\u627e\u51fa\u53ef\u6536\u96c6\u7f16\u53f7\u5e76\u4f7f\u7528\u201cc15\u201d\u3002</p> <p>\u4f7f\u7528\u5927\u5199\u7684T\u800c\u975e\u5c0f\u5199\u7684t\u4ee3\u66ff\u9970\u54c1\u7f16\u53f7\u7684\u5f00\u5934\u5b57\u6bcd\uff0c\u53ef\u4ee5\u7ed9\u4e88\u91d1\u9970\u54c1\u3002</p> <p>\u80f6\u56ca\u8bed\u6cd5\uff1a <pre><code>giveitem p0\ng p22\n</code></pre></p> <p>\u5361\u724c\u8bed\u6cd5\uff1a <pre><code>giveitem k1\ng k45\n</code></pre></p> <p>\u4e0d\u5e78\u7684\u662f\uff0c\u60a8\u65e0\u6cd5\u901a\u8fc7\u540d\u79f0\u8f93\u5165\u80f6\u56ca\u6216\u5361\u724c\uff0c\u56e0\u6b64\u60a8\u5fc5\u987b\u627e\u51fa\u7f16\u53f7\u3002</p> <p>\u5373\u4f7f\u80f6\u56ca\u6548\u679c\u4e0d\u5728\u672c\u5c40\u6e38\u620f\u4e2d\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u7ed9\u81ea\u5df1\u80f6\u56ca\u3002\u4e4b\u540e\u5b83\u4f1a\u5728\u672c\u5c40\u6e38\u620f\u4e2d\u8986\u76d6\u4e4b\u524d\u7684\u80f6\u56ca\u3002</p> <p>\u4f7f\u7528\u5927\u5199\u7684P\u800c\u975e\u5c0f\u5199\u7684p\u4ee3\u66ff\u80f6\u56ca\u7f16\u53f7\u7684\u5f00\u5934\u5b57\u6bcd\uff0c\u53ef\u4ee5\u7ed9\u4e88\u5927\u80f6\u56ca\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#giveitem2","title":"giveitem2","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#g2","title":"\u522b\u540d\uff1a<code>g2</code>","text":"<p>\u4e0e<code>giveitem</code>\u76f8\u540c\uff0c\u4f46\u7528\u4e8e\u4ee5\u626b\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#remove","title":"remove","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#r","title":"\u522b\u540d\uff1a<code>r</code>","text":"<p>\u79fb\u9664\u89d2\u8272\u7684\u9053\u5177\u3001\u9970\u54c1\u3001\u5361\u724c\u6216\u80f6\u56ca\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>remove t53\nremove soy milk\nremove cursed eye\nr bob's brain\nr experi\nremove *\n</code></pre></p> <p><code>remove *</code> \u662f\u8be5\u547d\u4ee4\u7684\u4e00\u4e2a\u7279\u6b8a\u7248\u672c\uff0c\u4f1a\u5220\u9664\u6240\u6709\u9053\u5177\u3001\u9970\u54c1\u3001\u5361\u724c\u3001\u80f6\u56ca\u5404\u4e00\u4efd\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#costumetest","title":"costumetest","text":"<p>\u4f7f\u89d2\u8272\u83b7\u5f97\u4e00\u4e9b\u5b8c\u5168\u968f\u673a\u7684\u5916\u89c2\uff0c\u800c\u4e0d\u9700\u8981\u76f8\u5173\u7684\u9053\u5177\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>costumetest\ncostumetest 33\n</code></pre></p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#restart","title":"restart","text":"<p>\u4e0e\u6309\u4f4fR\u952e\u76f8\u540c\u3002\u5c06\u6e38\u620f\u91cd\u7f6e\u56de\u65b0\u6e38\u620f\u7684\u5f00\u5934\u3002\u5728\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u6570\u5b57\u5c06\u4ee5\u7279\u5b9a\u89d2\u8272\u91cd\u65b0\u5f00\u59cb\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>restart\nrestart 1\n</code></pre> \u7b2c\u4e00\u6761\u547d\u4ee4\u5c06\u4ee5\u5f53\u524d\u89d2\u8272\u91cd\u65b0\u5f00\u59cb\uff0c\u540e\u8005\u5c06\u4ee5\u62b9\u5927\u62c9\u91cd\u65b0\u5f00\u59cb\u3002\u672b\u5c3e\u7684\u6570\u5b57\u53ef\u4ee5\u57280-40\u8303\u56f4\u5185\u3002\u8d85\u51fa\u6b64\u8303\u56f4\u7684\u4efb\u4f55\u6570\u5b57\u90fd\u4f1a\u4f7f\u6e38\u620f\u5d29\u6e83\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#listcollectibles","title":"listcollectibles","text":"<p>\u6253\u5370\u51fa\u89d2\u8272\u62e5\u6709\u7684\u6240\u6709\u9053\u5177\u4ee5\u53ca\u6bcf\u79cd\u9053\u5177\u7684\u6570\u91cf\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>g c1\nrepeat 4\ng c2\nlistcollectibles\n</code></pre></p> <p>\u8fd9\u5c06\u6253\u5370\u51fa\"The Sad Onion:5,The Inner Eye:1\"\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#repeat","title":"repeat","text":"<p>\u91cd\u590d\u4e0a\u4e00\u4e2a\u547d\u4ee4N\u6b21\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>spawn 10\nrepeat 50\ngiveitem meat!\nrepeat 100\nrepeat 100\n</code></pre></p> <p>\u4e0a\u9762\u7684\u547d\u4ee4\u5c06\u751f\u6210\u4e00\u4e2a\u76b1\u7709\u88c2\u53e3\u5c38\uff0c\u7136\u540e\u518d\u751f\u621050\u4e2a\u76b1\u7709\u88c2\u53e3\u5c38\uff1b\u7ed9\u4f60\u4e00\u4e2a\u751f\u8089\uff01\uff0c\u7136\u540e\u518d\u7ed9\u4f60200\u4e2a\u751f\u8089\uff01\u3002</p> <p>repeat\u4f1a\u68c0\u6d4b\u4e0a\u4e00\u4e2a\u63a7\u5236\u53f0\u547d\u4ee4\u3002\u4e0d\u662frepeat\u547d\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u5c06\u6839\u636e\u8bf7\u6c42\u7684\u6b21\u6570\u91cd\u65b0\u8f93\u5165\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b64\u529f\u80fd\u4e3a\u81ea\u5df1\u63d0\u4f9b\u5927\u91cf\u9053\u5177\u6216\u751f\u6210\u5927\u91cf\u654c\u4eba\u3002</p> <p>\u8bf7\u8c28\u614e\u4f7f\u7528\uff01\u8bb0\u4f4f\uff0c\u67d0\u4e9b\u547d\u4ee4\u7684\u6781\u7aef\u91cd\u590d\u6b21\u6570\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6e38\u620f\u5d29\u6e83\u6216\u672a\u54cd\u5e94\u5f88\u957f\u65f6\u95f4\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#clearseeds","title":"clearseeds","text":"<p>\u6e05\u9664\u5f53\u524d\u6e38\u620f\u4e2d\u7684\u6240\u6709\u5f69\u86cb\u79cd\u5b50\u6548\u679c\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#seed","title":"seed","text":"<p>\u91cd\u65b0\u8bbe\u7f6e\u672c\u5c40\u6e38\u620f\u7684\u79cd\u5b50\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>seed GGGG GGGG\nseed T1MM AY48\n</code></pre> \u6700\u597d\u8fd8\u662f\u9000\u51fa\u5230\u89d2\u8272\u9009\u62e9\u754c\u9762\uff0c\u6309\u7167\u6b63\u5e38\u65b9\u5f0f\u8f93\u5165\u79cd\u5b50\u3002\u5f69\u86cb\u79cd\u5b50\u65e0\u6548\u3002</p> <p>\u79cd\u5b50\u5927\u5c0f\u5199\u654f\u611f\uff08\u4ec5\u5927\u5199\uff09\uff0c\u4e0d\u4f1a\u5c06 \"i\" \u66ff\u6362\u4e3a \"1\" \u7b49\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#challenge","title":"challenge","text":"<p>\u4ee5\u7ed9\u5b9aID\u7684\u6311\u6218\u4e0a\u4ee5\u968f\u673a\u79cd\u5b50\u5f00\u59cb\u65b0\u7684\u6e38\u620f\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>challenge 20\n</code></pre></p> <p>\u5982\u679c\u6570\u5b57\u5927\u4e8e\u57fa\u672c\u6e38\u620f\u4e2d\u5305\u542b\u7684\u6311\u6218\u6570\u91cf\uff0c\u5219\u4f1a\u5bfc\u81f4\u6e38\u620f\u5d29\u6e83\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#combo","title":"combo","text":"<p>\u4f7f\u89d2\u8272\u83b7\u5f97\u67d0\u4e2a\u9053\u5177\u6c60\u4e2d\u6307\u5b9a\u6570\u91cf\u7684\u968f\u673a\u9053\u5177\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>combo 0.69\n</code></pre></p> <p>\u672c\u4f8b\u4e2d\uff0c\u4ece\u5b9d\u85cf\u623f\u9053\u5177\u6c60\u4e2d\u7ed9\u4e88 69 \u4e2a\u968f\u673a\u9053\u5177\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#macro","title":"macro","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#m","title":"\u522b\u540d\uff1a<code>m</code>","text":"<p>\u8bed\u6cd5\uff1a <pre><code>macro mom\nmacro hud\nm bigchest\n</code></pre></p> <p>\u8fd9\u4e2a\u547d\u4ee4\u5e76\u4e0d\u662f\u4e3a\u4e86\u4e00\u822c\u7528\u6237\u800c\u8bbe\u8ba1\u7684\uff0c\u56e0\u4e3a\u5b8f\u53ea\u80fd\u5728 C++ \u4ee3\u7801\u4e2d\u6dfb\u52a0\u3002\u62b1\u6b49\uff01\u5982\u679c\u6709\u8db3\u591f\u7684\u9700\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e3a\u6a21\u7ec4\u5236\u4f5c\u8005\u6dfb\u52a0\u7c7b\u4f3c\u7684\u529f\u80fd\u3002\u5b83\u53ea\u662f\u4f7f\u7528\u7f29\u5199\u5c06\u4e00\u5806\u786c\u7f16\u7801\u7684\u63a7\u5236\u53f0\u547d\u4ee4\u4f9d\u6b21\u7c98\u8d34\u5728\u4e00\u8d77\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u526a\u8d34\u677f\u6765\u8fbe\u5230\u7c7b\u4f3c\u7684\u6548\u679c\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#playsfx","title":"playsfx","text":"<p>\u64ad\u653e\u6307\u5b9aid\u7684\u97f3\u6548\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>playsfx 1\nplaysfx 1 0.5\n</code></pre> \u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4ee5\u6307\u5b9a\u97f3\u9ad8\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#curse","title":"curse","text":"<p>\u83b7\u5f97\u8bc5\u5492\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>curse 2\ncurse 16\ncurse 127\n</code></pre></p> <p>\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u503c\uff0c\u8fd9\u4e2a\u503c\u5bf9\u5e94\u4e8e\u6240\u9700\u8bc5\u5492\u53f7\u7801\u7684\u603b\u548c\u3002\u9ed1\u6697\uff081\uff09+\u8ff7\u5bab\uff082\uff09+\u8ff7\u9014\uff084\uff09+\u672a\u77e5\uff088\uff09+\u8bc5\u5492\uff0816\uff09+\u6df7\u4e71\uff0832\uff09+\u81f4\u76f2\uff0864\uff09+\u5927\u623f\u95f4\uff08128\uff09= 255\u3002</p> <p>\u5728\u6dfb\u52a0\u4e86\u8ff7\u5bab\u8bc5\u5492\u540e\uff0cstage\u6216reseed\u547d\u4ee4\u53ef\u7528\u4e8e\u5f3a\u5236\u91cd\u65b0\u751f\u6210\u697c\u5c42\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#reseed","title":"reseed","text":"<p>\u4f7f\u7528\u65b0\u7684\u697c\u5c42\u79cd\u5b50\u751f\u6210\u5f53\u524d\u5c42\u7684\u65b0\u5e03\u5c40\u3002\u8be5\u5c42\u5c06\u4e0d\u518d\u5339\u914d\u5176\u4ed6\u73a9\u5bb6\u4f7f\u7528\u76f8\u540c\u7684\u79cd\u5b50\u6240\u89c1\u5230\u7684\u5c42\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#copy","title":"copy","text":"<p>\u5c06\u6700\u540eN\u4e2a\u63a7\u5236\u53f0\u547d\u4ee4\u590d\u5236\u5230\u526a\u8d34\u677f\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>copy 1\ncopy 2\ncopy 3\n</code></pre> \u4f7f\u7528Ctrl+V\u6216Mac\u4e0a\u7684Command+V\u7c98\u8d34\u4e00\u4e2a\u6216\u591a\u4e2a\u547d\u4ee4\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#clear","title":"clear","text":"<p>\u6e05\u9664\u63a7\u5236\u53f0\u5185\u5bb9\u3002\u8fd9\u5bf9\u4e8e\u89c6\u9891\u5f55\u5236\u6216\u8005\u60f3\u8981\u5904\u7406\u8bc1\u636e\u7684\u60c5\u51b5\u5f88\u6709\u7528\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#lua","title":"lua","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#l","title":"\u522b\u540d\uff1a<code>l</code>","text":"<p>\u76f4\u63a5\u8fd0\u884c\u4e00\u884cLua\u4ee3\u7801\u3002</p> <p>\u4f8b\u5b50\uff1a <pre><code>lua print(\"Hello World!\")\n\nl for _,v in pairs(Isaac.GetRoomEntities()) do if v:IsVulnerableEnemy() then print(v.HitPoints..\"/\"..v.MaxHitPoints) end end\n</code></pre> \u7b2c\u4e00\u4e2a\u793a\u4f8b\u53ea\u662f\u5c06\u201cHello World\uff01\u201d\u6253\u5370\u5230\u63a7\u5236\u53f0\uff0c\u800c\u7b2c\u4e8c\u4e2a\u793a\u4f8b\u6253\u5370\u623f\u95f4\u4e2d\u6bcf\u4e2a\u975e\u65e0\u654c\u654c\u4eba\u7684\u5f53\u524dHP\u548c\u6700\u5927HP\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#luarun","title":"luarun","text":"<p>\u63a5\u53d7\u4e00\u4e2a lua \u6587\u4ef6\u7684\u8def\u5f84\u5e76\u7acb\u5373\u8fd0\u884c\u5b83\u3002</p> <p>\u793a\u4f8b\uff1a <pre><code>luarun /full_path/hello.lua\nluarun relative_path/hello.lua\n</code></pre> \u8def\u5f84\u76f8\u5bf9\u4e8e\u6e38\u620f\u5b89\u88c5\u7684\u6587\u4ef6\u5939\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#luamod","title":"luamod","text":"<p>\u63a5\u53d7\u4e00\u4e2a\u6a21\u7ec4\u6587\u4ef6\u5939\u7684\u540d\u79f0\u5e76\u8fd0\u884c\u5176\u4e2d\u7684 main.lua\u3002</p> <p>\u793a\u4f8b\uff1a <pre><code>luamod mygreatmod\n</code></pre> \u8fd9\u53ef\u4ee5\u7528\u4e8e\u91cd\u65b0\u52a0\u8f7d\u6a21\u7ec4\u800c\u65e0\u9700\u91cd\u65b0\u542f\u52a8\u6e38\u620f\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#luarun_1","title":"luarun","text":"<p>\u62a5\u544a Lua \u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#metro","title":"metro","text":"<p>\u4fee\u6539\u4f7f\u7528\u8282\u62cd\u5668\u65f6\u6240\u9009\u62e9\u7684\u9053\u5177\u3002</p> <p>\u793a\u4f8b\uff1a <pre><code>metro c1\n</code></pre></p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#delirious","title":"delirious","text":"<p>\u4fee\u6539\u4f7f\u7528\u7cbe\u795e\u9519\u4e71\u65f6\u6240\u9009\u62e9\u7684\u5934\u76ee\u3002</p> <p>\u793a\u4f8b\uff1a <pre><code>delirious 1\n</code></pre></p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#restock","title":"restock","text":"<p>\u91cd\u65b0\u751f\u6210\u5f53\u524d\u623f\u95f4\u7684\u5e95\u5ea7\u9053\u5177\u548c\u5546\u5e97\u5546\u54c1\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#rewind","title":"rewind","text":"<p>\u4f7f\u6e38\u620f\u5fd8\u8bb0\u5f53\u524d\u623f\u95f4\u4e2d\u7684\u66f4\u6539\u5e76\u5c06\u89d2\u8272\u4f20\u9001\u56de\u4e0a\u4e00\u4e2a\u623f\u95f4\u3002\uff08\u7c7b\u4f3c\u53d1\u5149\u6c99\u6f0f\u7684\u6548\u679c\uff09</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#testbosspool","title":"testbosspool","text":"<p>\u6253\u5370\u5f53\u524d\u5c42\u4e2d\u5934\u76ee\u540d\u79f0\u548c\u767e\u5206\u6bd4\u51e0\u7387\uff08100%=10000\uff09\u7684\u5217\u8868\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/DebugConsole.html#reloadwisps","title":"reloadwisps","text":"<p>\u91cd\u65b0\u52a0\u8f7d\u7531\u7f8e\u5fb7\u4e4b\u4e66\u751f\u6210\u7684\u7075\u706b\u548c\u7531\u65e0\u5e95\u5751\u751f\u6210\u7684\u8757\u866b\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/ExampleProject.html","title":"[\u6559\u7a0b] \u793a\u4f8b\u9879\u76ee","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/ExampleProject.html#mod","title":"\u793a\u4f8bMOD","text":"<p>\u8981\u5236\u4f5c\u65b0\u7684mod\uff0c\u8bf7\u5728\u4ee5\u4e0b\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b50\u76ee\u5f55\uff1a</p> <pre><code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\mods\n</code></pre> <p>\uff08\u8fd9\u4e0e\u60a8\u7684Steam\u5b89\u88c5\u76ee\u5f55\u76f8\u5bf9\u5e94\u3002\u5982\u679c\u60a8\u5c06\u6e38\u620f\u5b89\u88c5\u5230\u81ea\u5b9a\u4e49\u4f4d\u7f6e\uff0c\u90a3\u4e48\u8def\u5f84\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002\uff09</p> <p>\u4f7f\u7528\u4f60\u7684mod\u540d\u79f0\u547d\u540d\u5b50\u76ee\u5f55\u3002\u4f8b\u5982\uff1a</p> <pre><code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\mods\\customTears\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u5728\u65b0\u521b\u5efa\u7684\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684<code>main.lua</code>\u6587\u4ef6\u3002\u8fd9\u4e2a\u6587\u4ef6\u5c06\u5305\u542bLua\u4ee3\u7801\uff0c\u5b83\u5c06\u544a\u8bc9\u6e38\u620f\u4f60\u7684mod\u5e94\u8be5\u5982\u4f55\u54cd\u5e94\u6e38\u620f\u4e2d\u7684\u4e8b\u4ef6\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8bmod\uff0c\u5b83\u4f1a\u6539\u53d8\u73a9\u5bb6\u7684\u6cea\u5f39\uff0c\u4f7f\u5176\u80fd\u591f\u51cf\u901f\u654c\u4eba\uff0c\u5e76\u5177\u6709\u6697\u7269\u8d28\u7684\u89c6\u89c9\u6548\u679c\uff1a</p> <pre><code>-- \u6ce8\u518cmod\uff0c\u5b83\u53ef\u4ee5\u6dfb\u52a0\u4e0e\u6e38\u620f\u4e2d\u4e8b\u4ef6\u76f8\u5bf9\u5e94\u7684\u4ee3\u7801\uff08\u5373\u201c\u56de\u8c03\u201d\uff09\u3002\nlocal mod = RegisterMod(\"Custom Tears\", 1)\n\nlocal function postFireTear(_, tear)\n  -- \u4f7f\u7528\u201c\u4e8c\u8fdb\u5236\u6216\u201d\u64cd\u4f5c\u7b26\u4e3a\u6cea\u5f39\u6dfb\u52a0\u51cf\u901f\u6548\u679c\u3002\n  tear.TearFlags = tear.TearFlags | TearFlags.TEAR_SLOW\n\n  -- \u66f4\u6539\u6cea\u5f39\u7684\u5916\u89c2\u3002\uff08\u6cea\u5f39\u7684\u201cVariant\u201d\u88ab\u6e38\u620f\u7528\u6765\u51b3\u5b9a\u5982\u4f55\u7ed8\u5236\u5916\u89c2\u3002\uff09\n  tear:ChangeVariant(TearVariant.DARK_MATTER)\nend\n\n -- \u6307\u5b9a\u5f53\u73a9\u5bb6\u53d1\u5c04\u6cea\u5f39\u65f6\uff0c\u5e94\u6267\u884c\u201conTear\u201d\u51fd\u6570\u3002\nmod:AddCallback(ModCallbacks.MC_POST_FIRE_TEAR, postFireTear)\n</code></pre> <p>\u4ece\u8fd9\u91cc\uff0c\u60a8\u53ef\u4ee5\u66f4\u6539\u4ee3\u7801\u4ee5\u6267\u884c\u4efb\u4f55\u60a8\u60f3\u8981\u7684\u64cd\u4f5c\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u60a8\u5fc5\u987b\u6dfb\u52a0\u9002\u5f53\u7684\u56de\u8c03\uff08\u4ee5\u4fbf\u5728\u6240\u9700\u7684\u7279\u5b9a\u4e8b\u4ef6\u5185\u8fd0\u884c\u4ee3\u7801\uff09\uff0c\u7136\u540e\u5fc5\u987b\u4f7f\u7528\u9002\u5f53\u7684API\u65b9\u6cd5\uff08\u6839\u636e\u4f60\u60f3\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u6539\u53d8\u6e38\u620f\u4e2d\u7684\u4e8b\u7269\uff09\u3002</p> <p>\u9996\u5148\u6d4f\u89c8<code>ModCallbacks</code>\u679a\u4e3e\u7684\u6587\u6863\uff0c\u4e86\u89e3\u6240\u6709\u4e0d\u540c\u7684\u56de\u8c03\u9009\u9879\u662f\u4ec0\u4e48\u3002\u7136\u540e\uff0c\u6d4f\u89c8API\u6587\u6863\u7684\u5176\u4f59\u90e8\u5206\uff0c\u4e86\u89e3\u54ea\u4e9b\u5185\u5bb9\u53ef\u4ee5\u8bfb\u53d6\u548c\u66f4\u6539\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/FunctionsInLua.html","title":"[\u6559\u7a0b] Lua\u4e2d\u7684\u51fd\u6570","text":"<p>\u9996\u5148\uff0c\u8bf7\u89c1\u793a\u4f8b\u9879\u76ee\u6559\u7a0b\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/FunctionsInLua.html#_1","title":"\u5c40\u90e8\u51fd\u6570","text":"<p>Lua\u4e2d\u6700\u57fa\u672c\u7684\u51fd\u6570\u7c7b\u578b\u662f\u5c40\u90e8\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u662f\u201c\u793a\u4f8b\u9879\u76ee\u201d\u6559\u7a0b\u4e2d\u7684\u4ee3\u7801\uff1a</p> <pre><code>local mod = RegisterMod(\"My Custom Tears\", 1)\n\nlocal function postFireTear(_, tear)\n  -- MOD\u4ee3\u7801\nend\n\nmod:AddCallback(ModCallbacks.MC_POST_FIRE_TEAR, postFireTear)\n</code></pre> <p>\u5173\u4e8e\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4e00\u4e2a\u6f5c\u5728\u7684\u5947\u602a\u4e4b\u5904\u662f\uff0c\u6211\u4eec\u5c06\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u8868\u793a\u4e3a<code>_</code>\u3002</p> <p>\u6309\u7167\u60ef\u4f8b\uff0c\u672a\u4f7f\u7528\u7684\u53c2\u6570\u4ee5\u4e0b\u5212\u7ebf\u4e3a\u524d\u7f00\uff0c\u5982<code>_foo</code>\u3002\u901a\u8fc7\u5728\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u6ce8\u91ca\u7684\u60c5\u51b5\u4e0b\u5c06\u81ea\u53d8\u91cf\u547d\u540d\u4e3a<code>_</code>\uff0c\u8fd9\u5bf9\u8bfb\u8005\u6765\u8bf4\u662f\u4e00\u4e2a\u6807\u5fd7\uff0c\u8868\u660e\u6211\u4eec\u5b8c\u5168\u5ffd\u7565\u4e86\u8fd9\u4e2a\u53d8\u91cf\uff0c\u5b83\u6ca1\u6709\u4efb\u4f55\u76ee\u7684\u3002</p> <p>\u6211\u4eec\u7684\u672c\u5730\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u201c\u7a7a\u767d\u201d\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u539f\u56e0\u662f\uff0c\u5904\u7406\u56de\u8c03\u7684C++\u4ee3\u7801\u4f7f\u7528\u201c\u5192\u53f7\u8fd0\u7b97\u7b26\u201d\u8c03\u7528\u6240\u63d0\u4f9b\u7684\u51fd\u6570\u3002\u5192\u53f7\u8fd0\u7b97\u7b26\u5728Lua\u624b\u518c\u4e2d\u6709\u4ecb\u7ecd\u3002\u57fa\u672c\u4e0a\uff0c\u5192\u53f7\u662f\u7528<code>self</code>\u53c2\u6570\u8c03\u7528\u51fd\u6570\u7684\u8bed\u6cd5\u7cd6\uff0c\u8be5\u53c2\u6570\u5305\u542b\u51fd\u6570\u6240\u5728\u7684\u6a21\u5757\u3002</p> <p>\u5728\u6211\u4eec\u4f7f\u7528\u672c\u5730\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6709\u6a21\u5757\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u3001\u72ec\u7acb\u7684\u672c\u5730\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7b2c\u4e00\u4e2a\u81ea\u53d8\u91cf\u603b\u662f\u7b49\u4e8enil\u3002</p> <p>\u8ba9\u6211\u4eec\u6765\u770b\u770b\u6a21\u5757\u51fd\u6570\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/FunctionsInLua.html#_2","title":"\u6a21\u5757\u51fd\u6570","text":"<p>\u4ece<code>RegisterMod</code>\u51fd\u6570\u8fd4\u56de\u7684\u5bf9\u8c61\u662f\u4e00\u4e2aLua\u8868\u3002\u7531\u4e8e\u5b83\u662f\u4e00\u4e2a\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8868\u4e2d\u653e\u5165\u4efb\u610f\u51fd\u6570\uff1a</p> <p><pre><code>local mod = RegisterMod(\"My Custom Tears\", 1)\n\nfunction mod.postFireTear(_, tear)\n  -- MOD\u4ee3\u7801\nend\n\nmod:AddCallback(ModCallbacks.MC_POST_FIRE_TEAR, myMod.postFireTear)\n</code></pre> \u5728\u8fd9\u91cc\uff0c\u201cpostFireTear\u201d\u51fd\u6570\u73b0\u5728\u662f\u201cmyMod\u201dLua\u8868\u7684\u4e00\u90e8\u5206\u3002\u6211\u4eec\u7528\u53e5\u70b9\u6765\u8868\u793a\u8fde\u63a5\u3002\u6b64\u4ee3\u7801\u5c06\u4ee5\u4e0e\u672c\u5730\u51fd\u6570\u76f8\u540c\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002</p> <p>\u5728\u58f0\u660e\u51fd\u6570\u65f6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5192\u53f7\u8fd0\u7b97\u7b26\uff1a</p> <pre><code>local mod = RegisterMod(\"My Custom Tears\", 1)\n\nfunction mod:postFireTear(tear)\n  -- MOD\u4ee3\u7801\nend\n\nmod:AddCallback(ModCallbacks.MC_POST_FIRE_TEAR, myMod.postFireTear)\n</code></pre> <p>\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c\u5192\u53f7\u8fd0\u7b97\u7b26\u6307\u5b9a\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5b9e\u9645\u4e0a\u662f\u201cself\u201d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5b9e\u9645\u4e0a\u4e3a\u201ctear\u201d\uff0c\u5c3d\u7ba1\u5b83\u6ca1\u6709\u660e\u786e\u5730\u8fd9\u6837\u5199\u3002\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u5b83\u5c06\u4ee5\u4e0e\u672c\u5730\u51fd\u6570\u76f8\u540c\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002</p> <p>\u8fd8\u8981\u6ce8\u610f\uff0c\u5728\u6dfb\u52a0\u56de\u8c03\u65f6\uff08AddCallback\uff09\uff0c\u6211\u4eec\u4e0d\u4f7f\u7528\u5192\u53f7\u8fd0\u7b97\u7b26\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u4f20\u9012\u5bf9\u51fd\u6570\u7684\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u5b83\u3002</p> <p>\u5728Lua\u4e2d\uff0c\u51fd\u6570\u901a\u5e38\u662f\u6a21\u5757\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u4f7f\u7528\u5192\u53f7\u8fd0\u7b97\u7b26\u8c03\u7528\u5b83\u4eec\u88ab\u8ba4\u4e3a\u662f\u6807\u51c6\u7684\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/FunctionsInLua.html#_3","title":"\u533f\u540d\u51fd\u6570","text":"<p>\u6307\u5b9a\u56de\u8c03\u51fd\u6570\u7684\u7b2c\u4e09\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u533f\u540d\u51fd\u6570\uff0c\u5b83\u662f\u4e00\u4e2a\u6ca1\u6709\u540d\u79f0\u7684\u51fd\u6570\uff1a</p> <pre><code>local mod = RegisterMod(\"My Custom Tears\", 1)\n\nmod:AddCallback(ModCallbacks.MC_POST_FIRE_TEAR, function(_, tear)\n  -- MOD\u4ee3\u7801\nend)\n</code></pre> <p>\u8fd9\u4e2a\u51fd\u6570\u53ea\u5b58\u5728\u4e8eAddCallback\u8c03\u7528\u7684\u8303\u56f4\u5185\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u80fd\u4ece\u5176\u4ed6\u4efb\u4f55\u5730\u65b9\u5f15\u7528\u6216\u8c03\u7528\u5b83\u3002\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u5b83\u5c06\u4ee5\u4e0e\u672c\u5730\u51fd\u6570\u76f8\u540c\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002</p> <p>\u533f\u540d\u51fd\u6570\u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f88\u5bb9\u6613\u952e\u5165\u3002\u60a8\u53ef\u4ee5\u5c06\u5b83\u4eec\u7528\u4e8e\u5177\u6709\u660e\u663e\u610f\u4e49\u7684\u975e\u5e38\u7b80\u77ed\u7684\u51fd\u6570\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html","title":"[\u6559\u7a0b] \u4ee5\u6492MOD\u7684\u6570\u5b66\u548cLua\u6280\u5de7","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#lua","title":"Lua \u6280\u5de7","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#_1","title":"\u904d\u5386\u8868","text":"<p>\u904d\u5386\u8868\u7684\u6700\u4f73\u65b9\u6cd5\u662f\u4f7f\u7528 <code>ipairs()</code> \u6216 <code>pairs()</code> \u51fd\u6570\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#ipairs","title":"ipairs","text":"<p><code>ipairs()</code> \u904d\u5386\u8868\uff0c\u5e76\u63d0\u4f9b\u5143\u7d20\u7684\u7d22\u5f15\u548c\u5143\u7d20\u503c\u3002\u8be5\u51fd\u6570\u4ec5\u9002\u7528\u4e8e\u6ca1\u6709\u4efb\u4f55\u952e\u7684\u8868\uff01</p> <pre><code>local exampleTable = {\"apple\", 69, 1337, -3}\nfor i, value in ipairs(exampleTable) do\n    print(i, value)\nend\n</code></pre> \u8f93\u51fa <pre><code>1 apple\n2 69\n3 1337\n4 -3\n</code></pre>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#pairs","title":"pairs","text":"<p><code>pairs()</code> \u904d\u5386\u8868\uff0c\u5e76\u63d0\u4f9b\u5143\u7d20\u7684\u952e\u548c\u5143\u7d20\u503c\u3002\u8be5\u51fd\u6570\u5e94\u8be5\u7528\u4e8e\u5df2\u5b9a\u4e49\u952e\u7684\u8868\uff01</p> <p>\u6ce8\u610f\uff1a \u5177\u6709\u952e\u7684\u8868\u662f\u65e0\u5e8f\u7684\u3002</p> <pre><code>local exampleTable = {[\"a\"]=\"apple\", [532]=69, [\"something\"]=1337, [\"OwO\"]=-3}\nfor key, value in pairs(exampleTable) do\n    print(key, value)\nend\n</code></pre> \u8f93\u51fa <pre><code>something 1337\na apple\n532 69\nOwO -3\n</code></pre>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#_2","title":"\u6570\u7ec4\u957f\u5ea6","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#_3","title":"\u6ca1\u6709\u952e\u7684\u8868","text":"<p>\u5bf9\u4e8e\u6ca1\u6709\u952e\u7684\u8868\uff0c\u53ef\u4ee5\u5728\u8868\u540d\u524d\u9762\u7b80\u5355\u5730\u4f7f\u7528 <code>#</code> \u7b26\u53f7\u6765\u83b7\u53d6\u8868\u5185\u5143\u7d20\u7684\u6570\u91cf\u3002 <pre><code>local exampleTable = {\"apple\", 69, 1337, -3}\nprint(#exampleTable) -- \u7ed3\u679c\uff1a4\n</code></pre></p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#_4","title":"\u6709\u952e\u7684\u8868","text":"<p>\u5bf9\u4e8e\u6709\u952e\u7684\u8868\uff0c\u9700\u8981\u4f7f\u7528\u5faa\u73af\u6765\u8ba1\u7b97\u6761\u76ee\u6570\u4ee5\u83b7\u53d6\u8868\u6761\u76ee\u7684\u6570\u91cf\u3002 <pre><code>local exampleTable = {[\"a\"]=\"apple\", [532]=69, [\"something\"]=1337, [\"OwO\"]=-3}\nlocal counter = 0\nfor _ in pairs(exampleTable) do\n    counter = counter + 1\nend\nprint(counter) -- \u7ed3\u679c\uff1a4\n</code></pre></p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#0-vs-1","title":"0 vs 1 \u57fa\u7840\u7d22\u5f15","text":"<p>0 \u57fa\u7840\u7d22\u5f15\u7684\u96c6\u5408\uff0c\u5c06\u4ece 0 \u5230 \u96c6\u5408\u957f\u5ea6-1 \u7684\u8303\u56f4\u5185\u5faa\u73af\u3002</p> <p>1 \u57fa\u7840\u7d22\u5f15\u7684\u96c6\u5408\uff0c\u5c06\u4ece 1 \u5230 \u96c6\u5408\u957f\u5ea6 \u7684\u8303\u56f4\u5185\u5faa\u73af\u3002</p> <p>\u4ee5\u6492MOD\u5236\u4f5c\u53ef\u80fd\u4f1a\u8ba9\u60a8\u611f\u5230\u56f0\u60d1\uff0c\u56e0\u4e3a\u60a8\u53ef\u80fd\u4f1a\u5728\u540c\u4e00\u4e2a\u4ee3\u7801\u6587\u4ef6\u4e2d\u9047\u5230\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#c","title":"C++\u5bb9\u5668 \u96c6\u5408","text":"<p>\u8fd9\u4e9b\u96c6\u5408\u7c7b\u578b\u662f\u7531\u6e38\u620f\u751f\u6210\u7684\uff0c\u5e76\u4f7f\u7528\u57fa\u4e8e 0 \u7684\u7d22\u5f15\u3002</p> <pre><code>local roomEntities = Game():GetRoom():GetEntities() -- c++\u5bb9\u5668\nfor i = 0, #roomEntities - 1 do\n    local entity = roomEntities:Get(i)\n    print(entity.Type, entity.Variant, entity.SubType)\nend\n</code></pre>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#lua_1","title":"Lua \u8868","text":"<p>\u6ca1\u6709\u952e\u7684 Lua \u8868\u4f7f\u7528\u57fa\u4e8e 1 \u7684\u7d22\u5f15\u3002\u60a8\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u8868\uff0c\u6216\u8005\u5b83\u4eec\u53ef\u4ee5\u7531\u6e38\u620f\u751f\u6210\u3002</p> <p>\u6ce8\u610f\uff1a \u8fd9\u662f\u4e3a\u4e86\u6f14\u793a\u76ee\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f7f\u7528 <code>ipairs()</code> \u66f4\u7b80\u5355\u3002</p> <pre><code>local roomEntities = Isaac.GetRoomEntities() -- table\nfor i = 1, #roomEntities do\n    local entity = roomEntities[i]\n    print(entity.Type, entity.Variant, entity.SubType)\nend\n</code></pre>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#_5","title":"\u968f\u673a\u6027","text":"<p>MOD API\u4e2d\uff0c\u6709\u591a\u79cd\u83b7\u53d6\u968f\u673a\u6570\u7684\u65b9\u6cd5\u3002</p> <p><code>RNG():RandomInt(max)</code> \u5c06\u63d0\u4f9b 0 \u5230 max-1 \u7684\u6570\u5b57\u3002\u53ef\u4ee5\u7ed9RNG\u8bbe\u7f6e\u79cd\u5b50\uff0c\u4ee5\u4f7f\u5176\u5728\u79cd\u5b50\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\u7ed3\u679c\u4e00\u81f4\u3002</p> <p><code>math.random(max)</code> \u5c06\u63d0\u4f9b 1 \u5230 max \u7684\u6570\u5b57\u3002</p> <p><code>Random()</code> \u5c06\u63d0\u4f9b 0 \u5230 2^32-1 \u7684\u6570\u5b57\u3002\u53ef\u4ee5\u4f7f\u7528<code>%</code>\u7b26\u53f7\u8fdb\u884c\u53d6\u6a21\uff0c\u6765\u9650\u5236\u968f\u673a\u6570\u7684\u8303\u56f4\u3002</p> <p>\u6ce8\u610f\uff1a</p> <ul> <li><code>math.random(max)</code> \u5bf9\u4e8e\u4e0d\u540c\u673a\u5668\u7684\u7ed3\u679c\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u5982\u679c\u60a8\u60f3\u505a\u6709\u5173\u4e8e\u7f51\u7edc\u8054\u673a\u76f8\u5173\u5185\u5bb9\uff0c\u5219\u4e0d\u5e94\u4f7f\u7528\u8be5\u51fd\u6570\u3002</li> <li><code>Random()</code> \u4f1a\u8fc7\u4e00\u4e2a\u6e38\u620f\u5185\u7684\u968f\u673a\u6570\uff0c\u56e0\u6b64\u5728\u7f51\u7edc\u8054\u673a\u4e2d\uff0c\u5982\u679c\u56e0\u4e3a\u4e0d\u540c\u73a9\u5bb6\u7684\u672c\u5730\u8bbe\u7f6e\u4e0d\u540c\uff0c\u800c\u8c03\u7528\u4e86\u4e0d\u540c\u6b21\u6570\u7684<code>Random()</code>\uff0c\u5219\u4f1a\u5bfc\u81f4\u6e38\u620f\u4e0d\u540c\u6b65\u3002</li> </ul> <pre><code>local items = { \"item 1\", \"item 2\", \"item 3\" } -- \u8868\n\nlocal rng = RNG()\nrng:SetSeed(Random(), 1)\nprint(items[rng:RandomInt(#items) + 1])\n\nprint(items[math.random(#items)])\n</code></pre>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#_6","title":"\u6570\u5b66\u6280\u5de7","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#_7","title":"\u53d6\u6a21\uff08\u9664\u6cd5\u4f59\u6570\uff09","text":"<p>\u53d6\u6a21\u8fd0\u7b97\u7b26<code>%</code>\u5728\u7f16\u7a0b\u4e2d\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5e2e\u52a9\u4f60\u8282\u7701\u5927\u91cf\u4ee3\u7801\u3002\u5b83\u57fa\u672c\u4e0a\u8fd4\u56de\u901a\u8fc7\u7ed9\u5b9a\u6570\u5b57\u9664\u6cd5\u5f97\u5230\u7684\u4f59\u6570\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#_8","title":"\u7528\u6cd5","text":"<p><pre><code>local remainder = dividend % divisor\n</code></pre> \u7531\u4e8e\u9664\u6cd5\u4f59\u6570\u6c38\u8fdc\u4e0d\u4f1a\u662f\u8d1f\u6570\u6216\u5927\u4e8e\u88ab\u9664\u6570\uff0c\u4f59\u6570\u7684\u503c\u59cb\u7ec8\u5728 0 \u548c \u9664\u6570-1 \u4e4b\u95f4\u3002</p> \u793a\u4f8b <pre><code>-- ...\n-3 % 3 -- = 0\n-2 % 3 -- = 1\n-1 % 3 -- = 2\n0 % 3 -- = 0\n1 % 3 -- = 1\n2 % 3 -- = 2\n3 % 3 -- = 0\n4 % 3 -- = 1\n5 % 3 -- = 2\n-- ...\n\nlocal isOddNumber = 123115 % 2 -- \u7ed3\u679c\u4e3a1\u3002\u5982\u679c\u662f\u5076\u6570\u5219\u4e3a0\u3002\nlocal isDivideableBySeven = 123429292 % 7 -- \u7ed3\u679c\u4e3a0\u3002\u56e0\u6b64\uff0c\u5b83\u53ef\u4ee5\u88ab7\u6574\u9664\u3002\n</code></pre>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#_9","title":"\u5730\u677f\u9664\u6cd5","text":"<p>\u867d\u7136\u5730\u677f\u9664\u6cd5\u5e76\u4e0d\u7279\u522b\u6709\u7528\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u88ab\u4f7f\u7528<code>math.floor</code>\u4ee3\u66ff\uff0c\u4f46\u5b83\u53ef\u4ee5\u5e2e\u52a9\u7b80\u5316\u548c\u7ec4\u7ec7\u4ee3\u7801\u3002\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u5e38\u89c4\u9664\u6cd5\u8fd0\u7b97\u7b26\u7c7b\u4f3c\uff0c\u4f46\u5c06\u7ed3\u679c\u5411\u4e0b\u53d6\u6574\u5230\u6700\u8fd1\u7684\u6574\u6570\u3002</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#_10","title":"\u7528\u6cd5","text":"<p><pre><code>local floorQuotient = dividend // divisor\n</code></pre> \u5b83\u53ef\u4ee5\u4e0e\u6a21\u8fd0\u7b97\u7b26\u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u91cd\u65b0\u521b\u5efa\u88ab\u9664\u6570\uff0c\u5982\u4e0b\u6240\u793a\uff1a <pre><code>local dividend = (floorQuotient * divisor) + remainder\n</code></pre> \u8bf7\u6ce8\u610f\uff0c\u5b83\u603b\u662f\u5411\u7b49\u4e8e\u6216\u5c0f\u4e8e\u9664\u6cd5\u7ed3\u679c\u7684\u6570\u5b57\u56db\u820d\u4e94\u5165\u3002\u8fd9\u610f\u5473\u7740<code>-11//5</code>\u5c06\u8fd4\u56de<code>-3</code>\uff0c\u800c<code>11//5</code>\u5c06\u8fd4\u56de2\u3002\u8fd9\u4f7f\u5f97\u5982\u679c\u4f60\u5728\u4f7f\u7528\u5730\u677f\u5546\u8fd0\u7b97\u7b26\u4e4b\u524d\u6216\u4e4b\u540e\u5c06\u6570\u5b57\u53d8\u4e3a\u8d1f\u6570\uff0c\u53ef\u80fd\u4f1a\u751f\u6210\u4e0d\u540c\u7684\u7ed3\u679c\u3002</p> \u4f8b\u5b50 <pre><code>-- ...\n-11//2 -- = -6\n11//2 -- = 5\n-11//-2 -- = 5\n-- ...\n\nlocal floorRightAngle = 170//90 * 90 -- \u7ed3\u679c\u4e3a90\u3002\nlocal roundRightAngle = (170+45)//90 - 45 -- \u7ed3\u679c\u4e3a180\u3002\n</code></pre>","tags":["\u6559\u7a0b"]},{"location":"tutorials/MathAndLuaTips.html#vs","title":"\u6574\u6570 vs \u6d6e\u70b9\u6570","text":"<p>\u5982\u679c\u53d8\u91cf\u662f\u4e00\u4e2a\u6570\u5b57\uff0c<code>type(x)</code> \u4f1a\u8fd4\u56de \"number\"\uff0c\u4f46\u5b83\u4e0d\u4f1a\u544a\u8bc9\u4f60\u5b83\u662f\u6574\u6570\u8fd8\u662f\u6d6e\u70b9\u6570\u3002</p> <p><code>math.type(x)</code> \u4f1a\u8fd4\u56de \"integer\" \u6216 \"float\"\uff0c\u5982\u679c\u5b83\u4e0d\u662f\u6570\u5b57\u5219\u8fd4\u56denil\u3002</p> <pre><code>local i = 1\nlocal f = 1.0\nprint(type(i)) -- number\nprint(type(f)) -- number\nprint(math.type(i)) -- integer\nprint(math.type(f)) -- float\n</code></pre>","tags":["\u6559\u7a0b"]},{"location":"tutorials/Standard-Library.html","title":"[Tutorial] Importing Lua Modules from the Standard Library","text":"<p>Lua provides a standard library. However, since Isaac is a sandboxed environment, not everything is available for use:</p> Always Available Only available with <code>--luadebug</code> json (with <code>require(\"json\")</code>) socket (with <code>require(\"socket\")</code>) assert debug collectgarbage dofile coroutine io error loadfile getmetatable os ipairs package load require (unmodified) math next pairs pcall print rawequal rawget rawlen rawset require (\"safe\" version) select setmetatable string table tonumber tostring type utf8 xpcall","tags":["Tutorial"]},{"location":"tutorials/Standard-Library.html#-luadebug","title":"--luadebug","text":"<p>Normally, mods are restricted from doing anything harmful, like reading files from the file system or communicating over the network. Setting the <code>--luadebug</code> launch flag lifts these restrictions, allowing Lua code to use the <code>require</code> function to import arbitrary files and to use the \"socket.lua\" library.</p> <p>You should never enable --luadebug unless you have a very specific reason and you know what you are doing, as it could lead to your entire computer being compromised.</p>","tags":["Tutorial"]},{"location":"tutorials/Standard-Library.html#enabling","title":"Enabling","text":"<p>To enable it, perform the following steps:</p> <ul> <li>Open Steam.</li> <li>Click on the \"Library\" tab near the top of the screen.</li> <li>Right-click on \"The Binding of Isaac: Rebirth\" and select \"Properties\".</li> <li>Click on the \"General\" tab on the left.</li> <li>At the bottom of the screen, there will be a box to specify \"Launch Options\".</li> <li>Enter <code>--luadebug</code> inside the text field.</li> </ul>","tags":["Tutorial"]},{"location":"tutorials/Standard-Library.html#functionality","title":"Functionality","text":"<p>The flag enables all of the packages and functions on the previous standard library table. Additionally, it causes the game to use an unmodified version of the <code>require</code> function that allows importing DLLs any any other arbitrary file.</p>","tags":["Tutorial"]},{"location":"tutorials/Standard-Library.html#networking","title":"Networking","text":"<p>Networking in Lua is accomplished via the <code>socket</code> library, which is provided with the game as a convenience and is located at: <code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\resources\\scripts\\socket.lua</code></p> <p>As per the above table, the <code>--luadebug</code> launch option must be enabled in order for the socket library to be correctly imported.</p>","tags":["Tutorial"]},{"location":"tutorials/Standard-Library.html#mainlua","title":"main.lua","text":"<p>The game uses a \"main.lua\" file that is loaded before any other mods, located at: <code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\resources\\scripts\\main.lua</code></p> <p>Note that this file will always be executed, even if mods are set to be completely disabled. This allows the execution of Lua code even in scenarios it is normally not possible, like in Daily Challenges.</p>","tags":["Tutorial"]},{"location":"tutorials/Tool_AnimationEditor.html","title":"[Tutorial] Official Animation Editor","text":"<p>The official Animation Editor tool can be found in the \"Tools\" folder inside your game files.</p> <p>It can be used to edit the \".anm2\" file of the game or create new ones.</p>","tags":["Tools","Tutorial"]},{"location":"tutorials/Tool_AnimationEditor.html#ui","title":"UI","text":"Bug <p>If you cant see all the panels displayed in this screenshot, you might have a monitor resolution that is not compatible with this tool. This causes some of the panels to clip outside of the visible boundary of the window, making them not useable.</p> <p>To fix this issue, please download this Layout.dat file, and replace it with the one in your animation editor tool folder. This will fix the layout issue and makes the tool useable again.</p>","tags":["Tools","Tutorial"]},{"location":"tutorials/Tool_AnimationEditor.html#how-to-use","title":"How to Use","text":"<p>To get a quick overview of how this tool works, its recommended to watch one of these Youtube tutorials:</p> <p>By OnyxDarkKnight: https://www.youtube.com/watch?v=oIm8hhXgYlg</p> <p>By AgentCucco: https://www.youtube.com/watch?v=lrhxZ78l5GI</p>","tags":["Tools","Tutorial"]},{"location":"tutorials/Tool_ItemPoolEditor.html","title":"[Tutorial] Official ItemPool Editor","text":"<p>The official Itempool Editor tool can be found in the \"Tools\" folder inside your game files.</p> <p>It can be used to edit the \"itempools.xml\" file of the game or create new ones.</p> Repentance Support <p>As of right now, the itempool editor delivered with the game is out-of-Date. It only contains the items till AB+ boosterpack 4. Therefore, its missing all the Repentance items, Itempools and ~25 AB+ items.</p>","tags":["Tools","Tutorial"]},{"location":"tutorials/Tool_ItemPoolEditor.html#how-to-fix","title":"How to Fix","text":"<p>To Fix this issue, you can replace the \"Config.ini\" file of the Tool with the \"Config.ini\" file provided here: Fixed Config.ini file for Repentance</p>","tags":["Tools","Tutorial"]},{"location":"tutorials/Tool_ItemPoolEditor.html#ui","title":"UI","text":"<ol> <li> <p>List of Items: The item list contains all items of the game. If a name is written in bold letters, it means that this item is in the current itempool. Double click on an entry to add it to the currently selected itempool.</p> </li> <li> <p>Itempool Dropdown: A dropdown menu to choose from all available itempools you can edit.</p> </li> <li> <p>Pool Content Table: Lists all items that are in the selected itempool. Slow double click to edit the Weight, Decreased By and Remove On attributes.</p> </li> <li> <p>Buttons: Use the Remove button to remove the selected item from the Itempool content table. Use the Save button to save the changes. Use the Load* button to load an \"itempools.xml\" file</p> </li> <li> <p>Status bar: Shows you informations about the selected item. This includes the chance of it being chosen from the pool and how often it can be drawn from the itempool.</p> </li> </ol>","tags":["Tools","Tutorial"]},{"location":"tutorials/Tool_XMLValidator.html","title":"[Tool] XML File Validator","text":"","tags":["Tools"]},{"location":"tutorials/Tools.html","title":"Modding Tools","text":"","tags":["Tools"]},{"location":"tutorials/Tools.html#general","title":"General","text":"<ul> <li>Basement Renovator : Powerful and intuitive Level and Room Editor</li> <li>Backdrop Previewer : Tool to preview Room-Backdrops</li> <li>Log Viewer : Tool to display a live - view the Logfile</li> <li>Rebirth Item Tracker : External tool that displays Item-informations about your current run</li> <li>AB+ Mod Merger : A Python script to merge AB+ Mods. This can improve performance.</li> <li>Anm2 Scaling Helper : Scales .anm2 files with a specific factor. Useful to create HD sprites. (Source)</li> <li>Drawstic Online : Online tool to edit BoI sprites quickly</li> <li>Color Usage Visualizer : Interactive 3D tool to display color usage frequencies in Isaac Sprites</li> <li>Config &amp; Mod Management Tool : UI to edit the game config and enable/ disable mods or modpacks</li> <li>PC -&gt; Console Mod Converter: Converts Rebirth and Afterbirth mods to be useable on consoles. DOES NOT WORK FOR AFTERBIRTH+ MODS!</li> <li>Text Sprite Generator: Automatically generates Character- and VS Screen text sprites</li> <li>Character Sheet Generator: Tool that automatically generates teleport and Missing No. Sprites for your character's spritesheet</li> <li>Repentance Run Tracker: Tool that shows and records extensive informations about your runs.</li> <li>EzItems: Tool to automatically write a mod that is able to rename items and trinkets. Both their name and description are supported.</li> <li>Skin Color Variant Generator: Tool to automatically generate skin color variants of costume sprites</li> </ul>","tags":["Tools"]},{"location":"tutorials/Tools.html#coding-tools","title":"Coding Tools","text":"<ul> <li>Visual Studio Code : Free Coding environment<ul> <li>Plug-In:  \"Lua\"  Provides a lot of QoL features, syntax Check, Reference checks, IntelliSense, Auto complete, ...</li> <li>Plug-In:  Binding of Isaac Lua API Auto-complete for Isaac API Enums, functions and features</li> </ul> </li> <li>Notepad++ : Free Coding environment</li> <li>ZeroBrane Studio : Free Coding environment<ul> <li>Plug-In: Afterbirth-API-for-ZeroBrane (outdated) Autocomplete for Isaac API functions and enums</li> </ul> </li> <li>IsaacScript : Coding mods easily using Typescript</li> </ul>","tags":["Tools"]},{"location":"tutorials/Tools.html#afterbirth","title":"Afterbirth +","text":"<ul> <li>Savegame Editor : Savegame Editor for AB+</li> </ul>","tags":["Tools"]},{"location":"tutorials/Tools.html#afterbirth_1","title":"Afterbirth","text":"<ul> <li>Missing Hud 2 Overlay : Displays Stats of the character on the left side of the screen</li> <li>Rick's Unpacker : Tool to extract the Game files</li> <li>Savegame Editor : Savegame Editor for Afterbirth</li> <li>Basement Renovator : Level / Room Editor</li> <li>simple mod loader : Tool to install and manage Mods</li> <li>Challenge Creator : Tool to create custom challenges</li> <li>Custom Challenge Launcher : Creates Custom gameplay scenarios</li> <li>Itempool Editor+ : Itempool editor with graphics based UI</li> <li>Itempool Editor (alternative) : Itempool editor with text based UI</li> </ul>","tags":["Tools"]},{"location":"tutorials/Tools.html#rebirth","title":"Rebirth","text":"<ul> <li>Missing Hud 2 Overlay : Displays Stats of the character on the left side of the screen</li> <li>Rick's Unpacker : Tool to extract the Game files</li> <li>Basement Renovator : Level / Room Editor</li> <li>simple mod loader : Tool to install and manage Mods</li> <li>Itempool Editor+ : Itempool editor with graphics based UI</li> </ul>","tags":["Tools"]},{"location":"tutorials/Tools.html#binding-of-isaac-flash-version","title":"Binding of Isaac (Flash Version)","text":"","tags":["Tools"]},{"location":"tutorials/Tools.html#spider-mod","title":"Spider Mod","text":"<p>Download Link: Spider Mod v09.1 for WotL 1.48</p> <p>Extended version of the default game with extra features, bugfixes and modding support. Its a standalone application and does work without having the main game installed.</p> <p>This does not contain or work with the Eternal Update!</p>","tags":["Tools"]},{"location":"tutorials/Tools.html#install-instructions-not-verified-propably-needs-work","title":"Install instructions (not verified / propably needs work)","text":"<ol> <li>Download and unpack the zip file in any folder and directory you want.</li> <li>You may need to install Adobe Flash Player, for it to work. This can be a bit complicated because Flash Player is no longer access and downloadable because Flash is no longer supported.</li> <li>You may also need to set your Windows system time back to 2018, since Flash player is no longer supposed to work on newer systems</li> <li>Start the \"Binding of Isaac WOTL SpiderMod.exe\" file to play the mod</li> </ol> <p>If the window doesn't display anything or you have some \"Class not registered\" error, download Adobe Flash Player for Internet Explorer. Link [!PUT LINK HERE!]</p>","tags":["Tools"]},{"location":"tutorials/Tools.html#community-remix-mod","title":"Community Remix mod","text":"<p>Download Link: Community Remix mod</p> <p>A mod that adds a lot of new content to the game. Requires Spider Mod to work!</p>","tags":["Tools"]},{"location":"tutorials/Tools.html#installation-instructions","title":"Installation instructions","text":"<ol> <li>Download and unpack Spider Mod</li> <li>Download Community Remix mod</li> <li>Replace <code>.../Spidermod/Data/IsaacSpiderMod.isc</code> with the downloaded Community Remix mod file or the same name</li> <li>Start Spider mod</li> </ol>","tags":["Tools"]},{"location":"tutorials/Tools.html#misc","title":"Misc","text":"<ul> <li>Run Tracker : Provides informations about your Runs and your savegames</li> </ul>","tags":["Tools"]},{"location":"tutorials/Tutorial-Rendertext.html","title":"[Tutorial] Render text ingame","text":"","tags":["Tutorial"]},{"location":"tutorials/Tutorial-Rendertext.html#fonts-used-by-the-game","title":"Fonts used by the game","text":"<p>The Following fonts are used by the game and can be used with the <code>Font()</code> class:</p> Font Name Ingame Name/s Ingame Example Ingame Usage Link to font Droid Sans droid Example Droid (Not used ingame) Droid Sans PF Tempesta Seven (Condensed) pftempestasevencondensed Example PF Tempesta Seven HUD Elements like coin/key counters PF Tempesta Seven Team Meat Font teammeatfont10teammeatfont12teammeatfont16teammeatfont16bold Example teammeatfont10Example teammeatfont12Example teammeatfont16Example teammeatfont16bold Main Menu ElementsPop-UpsTimer / Score Elements Team Meat Font without Bold Terminus terminusterminus8 Example TerminusExample Terminus8 Debug Console / Isaac.RenderText() Terminus Upheaval upheaval Example Upheaval Streak text Upheaval mplus (Japanese) mplus_10rmplus_12b Example mplus_10rExample mplus_12b Replacement for all fonts aboth for Japanese translation.10r is pf \"Tempesta seven\" / \"Team Meat\" replacement12b is \"Upheaval\" replacement PixelMplus (M+ Fonts) kr Font (Korean) kr_font12kr_font14 Example kr_font12Example kr_font14 TBD No source found right now Team Meat Font (Korean) kr_meatfont14 Example kr_meatfont14 TBD - Not available -","tags":["Tutorial"]},{"location":"tutorials/Tutorial-Rendertext.html#basics-of-rendering-a-text","title":"Basics of rendering a text","text":"<p>First we need to have a look at the basic process of writing on the screen. here is a sample code:</p> <pre><code>local testmod= RegisterMod( \"testmod\" ,1 );\n\nlocal function onRender(t)\n    Isaac.RenderText(\"Sample text\", 50, 30, 1, 1, 1, 255)\nend\n\ntestmod:AddCallback(ModCallbacks.MC_POST_RENDER, onRender)\n</code></pre> <p>Result: </p> <p>The game uses the font-file \"terminus.fnt\" in order to render and display this text. this cant be changed. Luckily for us, this file contains \"sprites\" for all normal ASCII characters that exist out there (256 to be precise).</p>","tags":["Tutorial"]},{"location":"tutorials/Tutorial-Rendertext.html#rendering-text-with-a-different-font","title":"Rendering text with a different font","text":"<p>We can render any kind of text with a different font as well. This can be done by using the \"Font()\" class and its functions.</p>","tags":["Tutorial"]},{"location":"tutorials/Tutorial-Rendertext.html#example-code","title":"Example code:","text":"<pre><code>local f = Font() -- init font object\nf:Load(\"font/droid.fnt\") -- load a font into the font object\nf:DrawString(\"droid\",60,50,KColor(1,1,1,1,0,0,0),0,true) -- render string with loaded font on position 60x50y\n</code></pre>","tags":["Tutorial"]},{"location":"tutorials/Tutorial-Rendertext.html#all-possible-fonts-that-can-be-drawn","title":"All possible Fonts that can be drawn:","text":"","tags":["Tutorial"]},{"location":"tutorials/Tutorial-Rendertext.html#render-special-characters","title":"Render Special Characters","text":"<p>The game allows us to write anything into the \"displayed text\" argument that is part of the ASCII standard for characters. For characters a-z, 0-9 and ,.#+;:_'*~\u00b0 this works without any problems and without using any kind of \"hack\". Now if we just strait up try to type in ' \u00e4 ' or ' \u00df ' to let it render as text, it will not look as intended.  In order to fix this problem we have to use the \"raw\" version of said characters. Example:</p> <p><code>\\197</code></p> <p>prints:</p> <p><code>\u00c4</code></p> <p>So in order to print special characters, just replace them in the code like this:</p> <pre><code>Isaac.RenderText(\"S\\228mple text\", 50, 30, 1, 1, 1, 255)\n</code></pre> <p>prints:</p> <p><code>S\u00e4mple text</code></p>","tags":["Tutorial"]},{"location":"tutorials/Tutorial-Rendertext.html#list-of-all-supported-characters-and-their-counterpart","title":"List of all supported characters and their counterpart","text":"","tags":["Tutorial"]},{"location":"tutorials/Tutorial-Rendertext.html#creating-fnt-files","title":"Creating .fnt files","text":"<p>The Developer __Kilburn_ mentioned that fonts can be created using this Tool: https://www.angelcode.com/products/bmfont.</p> <p>The best results can be made by converting Bitmap fonts, since they allow for smaller fontsizes.</p> <p></p> <p>Font Settings:</p> <ul> <li>Font - choose a font thats very readable in small sizes (~8-10px height)</li> <li>Charset - Unicode</li> <li>Size - the general size of the characters in pixels. normal values are between 10 and 16</li> <li>Height - can be used to squish/strech the</li> <li>Match char height - the charactersize will be choosen based on the character, and not the size defined in Size</li> <li>Bold / Italic - What font styling should be used</li> <li>Output invalid char glyph - Characters that dont have a sprite will be put on the spritesheet, too. This can create holes in the spritesheet</li> <li> <p>Do not include kerning pairs -  <li> <p>Rasterization - used to smooth the font sprites. Not recommended for Isaac since we want pixel-perfect fonts!</p> </li> <li> <p>Outline thickness - Define if an outline should be drawn around the character. In Isaac, this is always ~1px</p> </li> <p></p> <p>Export Options:</p> <ul> <li>Padding - Padding around each character, in pixels</li> <li>Spacing - Space between characters, in pixels</li> <li> <p>Equalize the cell heights - will align all characters in a way, so they take up the least space vertically. off = they group in more uniform rows</p> </li> <li> <p>Width / Height - Width and Height of each character spritesheet. If spritesheet isnt big enough, multiple files will be created</p> </li> <li>Bit depth - how many Bits should be used per color. ALWAYS choose 32 bit!</li> <li> <p>Pack chars in multiple Channels - Dont use this. We need all channels for out font because of transparencies!</p> </li> <li> <p>File format - Choose Binary to create \".fnt\" files</p> </li> <li>Textures - always set it to \"png\"</li> <li>Compression - (only one option available)</li> </ul>","tags":["Tutorial"]},{"location":"tutorials/Using-Additional-Lua-Files.html","title":"[Tutorial] Using Additional .lua Files","text":"<p>If you want to load an additional .lua file besides your main.lua file, you can use either the <code>require</code> or <code>include</code> functions. Both have different purposes.</p>","tags":["Tutorial"]},{"location":"tutorials/Using-Additional-Lua-Files.html#require","title":"<code>require</code>","text":"<p><code>require</code> is a built-in Lua function. Using <code>require</code> is the conventional way in Lua programs to split code up into multiple files. For example:</p>","tags":["Tutorial"]},{"location":"tutorials/Using-Additional-Lua-Files.html#mainlua","title":"<code>main.lua</code>","text":"<pre><code>local foo = require(\"foo\") -- Loads the \"foo.lua\" file and saves its return value into the variable \"foo\".\n\nfoo:bar() -- Calls the function \"bar()\" of the foo table.\n</code></pre>","tags":["Tutorial"]},{"location":"tutorials/Using-Additional-Lua-Files.html#foolua","title":"<code>foo.lua</code>","text":"<pre><code>local foo = {} -- Creates a table that represents this module and will be returned later.\n\nfunction foo:bar() -- Defines the function \"bar()\" and adds it to the \"foo\" table.\n  print(\"hello\")\nend\n\nreturn foo -- Returns the \"foo\" table so that it can be accessed by anything that imports this file .\n</code></pre> <p>Here, \"foo\" is a Lua module that provides variables and methods. It's also possible to return functions or primitive values, but conventionally Lua modules always return a table.</p> <p>One important aspect of <code>require</code> is that when it is used, it caches the result. Thus, when a file is required in two different places in the code, it will execute all the code normally on the first require, and then return a reference to the module on the second require. (This default behavior makes sense, because there is no need to execute the same code over and over.)</p>","tags":["Tutorial"]},{"location":"tutorials/Using-Additional-Lua-Files.html#require-with-directories","title":"<code>require</code> With Directories","text":"<p>Unlike other programming languages, it is conventional in Lua to use a period as a path separator. For example, if you wanted to import a file called <code>bar.lua</code> in a subdirectory called <code>foo</code>, you would use the following <code>require</code> statement:</p> <pre><code>local bar = require(\"foo.bar\") -- Loads a file from the path: ./foo/bar.lua\n</code></pre>","tags":["Tutorial"]},{"location":"tutorials/Using-Additional-Lua-Files.html#the-namespacing-problem-with-require","title":"The Namespacing Problem With <code>require</code>","text":"<p>Unlike import statements in other programming languages, the <code>require</code> function does not use relative paths. Instead, it is based on the exact string passed into to the function. (And every mod directory is added to list of directories to look through.)</p> <p>This causes a problem for mods that have an overlap in the <code>require</code> string. For example, imagine that there are two mods, mod 1 and mod 2. Both mods have a file called \"foo.lua\" and both mods use a require statement of <code>local foo = require(\"foo\")</code>. Mod 1 will work normally, but when mod 2 loads, its require statement will actually return the \"foo.lua\" file from mod 1.</p> <p>In order to work around this problem, mods have conventionally put all of their Lua files in a directory that matches the name of their mod. For example, mod 1 would make a directory called <code>mod1</code> and have an import statement like: <code>local foo = require(\"mod1.foo\")</code></p> <p>This way, there would never be a conflict as long as there are no other mods called \"mod1\".</p>","tags":["Tutorial"]},{"location":"tutorials/Using-Additional-Lua-Files.html#the-luamod-problem-with-require","title":"The <code>luamod</code> Problem With <code>require</code>","text":"<p><code>luamod</code> is a console command that will reload a mod. This is helpful when you are developing a mod and you want to immediately test your changes without having to go back to the menu.</p> <p>Unfortunately, require caching causes the <code>luamod</code> console command to not work correctly. If code inside of a module is updated, it will not be reflected in game after using the <code>luamod</code> command because the reference to the module is already cached.</p>","tags":["Tutorial"]},{"location":"tutorials/Using-Additional-Lua-Files.html#include","title":"<code>include</code>","text":"<p>In order to get around the namespacing problem and the <code>luamod</code> problem, Kilburn added an Isaac-specific API function called <code>include</code> in Repentance patch v1.06.J818. <code>include</code> works in a mostly identical way to <code>require</code>, except it will never cache the result, causing the code to execute every time. (It will also never get files from other people's mods, even if the paths are identical.)</p>","tags":["Tutorial"]},{"location":"tutorials/Using-Additional-Lua-Files.html#sharing-variables","title":"Sharing Variables","text":"<p><code>include</code> is only designed for pure modules that have no side effects. In other words, if you use <code>include</code> on a module with module-level state variables, they will be instantiated N times, once for each <code>include</code>. Obviously, this is really bad, because internal state between files will become desynchronized.</p> <p>Thus, if you have module-level state or need to share variables between files, you cannot use <code>include</code> and must use <code>require</code>.</p>","tags":["Tutorial"]},{"location":"tutorials/Using-Additional-Lua-Files.html#workaround-for-require-problems","title":"Workaround for Require Problems","text":"<p>If you need to use <code>require</code> instead of <code>include</code>, it's recommended to put all of your Lua code inside of a namespaced directory, as mentioned earlier. If you also want to have <code>luamod</code> functionality, you can enable the <code>--luadebug</code> launch flag and then hack the <code>require</code> function with something along the lines of:</p> <pre><code>--[[ main.lua ]]--\n\nlocal MOD_NAME = \"MyMod\" -- Cannot have spaces, since it represents a path.\n\n-- Players can boot the game with an launch option called \"--luadebug\", which will enable additional\n-- functionality that is considered to be unsafe. For more information about this flag, see the\n-- wiki: https://bindingofisaacrebirth.fandom.com/wiki/Launch_Options\n--\n-- When this flag is enabled, the global environment will be slightly different. The differences are\n-- documented here: https://wofsauge.github.io/IsaacDocs/rep/Globals.html\n--\n-- This function uses the `package` global variable as a proxy to determine if the \"--luadebug\" flag\n-- is enabled or not.\nlocal function isLuaDebugEnabled()\n  return package ~= nil\nend\n\n-- The require hack uses a global variable to store the paths that are cached for this particular\n-- mod. This cannot be a local variable because the state of any local variables is lost when the\n-- \"luamod\" command is executed. Rename the variable to correspond with the name of your mod.\nlocal function initGlobalVariable()\n  if __MY_MOD_REQUIRED_PATHS == nil then\n    __MY_MOD_REQUIRED_PATHS = {} -- This must be a global variable\n  end\nend\n\n-- Reference the global variable to reset the caching status for every path used in the mod.\nlocal function unloadEverything()\n  for k, v in pairs(__MY_MOD_REQUIRED_PATHS) do\n    package.loaded[k] = nil\n  end\nend\n\n-- Back up the vanilla require function so that we can restore it later.\nlocal vanillaRequire = require\n\n-- Define a custom require function that will keep track of which paths are required.\nlocal function patchedRequire(file)\n  __MY_MOD_REQUIRED_PATHS[file] = true\n  return vanillaRequire(file)\nend\n\nlocal function init()\n  if isLuaDebugEnabled() then\n    initGlobalVariable()\n    unloadEverything()\n    require = patchedRequire\n  end\n\n  -- We put all mod-related code in a separate file in order to keep the hack code separated.\n  local modInit = require(MOD_NAME .. \".init\")\n  modInit:init()\n\n  if isLuaDebugEnabled() then\n    -- Restore the vanilla functionality.\n    require = vanillaRequire\n  end\nend\n\ninit()\n</code></pre>","tags":["Tutorial"]},{"location":"tutorials/Using-Additional-Lua-Files.html#alternate-workaround-for-require-problems","title":"Alternate Workaround for Require Problems","text":"<p>It's also worth noting that the <code>require</code> problems discussed above are non-problems if you are writing your mod with TypeScript using the IsaacScript framework. This is because the transpiler automatically combines all of your code into a single \"main.lua\" file. This means that you don't have to bother juggling between using <code>include</code> and <code>require</code>, worrying about state, or monkey patching the <code>require</code> function - you can simply write code that works.</p>","tags":["Tutorial"]},{"location":"tutorials/Writingscreenshaders.html","title":"[\u6559\u7a0b] \u7f16\u5199\u5c4f\u5e55\u7740\u8272\u5668","text":"","tags":["\u6559\u7a0b"]},{"location":"tutorials/Writingscreenshaders.html#example-shaders","title":"Example Shaders:","text":"<ul> <li>Tilt Shift Shader by im_tem: https://steamcommunity.com/sharedfiles/filedetails/?id=2524003926</li> <li>Vortex Street background shader by Wofsauge Preview Video - Code - Original shader source</li> </ul>","tags":["\u6559\u7a0b"]},{"location":"tutorials/Writingscreenshaders.html#create-your-own-shader","title":"Create your own shader:","text":"<p>Reload shaders of mods via console command: <code>reloadshaders</code></p> <p>In order to write your screen shader you need to create 'shaders.xml' in the 'content' folder that is part of your Mod folder.</p> <p>shaders.xml should have the following structure:</p> <pre><code>&lt;shaders&gt;\n&lt;shader name=\"SHADER_NAME\"&gt;\n&lt;parameters&gt;\n&lt;param name=\"PARAMETER_NAME\" type=\"PARAMETER_TYPE\"/&gt;\n...\n        &lt;/parameters&gt;\n&lt;vertex&gt;&lt;![CDATA[\n            VERTEX_SHADER\n        ]]&gt;&lt;/vertex&gt;\n&lt;fragment&gt;&lt;![CDATA[\n            FRAGMENT_SHADER\n        ]]&gt;&lt;/fragment&gt;\n&lt;/shader&gt;\n&lt;shader name=\"...\"&gt;\n...\n    &lt;/shader&gt;\n&lt;/shaders&gt;\n</code></pre> <p>where:</p> <ul> <li><code>SHADER_NAME</code> is the shader name</li> <li><code>PARAMETER_NAME</code> is the name of each custom parameter you want to pass from Lua</li> <li><code>PARAMETER_TYPE</code> is one of the following: <code>float</code>, <code>vec2</code>, <code>vec3</code>, <code>vec4</code></li> <li><code>VERTEX_SHADER</code> is your vertex shader which should always include these attributes:</li> </ul> <pre><code>attribute vec3 Position;\nattribute vec4 Color;\nattribute vec2 TexCoord;\nattribute vec4 RenderData;\nattribute float Scale;\n...your attributes...\nuniform mat4 Transform;\n...\n</code></pre> <ul> <li><code>FRAGMENT_SHADER</code> is your fragment shader which again should contain at least these:</li> </ul> <pre><code>varying lowp vec4 Color0;\nvarying mediump vec2 TexCoord0;\nvarying lowp vec4 RenderDataOut;\nvarying lowp float ScaleOut;\nuniform sampler2D Texture0;\n</code></pre> <p><code>RenderData.xy</code> contains the window size, while <code>RenderData.zw</code> is the texture size.</p> <p><code>Scale</code> contains Isaac's room scale based on the window size. You can see the scale in action when you resize the window and the game keeps its content fixed for a certain amount of pixels then snaps to another zoom level.</p> <p>Because of engine limitation we can only pass data through the vertex shader.</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/Writingscreenshaders.html#shader-example-code","title":"Shader Example Code:","text":"<p>An example of a shader with custom parameters that changes the color tint of the screen based on the player position and the ingame framecounter.</p> <p>Code: \u2192 Download this example mod here \u2190</p> Result of this shader. <pre><code>&lt;shaders&gt;\n&lt;shader name=\"RandomColors\"&gt;\n&lt;parameters&gt;\n&lt;param name=\"PlayerPos\" type=\"vec2\"/&gt;\n&lt;param name=\"Time\" type=\"float\"/&gt;\n&lt;/parameters&gt;\n&lt;vertex&gt;&lt;![CDATA[\n            attribute vec3 Position;\n            attribute vec4 Color;\n            attribute vec2 TexCoord;\n            attribute vec4 RenderData;\n            attribute float Scale;\n            attribute vec2 PlayerPos;\n            attribute float Time;\n            varying vec4 Color0;\n            varying vec2 TexCoord0;\n            varying vec4 RenderDataOut;\n            varying float ScaleOut;\n            varying vec2 PlayerPosOut;\n            varying float TimeOut;\n            uniform mat4 Transform;\n            void main(void)\n            {\n                RenderDataOut = RenderData;\n                ScaleOut = Scale;           // Passing data to fragment shader\n                PlayerPosOut = PlayerPos;   // Passing data to fragment shader\n                TimeOut = Time;             // Passing data to fragment shader\n                Color0 = Color;\n                TexCoord0 = TexCoord;\n                gl_Position = Transform * vec4(Position.xyz, 1.0);\n            }\n        ]]&gt;&lt;/vertex&gt;\n&lt;fragment&gt;&lt;![CDATA[\n            varying lowp vec4 Color0;\n            varying mediump vec2 TexCoord0;\n            varying lowp vec4 RenderDataOut;\n            varying lowp float ScaleOut;\n            varying mediump vec2 PlayerPosOut;\n            varying lowp float TimeOut;\n            uniform sampler2D Texture0;\n            void main(void)\n            {\n                vec4 Color = Color0 * texture2D(Texture0, TexCoord0);\n                Color.r *= PlayerPosOut.x * 0.5f;\n                Color.g *= PlayerPosOut.y * 0.5f;\n                Color.b *= sin(TimeOut * 0.1f);\n                gl_FragColor = Color;\n            }\n        ]]&gt;&lt;/fragment&gt;\n&lt;/shader&gt;\n&lt;/shaders&gt;\n</code></pre> <p>To pass the parameters we use the following Lua code: <pre><code>local mod = RegisterMod(\"ShaderMod\", 1)\nfunction mod:GetShaderParams(shaderName)\n    if shaderName == 'RandomColors' then\n        local playerPos = Isaac.GetPlayer().Position\n        local params = {\n            PlayerPos = {   playerPos.X / 100.0,\n                            playerPos.Y / 100.0 },\n                            Time = Isaac.GetFrameCount()\n            }\n        return params;\n    end\nend\nmod:AddCallback(ModCallbacks.MC_GET_SHADER_PARAMS, mod.GetShaderParams)\n</code></pre></p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/ZeroBraneStudio.html","title":"[\u6559\u7a0b] \u4f7f\u7528ZeroBrane Studio\u8fdb\u884c\u8c03\u8bd5","text":"<p>\u8c03\u8bd5\u5668\u662f\u4e00\u79cd\u975e\u5e38\u6709\u4ef7\u503c\u7684\u5de5\u5177\uff0c\u5f53\u4f60\u4e0d\u77e5\u9053\u4f60\u7684\u7a0b\u5e8f\u5728\u505a\u4ec0\u4e48\u65f6\uff0c\u53ef\u4ee5\u7528\u5b83\u6765\u8bca\u65ad\u4ee3\u7801\u95ee\u9898\uff01\u4f60\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u8c03\u8bd5\u6253\u5370\u8bed\u53e5\u6765\u5b8c\u6210\uff0c\u4f46\u6709\u4e9b\u95ee\u9898\u4f7f\u7528\u8c03\u8bd5\u5668\u4f1a\u66f4\u5bb9\u6613\u8ddf\u8e2a\u3002</p> <ol> <li>\u4e0b\u8f7d\u5e76\u5b89\u88c5\u9002\u7528\u4e8e\u60a8\u5e73\u53f0\u7684ZeroBrane Studio\u3002</li> <li>\u5728Steam\u4e0a\u4e3a\u4ee5\u6492\u6dfb\u52a0 <code>--luadebug</code> \u5230\u542f\u52a8\u9009\u9879\u3002\u5c5e\u6027 &gt; \u901a\u7528 &gt; \u542f\u52a8\u9009\u9879\u3002\u6ca1\u6709\u8fd9\u4e2a\u547d\u4ee4\u884c\u9009\u9879\uff0c\u8c03\u8bd5\u5668\u5c06\u65e0\u6cd5\u4f7f\u7528\u3002</li> <li>\u5728ZeroBrane\u4e2d\uff0c\u6253\u5f00\u60a8\u7684Lua\u6587\u4ef6\u3002\u8fdb\u5165\u9879\u76ee\u83dc\u5355 &gt; \u9879\u76ee\u76ee\u5f55 &gt; \u4ece\u5f53\u524d\u6587\u4ef6\u8bbe\u7f6e\u3002\u9879\u76ee &gt; \u542f\u52a8\u8c03\u8bd5\u5668\u670d\u52a1\u5668\u3002\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e2a\u5f39\u51fa\u7a97\u53e3\u8be2\u95ee\u662f\u5426\u5141\u8bb8ZeroBrane\u8bbf\u95ee\u7f51\u7edc\u3002</li> <li>\u5728main.lua\u6587\u4ef6\u9876\u90e8\u6dfb\u52a0\u6b64\u884c\uff1a <code>StartDebug()</code></li> <li>\u542f\u52a8\u6e38\u620f\u3002\u5f53\u8c03\u8bd5\u5668\u89e6\u53d1\u81ea\u52a8\u65ad\u70b9\u65f6\uff0c\u6e38\u620f\u4f1a\u51bb\u7ed3\u3002</li> </ol> <p>\u73b0\u5728\u60a8\u53ef\u4ee5\u70b9\u51fb\u7eff\u8272\u7bad\u5934\u6309\u94ae\u7ee7\u7eed\u6267\u884c\u3002\u5982\u679c\u9700\u8981ZeroBrane\u7684\u8c03\u8bd5\u529f\u80fd\uff0c\u8bf7\u53c2\u9605\u5176\u6587\u6863\u3002</p> <p>\u5982\u679c\u4e0d\u9700\u8981\u8bbf\u95ee\u8c03\u8bd5\u529f\u80fd\u7684\u8bdd\uff0c\u5f3a\u70c8\u5efa\u8bae\u5728\u5b8c\u6210\u8c03\u8bd5\u540e\u7981\u7528 <code>--luadebug</code>\uff01</p>","tags":["\u6559\u7a0b"]},{"location":"tutorials/directories-and-save-files.html","title":"[Tutorial] Directories &amp; Save Files Explanation (Repentance)","text":"<p>This guide assumes you are on  Windows.</p>","tags":["Tutorial"]},{"location":"tutorials/directories-and-save-files.html#1-the-game-directory","title":"1 - The Game Directory","text":"<p>By default, the game directly is located at:</p> <p><pre><code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\n</code></pre> This contains the game executable, \"isaac-ng.exe\", as well as some other miscellaneous files.</p> <p></p>","tags":["Tutorial"]},{"location":"tutorials/directories-and-save-files.html#2-the-resources-directory","title":"2 - The \"resources\" Directory","text":"<ul> <li>By default, this is located at:</li> </ul> <pre><code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\resources\n</code></pre> <ul> <li>This is just a subdirectory of the game directory above.</li> <li>By default, this ONLY contains the \"packed\" directory and the \"scripts\" directory.</li> <li>The \"packed\" directory contains all kinds of game resources, like the sound effects and the graphics. (They are all packed into \".a\" files.)</li> <li>The \"scripts\" directory contains some Lua scripts that are needed by the game in order to make mods work properly.</li> <li>You can put a \"config.ini\" file in the resources directory to set certain graphic options that are not available from the in-game options menu. For more information, see this thread: https://steamcommunity.com/app/250900/discussions/0/613941122558099449/</li> <li>Afterbirth+ and Repentance come with an unpacker program that will unpack all of the files in the \"packed\" directory. This is called the \"Resource Extractor\". If you want, you can run it and your resources directory will fill up with all kinds of stuff. Afterwards, you can examine and replace individual game assets. By default, the unpacker is located at:</li> </ul> <pre><code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\tools\\ResourceExtractor\\ResourceExtractor.exe\n</code></pre> <ul> <li>After unpacking everything, if you edit or overwrite any custom game assets, they will permanently take effect. However, this will ONLY work if you rename the \"packed\" directory to something else, as the packed files take priority.</li> <li>Note that if a mod is enabled in the in-game \"Mods\" menu, and it has a resource file of the same name, it will overwrite what is in this directory.</li> <li>Also note that every time after Nicalis patches the game, you should nuke all of the unpacked files and redo this entire process from scratch, or else you will be playing on game files meant for a previous patch.</li> </ul>","tags":["Tutorial"]},{"location":"tutorials/directories-and-save-files.html#3-the-resources-dlc3-directory","title":"3 - The \"resources-dlc3\" Directory","text":"<ul> <li>By default, this is located at:</li> </ul> <pre><code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\resources-dlc3\n</code></pre> <ul> <li>This is similar to the \"resources\" directory, but it contains the files for Repentance. If a file is present in the \"resources-dlc3\" directory, it will take precedence over the same file in the \"resources\" directory.</li> </ul>","tags":["Tutorial"]},{"location":"tutorials/directories-and-save-files.html#4-the-documents-save-data-directory","title":"4 - The Documents \"Save Data\" Directory","text":"<ul> <li>By default, this is located at:</li> </ul> <pre><code>C:\\Users\\[username]\\Documents\\My Games\\Binding of Isaac Repentance\n</code></pre> <ul> <li>The \"[username]\" above refers to your Windows username.</li> <li>This folder contains the \"log.txt\" file, which is used by certain programs such as the Rebirth Item Tracker.</li> <li>This folder also contains the \"inputconfigs.dat\" file, which contains all your key bindings. (It is just a text file, so you can open it in Notepad to edit it if you want.)</li> <li>This folder also contains the \"options.ini\" file, which contains some values that you can set using the in-game menus. (This is also just a text file, so you can open it in Notepad to edit it if you want.)</li> <li>The \"options.ini\" file also contains some values that are NOT in the in-game menu. One such value is \"SteamCloud\". By default, it will have \"SteamCloud=1\".</li> <li>If \"SteamCloud\" is set to 1, the game will look for save data from the Steam save data directory, listed below as #5.</li> <li>If \"SteamCloud\" is set to 0, the game will look for save data from the same directory that the \"options.ini\" file is in (the \"Documents\" save data directory).</li> </ul>","tags":["Tutorial"]},{"location":"tutorials/directories-and-save-files.html#5-the-steam-save-data-directory","title":"5 - The Steam \"Save Data\" Directory","text":"<ul> <li>By default, this is located at:</li> </ul> <pre><code>C:\\Program Files (x86)\\Steam\\userdata\\[Steam ID]\\250900\\remote\n</code></pre> <ul> <li>The \"[Steam ID]\" above refers to your Steam ID number. If you don't know it, just look inside the \"userdata\" directory, as there will probably only be one subdirectory there.</li> </ul>","tags":["Tutorial"]},{"location":"tutorials/directories-and-save-files.html#6-the-mods-directory","title":"#6 - The \"mods\" Directory","text":"<ul> <li>By default, this is located at:</li> </ul> <pre><code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\mods\n</code></pre> <ul> <li>This contains directories for each Steam Workshop mod that is installed.</li> <li>Mods that appear in the in-game \"Mods\" menu will correspond to the directories here.</li> <li>By clicking on the \"Subscribe\" button on a mod's Steam Workshop page, the respective mod will automatically get downloaded here (and be turned on the next time you launch the game).</li> </ul>","tags":["Tutorial"]},{"location":"tutorials/directories-and-save-files.html#7-the-cached-steam-mods-directory","title":"#7 - The \"Cached Steam Mods\" Directory","text":"<ul> <li>By default, this is located at:</li> </ul> <pre><code>C:\\Program Files (x86)\\Steam\\steamapps\\workshop\\content\\250900\n</code></pre> <ul> <li>This is where mods from the Steam Workshop get downloaded to before they are sent to the \"real\" mods directory.</li> <li>If you are unsubscribing from a mod for the purposes of redownloading it from Steam, you must also delete this directory in order to force a true redownload. Otherwise, Steam will just copy the mod from its cached directory.</li> </ul>","tags":["Tutorial"]},{"location":"tutorials/directories-and-save-files.html#should-i-have-steamcloud-on-or-off","title":"Should I have \"SteamCloud\" on or off?","text":"<ul> <li>Either way is fine, but we recommend that you turn it off, since it will prevent your save files from accidentally being deleted in case Steam messes up. Also, it becomes easier to manage your save files, since they will just exist in the same directory as everything else (options.ini, log.txt, and so on).</li> </ul>","tags":["Tutorial"]},{"location":"tutorials/directories-and-save-files.html#what-are-the-save-files-called","title":"What are the save files called?","text":"<p>If you do not use SteamCloud, folder #4 will contain the files:</p> <ul> <li>persistentgamedata1.dat</li> <li>persistentgamedata2.dat</li> <li>persistentgamedata3.dat</li> </ul> <p>If you use SteamCloud, folder #5 will contain the files:</p> <ul> <li>rep_persistentgamedata1.dat</li> <li>rep_persistentgamedata2.dat</li> <li>rep_persistentgamedata3.dat</li> </ul> <p>These correspond to save file slots 1, 2, and 3 respectively. If an in-game save slot is blank, the corresponding \".dat\" file may not exist.</p> <p>Furthermore, each save file slot may have a corresponding \".dat\" file that contains the status of the current run, so that it may be resumed by the \"Continue\" feature. These files are called:</p> <ul> <li>gamestate1.dat</li> <li>gamestate2.dat</li> <li>gamestate3.dat</li> </ul> <p>Furthermore, the game occasionally makes backups of the various save files. It will prepend the date to the name of the save file. For example, this is the name of a slot 1 save file backed up on January 15th, 2017:</p> <ul> <li>20170115.persistentgamedata1.dat</li> </ul> <p></p>","tags":["Tutorial"]},{"location":"tutorials/directories-and-save-files.html#additional-reading","title":"Additional Reading","text":"<ul> <li>This is a blog from Simon at Nicalis discussing some known issues: https://steamcommunity.com/app/250900/discussions/0/613941122558099449/</li> </ul>","tags":["Tutorial"]},{"location":"tutorials/directories-and-save-files.html#macos-file-locations","title":"MacOS File Locations","text":"<p>Save data directory (for Afterbirth+):</p> <pre><code>/Users/[username]/Library/Application Support/Binding of Isaac Afterbirth+\n</code></pre> <p>Steam Cloud remote directory (for Afterbirth+):</p> <pre><code>/Users/[username]/Library/Application Support/Steam/userdata/[account id]/250900/remote\n</code></pre> <p>Unpacked resources directory (for Afterbirth+):</p> <pre><code>/Users/[username]/Library/Application Support/Steam/steamapps/common/The Binding of Isaac Rebirth/tools/ResourceExtractor\n</code></pre>","tags":["Tutorial"]},{"location":"tutorials/mod-organization.html","title":"[Tutorial] Mod Organization","text":"<p>Zamiel wrote a blog about organizing a big mod. It can be found here.</p>","tags":["Tutorial"]},{"location":"tutorials/storing-data.html","title":"[Tutorial] Storing Data for Mods","text":"<p>Zamiel wrote a blog about storing data. It can be found here.</p>","tags":["Tutorial"]},{"location":"xml/XMLFiledocumentation.html","title":"XML-File Documentations","text":"<p>The game uses .XML files to store alot of ingame contents in an easily readable and editable format.</p>"},{"location":"xml/achievements.html","title":"File \"achievements.xml\"","text":"<p>This file is used to store general informations about the ingame achievements.</p> <p>Resource-Folder: Placing this file in your mods \"resource\" folder will replace the original file.</p> <p>Content-Folder: Placing this file in your mods \"content\" folder has no effect!</p> Variable-Name Possible Values Description id int Ingame-Id of the Achievement text string Description gfx string .png file path based on the \"gfxroot\" attribute of the \"achievements\" xml root. steam_name string Name of achievement on Steam steam_description string Description (not used) steam_icon string Icon name of the achievement sprite for Steam.","tags":["File"]},{"location":"xml/ambush.html","title":"File \"ambush.xml\"","text":"<p>This file is used to store spawning patterns for the wave system of Ambush rooms and Boss Rush.   Ambush rooms use a new system that's more similar to Greed Mode waves, so this file only defines the Boss Rush waves.</p> <p>Resource-Folder: Placing this file in your mods \"resource\" folder will replace the original file.</p> <p>Content-Folder: Placing this file in your mods \"content\" folder has no effect!</p>","tags":["File"]},{"location":"xml/ambush.html#enemy-tag","title":"\"enemy\" Tag","text":"Variable-Name Possible Values Description type int The type of the entity to spawn variant int The variant of the entity count int How many of the entity should spawn at the beginning of the wave chunks int The amount of segments a multi-entity NPC (i.e, Larry Jr.) should spawn with","tags":["File"]},{"location":"xml/ambush.html#bossrush-tag","title":"\"bossrush\" Tag","text":"Variable-Name Possible Values Description numWaves int The total amount of waves to occur during Boss Rush spawnsPerWave int How many bosses should spawn per Boss Rush wave","tags":["File"]},{"location":"xml/ambush.html#stage-tag","title":"\"stage\" Tag","text":"Variable-Name Possible Values Description id int The floor chapter the Ambush wave should be able to spawn at","tags":["File"]},{"location":"xml/babies.html","title":"File \"babies.xml\"","text":"<p>This file is used to store informations about coop-babies.</p> <p>Placing this file in a resource folder of a mod and removing entries causes crashes.</p> <p>Resource-Folder: Using this file in a resource folder and modifying it can cause crashes.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p> Variable-Name Possible Values Description id int Identifier of the Baby name string Name of the Baby skin string Filepath to the .png file used by the baby achievement int Achievement id needed to unlock this Baby","tags":["File"]},{"location":"xml/backdrops.html","title":"File \"backdrops.xml\"","text":"<p>This file is used to store informations about the backdrops and sprites used in the stages.</p> <p>old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/34bhi4/backdrops_explained/</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p> Variable-Name Possible Values Description id int ID of the stage gfx string .png filename of the main backdrop file walls int Number of wall sprites in the backdrop file wallvariants int Number of wall tiles per wall sprite floors int Number of floor sprites in the backdrop file floorvariants int Number of floor variants lfloorgfx string .png filename for special L-shape floor sprites nfloorgfx string .png filename for special long or narrow floor sprites props string Anm2 filename for props used in this stage rocks string .png filename for rock sprites used on that stage pit string .png filename for pit sprites used on that stage bridge string .png filename for pit sprites used on that stage door string .png filename for door sprites used on that stage holeinwall string .png filename for hole-in-wall sprites used on that stage watergfx string .png filename for the water sprites used on that stage waterpit string .png filename for water-holding pits used on that stage spikes string .png filename for spike sprites used on that stage reversewatergfx boolean Should the water gfx animation be reversed on that stage waterpitsmode string Use not known yet... Possible values: [0,1,2]","tags":["File"]},{"location":"xml/bombcostumes.html","title":"File \"bombcostumes.xml\"","text":"<p>Used to apply costumes to bomb relative to their TearFlags.</p> <p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder of a mod will add new bomb costumes.</p>","tags":["File"]},{"location":"xml/bombcostumes.html#bomb-tag","title":"\"bomb\" Tag","text":"Variable-Name Possible Values Description variant int BombVariant for which the costumes should be applied","tags":["File"]},{"location":"xml/bombcostumes.html#rule-tag","title":"\"rule\" Tag","text":".anm2 files <p>For every .anm2-file specified you need to create 4 .anm2-files, one for every bomb size:     mini-bomb from Scatter Bombs, mini-bomb from Scatter Bombs with Mr. Mega, normal size bomb and Mr. Mega-size bomb For example, when you specify <code>bomb.anm2</code>, you actually require the files <code>bomb0.anm2</code>, <code>bomb1.anm2</code>, <code>bomb2.anm2</code> and <code>bomb3.anm2</code>.</p> Rule precedence <p>The rules you include in this file will be listed after the default rules of the respective variant. Bomb costumes will be applied from the tags within these rules (i.e. <code>body</code>, <code>front</code>, etc.) The tag of the last applicable rule that has it will always be the one to be applied. Example: Having the Items Blood Bombs and Bomber Boy will cause placed bombs to look like Blood bombs, as both rules specify the tag <code>body</code> and the rule for Blood Bombs is listed below the rule for Bomber Boy.</p> Variable-Name Possible Values Description includeFlags int All TearFlag bits required to be resent for layer to be added (seperate with spaces) excludeFlags int All TearFlag bits required to be absent for layer to be added (seperate with spaces) back string path to the .anm2 files, relative to the given anm2root, that will be displayed behind the bomb. Example: <code>flame.anm2</code> body string path to the .anm2 files, relative to the given anm2root, that will replace the main bomb sprite. Example: <code>bomb.anm2</code> body2 string path to the .anm2 file, relative to the given anm2root, that will be displayed along the main bomb sprite. Example: <code>homing.anm2</code> front string path to the .anm2 file, relative to the given anm2root, that will be applied on top of the main bomb sprite. Example: <code>tears_blood.anm2</code> front2 string path to the .anm2 file, relative to the given anm2root, that will be applied on top of the main bomb sprite. Example: <code>fast.anm2</code>Use this when you don't want an already applied <code>front</code>-animation to be overriden. overlay string path to the .anm2 file, relative to the given anm2root, that will be displayed on top of the entire bomb. Example: <code>glitter_sparkle.anm2</code> suffix string suffix to be added at the end of an image-filepath, before <code>.png</code>, that will replace the spritesheet-image associated with LayerID 0Example: <code>_gold</code> will replace the spritesheet-image <code>bomb.png</code> with <code>bomb_gold.png</code> suffix2 string suffix to be added at the end of an image-filepath, after <code>suffix</code> and before <code>.png</code>, that will replace the spritesheet-image associated with LayerID 0Example: <code>_gold</code> will replace the spritesheet-image <code>bomb.png</code> with <code>bomb_gold.png</code> <p>Example of a <code>bombcostumes.xml</code> file: <pre><code>&lt;bombcostumes anm2root=\"gfx/items/pick ups/bombs/\"&gt;\n&lt;bomb variant=\"0\"&gt; &lt;!-- Normal bomb --&gt;\n&lt;!-- TearFlag 31 == TearFlags.TEAR_GLOW --&gt;\n&lt;rule includeFlags=\"31\" body=\"glow.anm2\" /&gt;\n&lt;/bomb&gt;\n&lt;/bombcostumes&gt;\n</code></pre></p>","tags":["File"]},{"location":"xml/bosscolors.html","title":"File \"bosscolors.xml\"","text":"<p>This file is used to store all valid champion bosses. Effects of champion bosses are hardcoded, so this file defines only color, scale and HP multiplier of the boss.</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p>","tags":["File"]},{"location":"xml/bosscolors.html#boss-tag","title":"\"boss\" Tag","text":"Variable-Name Possible Values Description id int Ingame-Id of the Boss. variant int Ingame-Variant of the Boss.","tags":["File"]},{"location":"xml/bosscolors.html#color-tag","title":"\"color\" Tag","text":"Variable-Name Possible Values Description idx int Boss's color. Possible values: 1-Red, 2-Pale, 3-Green, 4-Cyan, 5-Green, 6-Orange, 7-Blue, 8-Cyan, 9-Orange, 10-?, 11-Dark Greyish Green, 12-Yellow, 13-Dark Cyan, 14-Red, 15-Dark Grey, 16-Dark Grey, 17-Pale Grey, 18-Black, 19-Red, 20-Pink, 21-Golden, 22-Pink, 23-Brown scale float Boss's scale is multiplied by this number. hp float Boss's health is multiplied by this number. anm2path string Path to a specific anm2 file that should be used instead of coloring the boss automatically","tags":["File"]},{"location":"xml/bossoverlays.html","title":"File \"bossoverlays.xml\"","text":"<p>This page needs some content. You can contribute to it using the Edit Button!</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p> Variable-Name Possible Values Description id int anm2 string Path to the .anm2 file to be used anim string Name of the animation to be played persist boolean","tags":["File"]},{"location":"xml/bosspools.html","title":"File \"bosspools.xml\"","text":"<p>This file is used to store informations about the bosses able to spawn on a given stage.</p> <p>This file can only be used to modify vanilla bosses. To add custom bosses, you need a 3rd-party library such as StageAPI.</p> <p>Resource-Folder:  Placing this file in your mods \"resource\" folder has no effect!</p> <p>Content-Folder: Placing this file in your mods \"content\" folder has no effect!</p>","tags":["File"]},{"location":"xml/bosspools.html#pool-tag","title":"\"pool\" Tag","text":"Variable-Name Possible Values Description name String Name of the bosspool doubletrouble int Room id used for double trouble rooms","tags":["File"]},{"location":"xml/bosspools.html#boss-tag","title":"\"boss\" Tag","text":"Variable-Name Possible Values Description id int ID of the boss weight float Likelyhood of encountering this boss","tags":["File"]},{"location":"xml/bosspools.html#example","title":"Example","text":"Example Code <p>This code describes a boss pool with 3 bosses in it.</p> <pre><code>&lt;bosspools&gt;\n&lt;pool name=\"basement\"&gt;\n&lt;boss id=\"1\" weight=\"1\" /&gt;      &lt;!-- Monstro --&gt;\n&lt;boss id=\"17\" weight=\"1\" /&gt;     &lt;!-- Gemini --&gt;\n&lt;boss id=\"2\" weight=\"1\" /&gt;      &lt;!-- Larry Jr. --&gt;\n&lt;/pool&gt;\n&lt;/bosspools&gt;\n</code></pre>","tags":["File"]},{"location":"xml/bossportraits.html","title":"File \"bossportraits.xml\"","text":"<p>This file is used to store informations about the VS screen sprites of bosses.</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p> Variable-Name Possible Values Description id int Id of the boss name string Name of the boss nameimage string .png filename of the name plate sprite of the boss portrait string .png filename of the boss sprite pivotX int Pivot X position where the boss sprite should be placed pivotY int Pivot Y position where the boss sprite should be placed achievement int Achievement id. Usage unknown <p>Its possible to add alternative boss portraits by adding an <code>&lt;alt&gt;</code> tag entry into the boss tag.</p> <p>Example of a <code>bossportraits.xml</code> file: <pre><code>&lt;bosses root=\"gfx/ui/boss/\" anm2=\"versusscreen.anm2\"&gt;\n&lt;boss id=\"76\" name=\"Wormwood\" nameimage=\"BossName_Wormwood.png\" portrait=\"Portrait_902.0_Wormwood.png\" pivotX=\"84\" pivotY=\"144\"&gt;\n&lt;alt stage=\"28\" portrait=\"Portrait_902.0_Wormwood_Dross.png\" /&gt;\n&lt;/boss&gt;\n&lt;/bosses&gt;\n</code></pre></p>","tags":["File"]},{"location":"xml/challenges.html","title":"File \"challenges.xml\"","text":"<p>Used to store all challenges and some of their attributes.</p> <p>Resource-Folder: Placing this file in a resource folder of a mod will override the original.</p> <p>Content-Folder: Placing this file in a content folder of a mod will add a new Custom challenge.</p> Variable-Name Possible Values Description id int Ingame-Id of the Challenge (Not needed for Content Folder) name string Name of the Challenge startingitems string list Comma separated (nospace) item ids that will be added at the start. startingitems2 string list Starting items for Player 2. Comma separated (nospace) item ids that will be added at the start.  startingtrinkets string list Comma separated (nospace) trinket ids that will be added at the start (max 2) startingcard string list Card id of the starting cardsDefault: -1 (no card) startingpill string list PillEffect id of the starting pillDefault: -1 (no pill) playertype string Player type id. Custom characters cant be defined this way! Use LUA code instead.Default: 0 (Isaac) endstage string The last stage of the challenge (use LevelStage internal ids) roomfilter string list List of RoomTypes to not be generated in challenge [Not all room ids can be used] cursefilter int Bitmask for curses to be removed.(Darkness = 1, Labyrinth = 2, Lost = 4, Unknown = 8, Cursed = 16, Maze = 32, Blind = 64, Giant = 128) getcurse int Bitmask for curses to be forced (Same id's as curse filter) achievements string list List of achievement ids that are required to be able to play the challenge altpath bool Alternative floor for light/dark path (isaac/satan) canshoot bool Determines if player can shootDefault: true (shooting enabled) redhp int Add red hp to the base of the choosen character. 2 = 1 Heart. Negative numbers possible maxhp int Add red hp containers to the base of the choosen character. 2 = 1 Heartcontainer. Negative numbers possible soulhp int Add soul hp containers to the base of the choosen character. 2 = 1 Heartcontainer blackhp int Add black hp containers to the base of the choosen character. 2 = 1 Heartcontainer coins int Add starting coins maxdamage bool Max. damage actived (clamps at min 100) or deactivated adddamage float + Damage up minfirerate float Minimal fire rate or more minshotspeed bool Minimal shot speed actived or deactivated bigrange bool Enable high starting range value difficulty bool Game difficulty [0: normal(default), 1: hard, 2: Greed, 3: Greedier)Greed and greedier mode work, but when killing Ultra Greed, the big Chest spawns, instead of a trophy megasatan bool Last boss is megasatan. Adds the Key to the player. secretpath bool Force the Repentance alt path","tags":["File"]},{"location":"xml/challenges.html#example-challengesxml-file","title":"Example \"challenges.xml\" file:","text":"<p>This code creates a new challenge called \"My new challenge\" in the custom challenges tab, which ends after Mom's heart/it lives. The player starts with Breakfast, Dead Cat and Little Steven, but cant shoot. Treasure rooms and the curse of Darkness are disabled.</p> <pre><code>&lt;challenges version=\"1\"&gt;\n&lt;challenge playertype=\"0\" name=\"My new challenge\" endstage=\"8\" startingitems=\"25,81,100\" roomfilter=\"1\" cursefilter=\"1\" canshoot=\"false\" /&gt;\n&lt;/challenges&gt;\n</code></pre>","tags":["File"]},{"location":"xml/costumes2.html","title":"File \"costumes2.xml\"","text":"<p>Defines Costume informations.</p> <p>Resource-Folder: Placing this file in a resource folder of a mod will override the original.</p> <p>Content-Folder: Placing this file in a content folder of a mod will add a new Costumes. See the Tutorial on \"Adding Costumes\" for more informations.</p>","tags":["File"]},{"location":"xml/costumes2.html#costume-reference-guide","title":"Costume Reference Guide","text":"<p>Connor made a very handy table of all costumes currently available in the game. It contains their ID, Type, Priority, layer informations and a preview image for each costume.</p> <p>These informations can be used to improve your workflow of creating new costumes, by knowing which costumes it might interfere with or what priority it should have.</p> <p>--&gt; \"Isaac Costumes Reference\" by Connor &lt;---</p>","tags":["File"]},{"location":"xml/costumes2.html#anm2-layer-structure","title":"Anm2 Layer Structure","text":"<p>The order in which costumes are rendered is defined by their specific \"layers\" in their anm2 files. Each of the layers can only have one sprite rendered at a time. A costume may have pieces on multiple layers (for example, the face, third eye, and flame of \"Spoon Bender\" are all on separate layers).</p> <p>Layer names</p> <p>From bottom to top: glow &lt; body &lt; body{0..1} &lt; head &lt; head{0..5} &lt; top0 &lt; extra &lt; back</p>","tags":["File"]},{"location":"xml/costumes2.html#attributes","title":"Attributes","text":"Variable-Name Possible Values Description id int Ingame-Id of the Costume. Will be overridden by the game when file is in content folder. anm2path string Path to the .anm2 file type string Type of the costume. Available: [none, passive, active, familiar, trinket] priority int Priority of the costume. higher number means higher priority overwriteColor bool Define if a costume overrides the body color of the character (default: false) isFlying bool Define if a costume displays a flying character (default: false) skinColor int Define what skincolor that costume has. (default: 0) hasSkinAlt bool Define if a costume has alternative versions for all other the skin colors (default: false) hasOverlay bool Define if a costume has an overlayeffect (default: false) forceBodyColor bool Forces the body color (default: false)  forceHeadColor bool Forces the head color (default: false)","tags":["File"]},{"location":"xml/curses.html","title":"File \"curses.xml\"","text":"<p>Stores the names and ids of the available curses.</p> <p>Resource-Folder: Placing this file inside a mods resources folder will rename curses.</p> <p>Content-Folder: Placing this file in a content folder of a mod will add a new Curse. The new curse must be applied using lua, since it cant be encountered normally!</p> Variable-Name Possible Values Description id int Ingame-Id of the Curse. Will be overridden by the game when file is in content folder. name string Name of the Curse","tags":["File"]},{"location":"xml/cutscenes.html","title":"File \"cutscenes.xml\"","text":"<p>This file stores and defines the intro cutscene and the various ending cutscenes in the game.</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p>","tags":["File"]},{"location":"xml/cutscenes.html#cutscene-tag","title":"\"cutscene\" Tag","text":"Variable-Name Possible Values Description id int The ID of the cutscene name string The name of the cutscene fadeout bool Whether or not the cutscene should fadeout fadecolor string The color the fadeout should be in if enabled","tags":["File"]},{"location":"xml/cutscenes.html#anm2part-tag","title":"\"anm2part\" Tag","text":"Variable-Name Possible Values Description anm2 string The filepath to the anm2 file this anm2part should play anim string The name of the animation in the anm2 that this anm2part should play music int The ID of the music this anm2part should play, defined in music.xml musicDelay int How long the game should wait to play the aforementioned music, if any width int How wide the anm2 should be displayed on screen height int How long the anm2 should be displayed on screen subtitles string The filepath to the subtitles.srt file letterbox bool","tags":["File"]},{"location":"xml/cutscenes.html#videopart-tag","title":"\"videopart\" Tag","text":"Variable-Name Possible Values Description file string The filepath to the video file this videopart should play subtitles string The filepath to the subtitles.srt file keepMusic bool Whether or not music defined in an anm2part should keep playing while this videopart is playing","tags":["File"]},{"location":"xml/entities2.html","title":"File \"entities2.xml\"","text":"<p>This page needs some content. You can contribute to it using the Edit Button!</p> <p>old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/36o00t/entitys_explained_how_to_add_entity_variants/</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p> Variable-Name Possible Values Description name str id int Type of the entity. Max Value: 4095 variant int Variant of the entity. The maximum value is 4095. If you leave this blank, then the game will automatically chose the next available number. subtype int SubType of the entity. The maximum value is 255. (The reason for this is that the hash map generator of the .stb format expects a specific bit-depth.) anm2path string path to the anm2 file, relative to the given anm2root. Example: <code>001.000_Player.anm2</code> baseHP int boss int Entity is a boss. Possible values: ['0', '1'] bossID int champion int Allow champion variants of this entity. Possible values: ['0', '1'] collisionDamage float collisionMass float collisionRadius float Radius of the collision circle. This value is used for both entity &lt;--&gt; entity and entity &lt;--&gt; grid collisions. This changes the <code>Entity.Size</code> field. collisionRadiusXMulti float Multiplier for the X direction of the collision circle. This can be used to grant an entity an elliptical hitbox collisionRadiusYMulti float Multiplier for the Y direction of the collision circle. This can be used to grant an entity an elliptical hitbox collisionInterval int Number of game ticks till the next collision should be evaluated. Default = 1 numGridCollisionPoints int Number of points along the edge of the collision circle, which are used to detect collisions with grid entities. friction float \"Slippyness\" of the entity. Default = 1. Lower values make them slide more, similar as they would standing on ice. Higher values make them slide less. A value of 0 makes them unable to move. shadowSize int stageHP int tags string possible values: ['nodelirium', 'spider', 'explosive_soul', 'cansacrifice', 'ghost', 'brimstone_soul', 'homing_soul', 'fly', 'noreroll']See Chapter below for in depth explanations of the tags. gridCollision string possible values: ['nopits', 'ground', 'none', 'walls', 'floor'] portrait int hasFloorAlts bool If set to true, floor specific sprites should be used for this entity if they exist. See the chapter below for more informations reroll bool shutdoors bool shieldStrength int gibAmount int gibFlags string used Values: ['poop'] bestiaryAnim string bestiaryOverlay string","tags":["File"]},{"location":"xml/entities2.html#tags-explanation","title":"Tags explanation","text":"Stage-Name Suffix cansacrifice Marks familiars on which sacrificial altar can be used on nodelirium Blacklists a boss from being used by Delirium fly Indicates enemies which should be neutralized by Skatole and charmed by Beelzebub spider Indicates enemies which should be neutralized by Bursting Sack ghost Indicates enemies which Vade Retro can kill at &lt;50% HP as a special interaction noreroll Immunity from D10 rerolls brimstone_soul (Usage currently unknown. might be scrapped feature for Hungry Soul or Vade Retro) explosive_soul (Usage currently unknown. might be scrapped feature for Hungry Soul or Vade Retro) homing_soul (Usage currently unknown. might be scrapped feature for Hungry Soul or Vade Retro)","tags":["File"]},{"location":"xml/entities2.html#floor-specific-sprites","title":"Floor specific sprites","text":"<p>If an entity has the attribute <code>hasFloorAlts</code> set to <code>true</code>, the game tries to load the spritesheet of the entity with an additional suffix, based on the current stage. The Suffix of a stage is defined in the <code>suffix</code> attribute in the stages.xml file. If no sprite can be found, it will load the default spritesheet.</p> <p>Example: Original Gaper sprite: monster_017_gaper.png</p> <p>Downpour Sprite: monster_017_gaper_downpour.png</p> <p>Suffix per stage:</p> Stage-Name Suffix Flooded Caves _downpour Downpour _downpour Dross _dross Ashpit _ashpit Mausoleum _mausoleum Gehenna _gehenna","tags":["File"]},{"location":"xml/entities2.html#gibs-tag","title":"<code>&lt;gibs&gt;</code> tag","text":"<p>the <code>&lt;gibs&gt;</code> tag is used to define the gibs that are spawned when an entity is killed or destroyed. | Variable-Name | Possible Values | Description | |:--|:--|:--| | amount | int | How many gibs should be spawned| | blood | int | Possible values: [0,1] where 0 is off and 1 is on| | bone | int |Possible values: [0,1] where 0 is off and 1 is on| | chain | int |Possible values: [0,1] where 0 is off and 1 is on| | colorblood | int |Possible values: [0,1] where 0 is off and 1 is on| | dust | int |Possible values: [0,1] where 0 is off and 1 is on| | eye | int |Possible values: [0,1] where 0 is off and 1 is on| | gut | int |Possible values: [0,1] where 0 is off and 1 is on| | huge | int |Possible values: [0,1] where 0 is off and 1 is on| | large | int |Possible values: [0,1] where 0 is off and 1 is on| | poop | int |Possible values: [0,1] where 0 is off and 1 is on| | rock | int |Possible values: [0,1] where 0 is off and 1 is on| | rock_small | int |Possible values: [0,1] where 0 is off and 1 is on| | small | int |Possible values: [0,1] where 0 is off and 1 is on| | sound_baby | int |Possible values: [0,1] where 0 is off and 1 is on| | sound_bone | int |Possible values: [0,1] where 0 is off and 1 is on| | worm | int |Possible values: [0,1] where 0 is off and 1 is on|</p>","tags":["File"]},{"location":"xml/fortunes.html","title":"File \"fortunes.txt\"","text":"<p>This file is used to store all \"fortunes\" displayed when using the \"Fortune Machine\" or similar.</p> <p>Fortunes-entries can have up to 3 rows and should be seperated with an empty line.</p> Bug <p>Having more than 24 character in a row will cause the text to flow outside of the display-box.</p> <p>Resource-Folder: Placing this file in your mods \"resource\" folder will replace the original file.</p> <p>Content-Folder: Placing this file in your mods \"content\" folder has no effect!</p>","tags":["File"]},{"location":"xml/fxlayers.html","title":"File \"fxlayers.xml\"","text":"<p>Used to store information about overlays used in the stages. Unlike other Isaac XMLs, the file does not have one overarching element containing everything inside, instead being seperated into the elements fxLayers, fxRays, and fxParams.</p> <p>Resource-Folder: Placing this file in a resource folder of a mod will override the original.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p>","tags":["File"]},{"location":"xml/fxlayers.html#fxlayers","title":"fxLayers","text":"","tags":["File"]},{"location":"xml/fxlayers.html#fx-tag","title":"\"fx\" Tag","text":"Variable-Name Possible Values Description id string path string Path to the overlay image. Must be a .png saved at a bit-depth of 32 bits. numLayers integer todo xMin float xMax float yMin float yMax float layer string Possible values: [lighting, foreground, background, behind] stage integer Possible values: [1-Basement, 2-Caves, 3-Depths, 4-Womb, 5-Blue Womb, 6-Sheol, 7-Chest, 8-Void, 9-Home] altStages integer Bitmask of 1 &lt;&lt; [0-Original, 1-WOTL, 2-Afterbirth, 3-Unused (legacy Greed Mode), 4-Repentance, 5-Repentance Alt, 6-Special (only used for the Abandoned Mineshaft)] parallax float Moves the overlay in the opposite direction as the player onlyDefaultBackdrop boolean todo blendMode integer todo useBGShader boolean todo","tags":["File"]},{"location":"xml/fxlayers.html#gfx-tag","title":"\"gfx\" Tag","text":"<p>Optional child element of the \"fx\" element, used for specifying overlays Multiple \"gfx\" elements can be added to a \"fx\" element, resulting in a random selection of any others with the same roomshape.</p> Variable-Name Possible Values Description path string Path to the overlay image. Must be a .png saved at a bit-depth of 32 bits. roomshape integer Appears in the room corresponding to the value of the RoomShape enum.","tags":["File"]},{"location":"xml/giantbook.html","title":"File \"giantbook.xml\"","text":"<p>This page needs some content. You can contribute to it using the Edit Button!</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p> Variable-Name Possible Values Description todo","tags":["File"]},{"location":"xml/itempools.html","title":"File \"itempools.xml\"","text":"<p>This page needs some content. You can contribute to it using the Edit Button!</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p> Variable-Name Possible Values Description Id int (Optional) The id of the item in the itempool When using this variable, you can't use the \"name\" variable. Name String (Optional, recommended) The name of the item in the itempool. When using this variable, you can't use the \"id\" variable. Weight float Relative \"likelyhood\" that this item can be drawn from the pool. <code>Default = 1</code> . If this value reaches the \"RemoveOn\" value, the item will no longer be drawn from the pool DecreaseBy float Value on how often the item can be drawn from the pool. <code>Default = 1</code>Everytime an item is drawn from the pool, this value is substracted from its Weight. This makes the item appear less likely on reroll till the weight reaches the \"RemoveOn\" value. RemoveOn float Value on which Weight value the item is no longer able to be drawn from the pool. <code>Default = \"0.1\"</code>","tags":["File"]},{"location":"xml/itempools.html#item-count-calculation","title":"Item count calculation","text":"<p>The amount on how often an item will be in the itempool is determined with the following equation: <pre><code>math.ceil( ( Weight - RemoveOn ) / DecreaseBy )\n</code></pre> ( <code>math.ceil</code> rounds a number to the next biggest integer )</p>","tags":["File"]},{"location":"xml/itempools.html#example","title":"Example","text":"Example Code <p>This code describes an item pool with 3 items in it.</p> <pre><code>&lt;ItemPools&gt;\n&lt;Pool Name=\"myItempool\"&gt;\n&lt;!--The Sad Onion --- 1 times in the Pool--&gt;\n&lt;Item Id=\"1\" Weight=\"1\" DecreaseBy=\"1\" RemoveOn=\"0.1\"/&gt;\n&lt;!--The Inner Eye --- 5 times in the Pool (10-1)/2 = 4.5 =&gt; 5 --&gt;\n&lt;Item Id=\"2\" Weight=\"11\" DecreaseBy=\"2\" RemoveOn=\"1\"/&gt;\n&lt;!--Spoon Bender --- 4 times in the pool (1-0.1)/0.25 = 3.6 =&gt; 4 --&gt;\n&lt;Item Id=\"3\" Weight=\"1\" DecreaseBy=\"0.25\" RemoveOn=\"0.1\"/&gt;\n&lt;/Pool&gt;\n&lt;/ItemPools&gt;\n</code></pre>","tags":["File"]},{"location":"xml/items.html","title":"File \"items.xml\"","text":"<p>old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/3mub9c/ways_to_modify_items/</p> <p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder of a mod will add new items.</p> Variable Name Possible Values Description id int Used for associating costumes and death-portrait/collection-page sprites with an item. cache string Possible values : [firedelay, damage, speed, range, tearcolor, tearflag, color, size. shotspeed, all, luck, flying, weapon, familiars]. name string description string gfx string Path to the item image. Must be a .png saved at a bit-depth of 32 bits. tags string Multiple tags must be separated with a space; see below for possible values and descriptions. bombs int keys int coins int hearts int Distinct from MaxHearts, must be granted alongside MaxHearts in order to grant filled heart containers. soulhearts int blackhearts int maxhearts int Number of added empty heart containers. maxcharges int When chargetype is set to <code>timed</code>, this attribute is used to define the cooldown of the item in frames. chargetype string Possible values: [normal, timed, special] cooldown int Number of frames until this item's associated CollectibleEffect is auto-removed if granted. CollectibleEffects are automatically granted by active items on use. passivecache bool Calls a cache evaluation when picked up (used for acive items, e.g. Mom's Box). special bool initcharge int How many charges should this active item have when first picked up (e.g. Everything Jar ). devilprice int Possible values: ['1','2'] shopprice int addcostumeonpickup bool persistent bool Determines whether the item's associated CollectibleEffect is retained when transitioning between rooms, or across save &amp; continue. CollectibleEffects are automatically granted by active items on use. False by default. achievement int Ties the item to be unlocked by a vanilla achievement. quality int Possible values: ['0', '1', '2', '3', '4']. craftquality int Possible values: ['-1', '0', '1', '2', '3', '4']. A value of -1 prevents this item from appearing in Bag of Crafting. hidden bool Prevents the item from appearing in Death Certificate, or on the collection menu (e.g. Familiar-ItemType Damocles). cleareffectsonremove bool Clears any effects of the item upon removal. Note: This is currently not used by any vanilla item.","tags":["File"]},{"location":"xml/items.html#tags-documentation","title":"Tags Documentation","text":"Tag Name Description dead Dead things (for the Parasite unlock) syringe Syringes (for Little Baggy and the Spun! transformation) mom Mom's things (for Mom's Contact and the Yes Mother? transformation) tech Technology items (for the Technology Zero unlock) battery Battery items (for the Jumper Cables unlock) guppy Guppy items (Guppy transformation) fly Fly items (Beelzebub transformation) bob Bob items (Bob transformation) mushroom Mushroom items (Fun Guy transformation) baby Baby items (Conjoined transformation) angel Angel items (Seraphim transformation) devil Devil items (Leviathan transformation) poop Poop items (Oh Shit transformation) book Book items (Book Worm transformation) spider Spider items (Spider Baby transformation) quest Quest item (cannot be rerolled or randomly obtained) monstermanual Can be spawned by Monster Manual nogreed Cannot appear in Greed Mode food Food item (for Binge Eater) tearsup Tears up item (for Lachryphagy unlock detection) offensive Whitelisted item for Tainted Lost nokeeper Blacklisted item for Keeper/Tainted Keeper nolostbr Blacklisted item for Lost's Birthright stars Star themed items (for the Planetarium unlock) summonable Summonable items (for Lemegeton) nocantrip Can't be obtained in Cantripped challenge wisp Active items that have wisps attached to them (automatically set) uniquefamiliar Unique familiars that cannot be duplicated nochallenge Items that shouldn't be obtainable in challenges nodaily Items that shouldn't be obtainable in daily runs (since you can't have modded items in daily runs, this tag isn't neccessary) lazarusshared Items that should be shared between Tainted Lazarus' forms lazarussharedglobal Items that should be shared between Tainted Lazarus' forms but only through global checks (such as EntityPlayer:HasCollectible) noeden Items that can't be randomly rolled","tags":["File"]},{"location":"xml/items_metadata.html","title":"File \"items_metadata.xml\"","text":"<p>This file is used to define additional informations for Collectibles or Trinkets. This includes the quality, and special properties like transformations or gameplay interactions.</p> <p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder of a mod will add new items.</p> Warning! File not needed! <p>The \"items_metadata.xml\" file is a relict from the dev process. All its features (Quality and Tag definition of items) can be achieved the same but more reliable way in the \"items.xml\" file.</p> Variable-Name Possible Values Description id int ID of the corresponding Collectible or Trinket quality int Possible values: ['0', '1', '2', '3', '4'] tags string Multiple tags must be split with a space. Possible values: ['', 'battery', 'bob', 'mushroom', 'nogreed', 'nolostbr', 'offensive', 'summonable', 'poop', 'tearsup', 'uniquefamiliar', 'mom', 'baby', 'quest', 'food', 'spider', 'monstermanual', 'devil', 'book', 'fly', 'stars', 'nokeeper', 'nocantrip', 'angel', 'syringe', 'dead', 'guppy', 'tech']","tags":["File"]},{"location":"xml/locusts.html","title":"File \"locusts.xml\"","text":"<p>This file is used to define the properties of Locust familiars, spawned by Abyss.</p> <p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder of a mod will add new locusts.</p>","tags":["File"]},{"location":"xml/locusts.html#color-nodes","title":"\"color\" nodes","text":"<p>Used to define color a locust can have.</p> Variable-Name Possible Values Description name str Name of the color which will be used to reference it in the \"locust\" nodes r int Red g int Green b int Blue or int Offset Red og int Offset Blue ob int Offset Green","tags":["File"]},{"location":"xml/locusts.html#locust-nodes","title":"\"locust\" nodes","text":"<p>Used to define the special properties of the locust created from the item with the given ID.</p> Variable-Name Possible Values Description id int Id of the Collectible which Abyss destroyed backColor string backGfx string special back-side spritesheet the locust should use collisionInterval int color string Name of color used by this Locust count int Number of locusts spawned damageMultiplier float gfx string special spritesheet the locust should use speed float overlayColor string Name of color used by the overlay effect overlayGfx string special overlay spritesheet the locust should use tearFlags int Bitmask of the tearflags tearFlags2 int Bitmask of the tearflags, is tied to procChance procChance float The chance of applying tearFlags2 scale float Size multiplier of the locust","tags":["File"]},{"location":"xml/minibosses.html","title":"File \"minibosses.xml\"","text":"<p>This file is used to store the name of the miniboss in certain miniboss-rooms. The name will be displayed on a \"streak\"-animation like \"Isaac vs. MINIBOSS_NAME\"</p> <p>Resource-Folder: Placing this file in your mods \"resource\" folder will replace the original file.</p> <p>Content-Folder: Placing this file in your mods \"content\" folder has no effect!</p> Variable-Name Possible Values Description id int RoomID where this streak should be triggered. The RoomID should be in increments of 10Example: <code>2020</code>Rooms with IDs not ending with 0 will be fitted to a possible id ending with 0. Example: <code>2023</code> will be sorted to <code>2020</code>. name string Name that will be displayed in the streak animation","tags":["File"]},{"location":"xml/music.html","title":"File \"music.xml\"","text":"<p>This file is used to store and define the music tracks the game plays. This is only background music, sound effects are in the \"sounds.xml\" file.</p> <p>Old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/3ebqat/all_about_music_soundfiles/</p> <p>Resource-Folder: Placing this file in your mods \"resource\" folder will replace the original file.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p> Variable-Name Possible Values Description id int The ID of the music this track defines name string The name of the track intro string The filepath to the intro of this track. Plays exactly once at the beginning of the song path string The filepath to the main music file. Plays after the intro layerintro string The filepath to the intro's layer of this track layer string The filepath to the layer of the song. Layers play over the song when there are a large amount of enemies in the room loop bool Whether or not the main track should loop indefinitely. layermode int layerfadespeed float mul float layermul float","tags":["File"]},{"location":"xml/nightmares.html","title":"File \"nightmares.xml\"","text":"<p>Used to store all animation paths to the nightmares (dream sequence between stage transitions)</p> <p>Resource-Folder: Placing this file in a resource folder of a mod will override the original.</p> <p>Content-Folder: Placing this file in a content folder of a mod will add new nightmares.</p> Variable-Name Possible Values Description anm2 string Path to the .anm2 file of the nightmare","tags":["File"]},{"location":"xml/playerforms.html","title":"File \"playerforms.xml\"","text":"<p>This file is used to define transformations.</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p> Variable-Name Possible Values Description id int name string Internal name of the transformation costume int Costume ID tags string Item-Tags that count towards that transformations cache string Cache flags that should update when this transformation is triggered","tags":["File"]},{"location":"xml/players.html","title":"File \"players.xml\"","text":"<p>This page needs some content. You can contribute to it using the Edit Button!</p> <p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new characters.</p> Variable-Name Possible Values Description name string Name of the character (has to match the one in CharacterMenu.anm2) skin string Path of the character spritesheet skinColor int Default skin color of the character (-1 = all, 0 = white, 1 = black, 2 = blue, 3 = red, 4 = green, 5 = grey) nameimage string Name for vs. screen portrait string Portrait for the vs. screen extraportrait string .anm2 file that will be displayed on the vs. screen alongside the defined image in the \"portrait\" attribute hp int Starting red health (1 = half heart) armor int Starting soul hearts (1 = half soul heart) black int Starting  black hearts (1 = half black heart) items int Starting item ID (can separate with a comma to add more than one) trinket int Starting trinket ID costume int costumeSuffix string Equal to the suffix of a directory to use for character-specific costumes. For example, The Forgotten's costumeSuffix is <code>_forgotten</code>, which means that his corresponding directory is located at <code>C:\\Program Files (x86)\\Steam\\steamapps\\common\\The Binding of Isaac Rebirth\\resources-dlc3\\gfx\\characters\\costumes_forgotten</code>. bombs int Starting bombs keys coins Starting keys coins int Starting coins card int Starting card ID pill int canShoot bool False = blindfolded achievement int Tie the character to a vanilla achievement broken int Starting broken hearts  pocketActive int Starting pocket active item ID  birthright string Message when picking up Birthright  bSkinParent string Name of the normal version of your tainted character  hidden bool True = the character won't appear in the selection screen  <p>Example of a players.xml file: <pre><code>&lt;players root=\"gfx/characters/costumes/\"\nportraitroot=\"gfx/ui/boss/\"\nnameimageroot=\"gfx/ui/boss/\"&gt;\n&lt;player name=\"Bob\" skin=\"character_Bob.png\" hp=\"4\"\nblack=\"4\" pocketActive=\"712\" items=\"1,4\" keys=\"3\"\nnameimage=\"playername_Bob.png\"\nportrait=\"playerportrait_Bob.png\"\nskinColor=\"-1\" canShoot=\"false\"\nbirthright=\"You are now a gamer\"/&gt;\n&lt;/players&gt;\n</code></pre></p>","tags":["File"]},{"location":"xml/pocketitems.html","title":"File \"pocketitems.xml\"","text":"<p>Resource-Folder: Using this file in a resource folder of a mod will replace the original file.</p> <p>Content-Folder: Using this file in a content folder will add new cards and pill effects.</p> <p><code>pocketitems.xml</code> is used for two significantly different purposes: Adding cards, and adding pill effects. These have different xml syntaxes, seen below.</p>","tags":["File"]},{"location":"xml/pocketitems.html#cards-runes","title":"Cards &amp; Runes","text":"<p>Cards are marked by <code>&lt;card ... /&gt;</code>, like so:</p> <p><pre><code>&lt;card type=\"tarot\" pickup=\"1\" description=\"Where journey begins\" id=\"1\" name=\"0 - The Fool\" announcer=\"375\" announcerdelay=\"60\" mimiccharge=\"2\" /&gt;\n</code></pre> Runes use the same attributes as cards, but are marked by <code>&lt;rune ... /&gt;</code> or the type equal <code>rune</code>. In the vanilla files, all runes except the soul stones use the <code>&lt;rune&gt;</code> tag and type. Soul stones use the <code>&lt;card&gt;</code> tag and the <code>rune</code> type, but seem to act the same as other runes regardless. An example for a rune would be: <pre><code>&lt;rune type=\"rune\" pickup=\"3\" achievement=\"89\" description=\"Some description\" id=\"32\" name=\"Some Rune\" announcer=\"341\" mimiccharge=\"2\" /&gt;\n</code></pre></p> Variable-Name Possible Values Description name string The name of the card. description string The description of the card. hud string The name of the card's front animation in <code>content/gfx/ui_cardfronts.anm2</code>, which is only used in mods. type string Either <code>tarot</code>, <code>tarot_reverse</code>, <code>suit</code>, <code>special</code>, <code>rune</code>, or <code>object</code>. All types other than <code>object</code> and <code>rune</code> can be mimicked with Blank Card, while cards of type <code>rune</code> can be mimicked with Clear Rune.  mimiccharge int The amount of charge the card should take to mimic with Blank Card / Clear Rune.  pickup int The entities2.xml subtype corresponding to this card's pickup.  announcer int The sound ID to play when the card is used. announcerdelay int The delay in frames between card use and the sound provided being played. achievement int Ties the card to a vanilla achievement. greedmode bool Is the pocketitem available in greedmode. Default = true <p>In both Afterbirth+ and Repentance, when adding a custom card you must include the <code>hud</code> tag, and an anm2 in your mod's <code>content/gfx/</code> folder called <code>ui_cardfronts.anm2</code>. This anm2 must contain an animation with the same name as specified in the <code>hud</code> tag, which will be displayed in the HUD as your card's front. Once you've added a card to the game, you'll be able to get its id through lua by using the <code>Isaac.GetCardIdByName(string cardHudName)</code> function, which takes the name specified in the <code>hud</code> tag.</p> <p>If the card uses the same backside as an already existing pickup, you should set <code>pickup</code> to the subtype of the existing pickup and not worry about <code>entities2.xml</code>. Otherwise, you can use the <code>pickup</code> tag in Repentance, to set the card's HUD and pickup visuals through a single anm2. In order to use it, you must add a matching <code>entities2.xml</code> entry with the tarot card type and variant (5.300), using the subtype specified in the <code>pickup</code> tag, as seen below:</p> <p>In <code>pocketitems.xml</code>: <pre><code>&lt;card type=\"object\" name=\"Custom Object\" description=\"\" hud=\"Custom Object\" pickup=\"160\"/&gt;\n</code></pre></p> <p>In <code>content/entities2.xml</code>: <pre><code>&lt;entities anm2root=\"gfx/\" version=\"5\"&gt;\n&lt;entity anm2path=\"custom_object.anm2\" baseHP=\"0\" boss=\"0\" champion=\"0\" collisionDamage=\"0\" collisionMass=\"3\" collisionRadius=\"12\" friction=\"1\" id=\"5\" name=\"Custom Object\" numGridCollisionPoints=\"24\" shadowSize=\"16\" stageHP=\"0\" variant=\"300\" subtype=\"160\"&gt;\n&lt;preload-snd id=\"8\" /&gt; &lt;!-- BOOK_PAGE_TURN_12 --&gt;\n&lt;/entity&gt;\n&lt;/entities&gt;\n</code></pre></p> <p>The anm2 specified in <code>entities2.xml</code> should have the animations HUD and HUDSmall, alongside general pickup animations. See <code>gfx/05.301_tarot card.anm2</code> in the vanilla resources for an example! Even if you put the <code>entities2.xml</code> in the <code>content</code> directory, you should add the <code>anm2</code> file in the <code>resources</code> directory, otherwise the game won't find it. For example, with the provided <code>entities2.xml</code>, you would need to place the animation file at <code>resources/gfx/custom_object.anm2</code>.</p> <p>Note that the subtype used in <code>entities2.xml</code> and the <code>pickup</code> tag cannot be used to spawn your card, and will instead crash the game. You must spawn / give your card via the card id, which you can obtain from <code>Isaac.GetCardIdByName(string cardHudName)</code> as described above. You can also check your card's current ID easily in the console by typing <code>g kID</code> and checking autocomplete; the last base game card is <code>k97</code>, the Soul of Jacob, so modded ids will start at <code>k98</code>.</p> <p>Unlike in Afterbirth+, cards added in <code>pocketitems.xml</code> get automatically added to the card pool.</p>","tags":["File"]},{"location":"xml/pocketitems.html#pill-effects","title":"Pill Effects","text":"<p>Pill effects are significantly easier to add than cards, and are also automatically added to the pill pool when created. They are marked by <code>&lt;pilleffect ... /&gt;</code>, like so:</p> <pre><code>&lt;pilleffect announcer2=\"760\" id=\"0\" name=\"Bad Gas\" announcer=\"328\" class=\"1+\" mimiccharge=\"1\" /&gt;\n</code></pre> Variable-Name Possible Values Description name string Name of the pill effect description string Description of the pill effect (optional, used in I found pills) class string A number from 0 - 3, indicating Joke, Minor, Medium, or Major effects. A <code>+</code> or <code>-</code> can be appended to note whether the pill is positive or negative, or excluded to denote neutral pills. mimiccharge int Amount of charge the pill should take to mimic with Placebo announcer int Sound ID to play when the pill is used announcer2 int Sound ID to play when the pill is used as a horse pill announcerdelay int Delay in frames between pill use and the sound provided being played achievement int Ties the pill effect to a vanilla achievement greedmode bool Is the pocketitem available in greedmode. Default = true <p>Example of a <code>pocketitems.xml</code> file that adds one new card and one new pill effect:</p> <pre><code>&lt;pocketitems&gt;\n&lt;card type=\"object\" name=\"Custom Object\" description=\"It's custom!\" hud=\"Custom Object\" pickup=\"160\"/&gt;\n&lt;pilleffect name=\"Damage Up\" class=\"3+\" mimiccharge=\"12\" /&gt;\n&lt;/pocketitems&gt;\n</code></pre>","tags":["File"]},{"location":"xml/preload.html","title":"File \"preload.xml\"","text":"<p>This page needs some content. You can contribute to it using the Edit Button!</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p> Variable-Name Possible Values Description todo","tags":["File"]},{"location":"xml/recipes.html","title":"File \"recipes.xml\"","text":"<p>Stores permenant recipes for Bag of Crafting that are not affected by per-run randomization.</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Placing this file in the content folder will allow you to define new recipes.</p> Variable-Name Possible Values Description input string Coded string of characters representing crafting ingredients (e.g. \"bbbbbbbb\") output int Item ID of the output Notes <p>Due to the lack of a way to add recipes without using an ItemID, it is not possible to add recipes for modded items.</p>","tags":["File"]},{"location":"xml/recipes.html#known-crafting-ingredient-representations","title":"Known Crafting Ingredient Representations","text":"Crafting Ingredient Coded Representation Penny \".\" (Period/Full Stop) Nickel \"o\" Dime \"O\" (Captial o) Lucky Penny \"Q\" (Capital q) Golden Penny \"$\" (Dollar) Bomb \"v\" Golden Bomb \"^\" (Caret) Giga Bomb \"V\" (Capital v) Poop Nugget \"_\" (Underscore) Key \"/\" (Forward Slash) Golden Key \"|\" (Pipe) Charged Key \"%\" (Percentage) Red Heart \"h\" Rotten Heart \"r\" Soul Heart \"s\" Black Heart \"b\" Bone Heart \"B\" (Captial b) Golden Heart \"g\" Eternal Heart \"e\" Micro Battery \"1\" Lil' Battery \"2\" Mega Battery \"3\" Golden Battery \"4\" Pill \"(\" (Open Bracket) Golden Pill \"{\" (Open Curly Bracket) Card \"[\" (Open Square Bracket) Rune \"&gt;\" (Greater Than) Dice Shard \"?\" (Question Mark) Cracked Key \"~\" (Tilde)","tags":["File"]},{"location":"xml/rules.html","title":"File \"rules.txt\"","text":"<p>This file is used to store all \"rules\" displayed when using the \"Rules\" card.</p> <p>Rule-entries can have up to 3 rows and should be seperated with an empty line.</p> Bug <p>Having more than 24 character in a row will cause the text to flow outside of the display-box.</p> <p>Resource-Folder: Placing this file in your mods \"resource\" folder will replace the original file.</p> <p>Content-Folder: Placing this file in your mods \"content\" folder has no effect!</p>","tags":["File"]},{"location":"xml/seedmenu.html","title":"File \"seedmenu.xml\"","text":"<p>File that defines the display of the Easter Egg seed menu.</p> <p>Resource-Folder: Placing this file in your mods \"resources\" folder has no effect!</p> <p>Content-Folder: Placing this file in your mods \"content\" folder has no effect!</p>","tags":["File"]},{"location":"xml/seeds.html","title":"File \"seeds.txt\"","text":"<p>A text file containing special seeds, mostly used for Easter Egg seeds.</p> <p>Any Seed listed in this file can not be used in the \"seed input\" dialog. (Blacklist-Behavior)</p> <p>Resource-Folder: Placing this file in your mods \"resource\" folder will add all listed seeds to the seed-blacklist. (Easter-Egg seeds still work and are still blocked)</p> <p>Content-Folder: Placing this file in your mods \"resource\" folder will add all listed seeds to the seed-blacklist.</p>","tags":["File"]},{"location":"xml/sounds.html","title":"File \"sounds.xml\"","text":"<p>This file is used to store informations about the Soundeffect used in the game.</p> <p>old tutorial: https://www.reddit.com/r/themoddingofisaac/comments/3ebqat/all_about_music_soundfiles/</p> <p>Resource-Folder: Placing this file in your mods \"resource\" folder will replace the original file.</p> <p>Content-Folder: Placing this file in your mods \"content\" folder will add new sound effects.</p>","tags":["File"]},{"location":"xml/sounds.html#sound-node","title":"\"sound\" node","text":"Variable-Name Possible Values Description name string Name of the Sound effect","tags":["File"]},{"location":"xml/sounds.html#sample-node","title":"\"sample\" node","text":"<p>Child-node of the \"sound\" node. Multiple \"sample\" nodes can be added to a \"sound\" node, resulting in a random selection of them when playing.</p> Variable-Name Possible Values Description weight float Weight of the sound-effect when choosen by random.Lower number = less likely path string filepath to the .wav file","tags":["File"]},{"location":"xml/sounds.html#informations","title":"Informations","text":"<p>Its only possible to define \".wav\" files as sound effects. The file must be encoded in 32-bit, otherwise it will sound like high-pitched static noise. The Bitrate and audio-channel options can be choosen freely.</p>","tags":["File"]},{"location":"xml/sounds.html#file-conversions","title":"File Conversions","text":"<p>For an easy conversion from any audio-format to the needed \".wav\" format, you can use a lot of software tools for editing sound files.</p> <p>As an online alternative, you can also use websites like: https://convertio.co/mp3-wav/ . Make sure you save the files as 32-bit (example Codec: \"PCM_S16LE (Uncompressed)\")</p>","tags":["File"]},{"location":"xml/sounds.html#example","title":"Example","text":"Example Code <p>This code adds two sound effects. One with a single sound, and another one with 3 possible sounds choosen by random.</p> <pre><code>&lt;sounds root=\"sounds/\"&gt;\n&lt;sound name=\"MySoundEffect1\"&gt;\n&lt;sample weight=\"1\" path=\"some_Sound_file.wav\" /&gt;\n&lt;/sound&gt;\n&lt;sound name=\"MySoundEffect2\"&gt;\n&lt;sample weight=\"1\" path=\"sound_effect_variation_1.wav\"/&gt;\n&lt;sample weight=\"1\" path=\"sound_effect_variation_2.wav\"/&gt;\n&lt;sample weight=\"1\" path=\"sound_effect_variation_3.wav\"/&gt;\n&lt;/sound&gt;\n&lt;/sounds&gt;\n</code></pre>","tags":["File"]},{"location":"xml/stages.html","title":"File \"stages.xml\"","text":"<p>This file is used to store informations about the Levels / Stages of the game.</p> <p>Resource-Folder: Placing this file in your mods \"resource\" folder will replace the original file.</p> <p>Content-Folder: Placing this file in your mods \"content\" folder has no effect!</p> Variable-Name Possible Values Description id int Internal identifier of the Stage name string Display name of the Stage path string Filename of the .stb file found in the \"rooms\" folder, BUT written as an .xml file path (simply replace .stb with .xml in your filename) playerspot string Path to the .png file, displayed under the player sprite, that should be used for the Boss-Fight-transition animation bossspot string Same is playerspot, but displayed under the boss sprite","tags":["File"]},{"location":"xml/translations.html","title":"File \"translations.xml\"","text":"<p>This file is used to store a mapping of possible game translation packages. Used for Japanese and Korean.</p> Bug <p>This file seems to do nothing useful!</p> <p>Resource-Folder: Placing this file in your mods \"resources\" folder has no effect!</p> <p>Content-Folder: Placing this file in your mods \"content\" folder has no effect!</p> Variable-Name Possible Values Description id string short ID of the language. Used in the options.ini file and possible indicator for the resources package extention (eg. folder: \"resources.jp\") name string Name of the language. No usage for it found yet","tags":["File"]},{"location":"xml/wisps.html","title":"File \"wisps.xml\"","text":"<p>This file is used to define the properties of Wisp familiars, spawned by Book of Virtues.</p> <p>Resource-Folder: Using this file in a resource folder of a mod is not tested yet.</p> <p>Content-Folder: Using this file in a content folder of a mod is not tested yet.</p>","tags":["File"]},{"location":"xml/wisps.html#color-nodes","title":"\"color\" nodes","text":"<p>Used to define color a locust can have.</p> Variable-Name Possible Values Description name str Name of the color which will be used to reference it in the \"locust\" nodes r int Red g int Green b int Blue or int Offset Red og int Offset Blue ob int Offset Green","tags":["File"]},{"location":"xml/wisps.html#wisp-nodes","title":"\"wisp\" nodes","text":"Variable-Name Possible Values Description id string ID of the collectible item in the active slot when Book of Virtues got activated canShoot bool Set to false if the wisp cant shoot coreColor string Name of color used by the core of the wisp coreGfx string count int number of locusts spawned damage int Damage the wisp does damageMultiplier2 int fireDelay int flameColor string Name of color used by the flame of the wisp hp int layer int Used values: ['-1', '0', '1', '2'] priority int Used values: ['-1', '99'] procChance ['0.075', '0.05', '0.025', '0.1', '0.2', '0.3', '0.15', '0.33'] shotSpeed int tearColor string Name of color used by the tear tearColor2 string Name of color used by the tear tearFlags int tearFlags2 int tearScale int tearScale2 string tearVariant int","tags":["File"]},{"location":"tags.html","title":"Tags","text":"","boost":-999},{"location":"tags.html#class","title":"Class","text":"<ul> <li>BitSet128</li> <li>Color</li> <li>RoomConfigEntries</li> <li>RoomConfigSpawns</li> <li>RoomDescriptor</li> <li>intValues</li> <li>EntityList</li> <li>CardConfigList</li> <li>CostumeConfigList</li> <li>EffectList</li> <li>ItemConfigList</li> <li>PillConfigList</li> <li>VectorList</li> <li>Entity</li> <li>EntityBomb</li> <li>EntityEffect</li> <li>EntityFamiliar</li> <li>EntityKnife</li> <li>EntityLaser</li> <li>EntityNPC</li> <li>EntityPickup</li> <li>EntityPlayer</li> <li>EntityProjectile</li> <li>EntityPtr</li> <li>EntityRef</li> <li>EntityTear</li> <li>Font</li> <li>Game</li> <li>GridEntity</li> <li>GridEntityDesc</li> <li>GridEntityDoor</li> <li>GridEntityPit</li> <li>GridEntityPoop</li> <li>GridEntityPressurePlate</li> <li>GridEntityRock</li> <li>GridEntitySpikes</li> <li>GridEntityTNT</li> <li>HUD</li> <li>Input</li> <li>ItemConfig Functions</li> <li>ItemConfig - Card</li> <li>ItemConfig - Costume</li> <li>ItemConfig - Item</li> <li>ItemConfig - PillEffect</li> <li>ItemPool</li> <li>KColor</li> <li>Level</li> <li>Mod Reference</li> <li>MusicManager</li> <li>Options</li> <li>PathFinder</li> <li>PlayerTypesActiveItemDesc</li> <li>PlayerTypesPosVel</li> <li>ProjectileParams</li> <li>QueueItemData</li> <li>RNG</li> <li>Room</li> <li>Entry</li> <li>Room</li> <li>Spawn</li> <li>RoomDescriptor</li> <li>SFXManager</li> <li>Seeds</li> <li>Sprite</li> <li>TearParams</li> <li>TemporaryEffect</li> <li>TemporaryEffects</li> <li>Vector</li> </ul>","boost":-999},{"location":"tags.html#enum","title":"Enum","text":"<ul> <li>ActionTriggers</li> <li>ActiveSlot</li> <li>BabySubType</li> <li>BackdropType</li> <li>BatterySubType</li> <li>BedSubType</li> <li>BombSubType</li> <li>BombVariant</li> <li>ButtonAction</li> <li>CacheFlag</li> <li>CallbackPriority</li> <li>Card</li> <li>Challenge</li> <li>ChampionColor</li> <li>ChestSubType</li> <li>CoinSubType</li> <li>CollectibleType</li> <li>DamageFlag</li> <li>Difficulty</li> <li>Direction</li> <li>DoorSlot</li> <li>DoorState</li> <li>DoorVariant</li> <li>EffectVariant</li> <li>EntityCollisionClass</li> <li>EntityFlag</li> <li>EntityGridCollisionClass</li> <li>EntityPartition</li> <li>EntityType</li> <li>FamiliarVariant</li> <li>GameStateFlag</li> <li>GridCollisionClass</li> <li>GridEntityType</li> <li>GridRooms</li> <li>HeartSubType</li> <li>InputHook</li> <li>ItemConfig</li> <li>ItemPoolType</li> <li>ItemType</li> <li>KeySubType</li> <li>Keyboard</li> <li>LaserOffset</li> <li>LaserSubType</li> <li>LaserVariant</li> <li>LevelCurse</li> <li>LevelStage</li> <li>LevelStateFlag</li> <li>LocustSubtypes</li> <li>ModCallbacks</li> <li>Mouse</li> <li>Music</li> <li>NpcState</li> <li>NullItemID</li> <li>PickupPrice</li> <li>PickupVariant</li> <li>PillColor</li> <li>PillEffect</li> <li>PlayerForm</li> <li>PlayerSpriteLayer</li> <li>PlayerType</li> <li>PoopPickupSubType</li> <li>PoopSpellType</li> <li>ProjectileFlags</li> <li>ProjectileVariant</li> <li>RenderMode</li> <li>RoomDescriptor</li> <li>RoomShape</li> <li>RoomTransitionAnim</li> <li>RoomType</li> <li>SackSubType</li> <li>SeedEffect</li> <li>SkinColor</li> <li>SortingLayer</li> <li>SoundEffect</li> <li>StageType</li> <li>TearFlags</li> <li>TearVariant</li> <li>TrinketType</li> <li>UseFlag</li> <li>WeaponType</li> </ul>","boost":-999},{"location":"tags.html#faq","title":"FAQ","text":"<ul> <li>\u5e38\u89c1\u95ee\u9898</li> <li>\u4ea4\u4e92\u5f0f\u95ee\u7b54</li> </ul>","boost":-999},{"location":"tags.html#file","title":"File","text":"<ul> <li>achievements.xml</li> <li>ambush.xml</li> <li>babies.xml</li> <li>backdrops.xml</li> <li>bombcostumes.xml</li> <li>bosscolors.xml</li> <li>bossoverlays.xml</li> <li>bosspools.xml</li> <li>bossportraits.xml</li> <li>challenges.xml</li> <li>costumes2.xml</li> <li>curses.xml</li> <li>cutscenes.xml</li> <li>entities2.xml</li> <li>fortunes.txt</li> <li>fxlayers.xml</li> <li>giantbook.xml</li> <li>itempools.xml</li> <li>items.xml</li> <li>items_metadata.xml</li> <li>locusts.xml</li> <li>minibosses.xml</li> <li>music.xml</li> <li>nightmares.xml</li> <li>playerforms.xml</li> <li>players.xml</li> <li>pocketitems.xml</li> <li>preload.xml</li> <li>recipes.xml</li> <li>rules.txt</li> <li>seedmenu.xml</li> <li>seeds.txt</li> <li>sounds.xml</li> <li>stages.xml</li> <li>translations.xml</li> <li>wisps.xml</li> </ul>","boost":-999},{"location":"tags.html#globals","title":"Globals","text":"<ul> <li>BitSet128</li> <li>Color</li> <li>EntityPtr</li> <li>EntityRef</li> <li>Font</li> <li>Game</li> <li>\u5168\u5c40\u51fd\u6570</li> <li>\u5168\u5c40\u53d8\u91cf</li> <li>KColor</li> <li>MusicManager</li> <li>Options</li> <li>ProjectileParams</li> <li>RNG</li> <li>SFXManager</li> <li>Sprite</li> <li>Vector</li> </ul>","boost":-999},{"location":"tags.html#isaac","title":"Isaac","text":"<ul> <li>Isaac</li> </ul>","boost":-999},{"location":"tags.html#player","title":"Player","text":"<ul> <li>EntityPlayer</li> </ul>","boost":-999},{"location":"tags.html#tools","title":"Tools","text":"<ul> <li>\u52a8\u753b\u7f16\u8f91\u5668</li> <li>\u9053\u5177\u6c60\u7f16\u8f91\u5668</li> <li>XML\u9a8c\u8bc1\u5668</li> <li>\u5de5\u5177\u6982\u89c8</li> </ul>","boost":-999},{"location":"tags.html#tutorial","title":"Tutorial","text":"<ul> <li>\u4f7f\u7528\u6807\u51c6\u5e93</li> <li>\u52a8\u753b\u7f16\u8f91\u5668</li> <li>\u9053\u5177\u6c60\u7f16\u8f91\u5668</li> <li>\u6e32\u67d3\u6587\u672c</li> <li>\u4f7f\u7528\u989d\u5916\u7684.lua\u6587\u4ef6</li> <li>\u76ee\u5f55\u548c\u5b58\u6863\u6587\u4ef6</li> <li>\u7ec4\u7ec7Mod</li> <li>\u50a8\u5b58\u6570\u636e</li> </ul>","boost":-999},{"location":"tags.html#_1","title":"\u5168\u5c40","text":"<ul> <li>Isaac</li> </ul>","boost":-999},{"location":"tags.html#_2","title":"\u6559\u7a0b","text":"<ul> <li>\u4e0d\u4f7f\u7528Lua\u6dfb\u52a0\u9053\u5177\u5916\u89c2</li> <li>\u81ea\u5b9a\u4e49\u56de\u8c03</li> <li>\u63a7\u5236\u53f0</li> <li>\u793a\u4f8b\u9879\u76ee</li> <li>Lua\u4e2d\u7684\u51fd\u6570</li> <li>\u6570\u5b66\u548cLua\u6280\u5de7</li> <li>\u7f16\u5199\u5c4f\u5e55\u7740\u8272\u5668</li> <li>\u4f7f\u7528ZeroBrane Studio\u8fdb\u884c\u8c03\u8bd5</li> </ul>","boost":-999},{"location":"tags.html#_3","title":"\u7c7b","text":"<ul> <li>Isaac</li> </ul>","boost":-999}]}